'use strict';

var array = require('./array-5c116aa0.cjs');
var object = require('./object-dcdd6eed.cjs');

/**
 * Common functions and function call helpers.
 *
 * @module function
 */

/**
 * Calls all functions in `fs` with args. Only throws after all functions were called.
 *
 * @param {Array<function>} fs
 * @param {Array<any>} args
 */
const callAll = (fs, args, i = 0) => {
  try {
    for (; i < fs.length; i++) {
      fs[i](...args);
    }
  } finally {
    if (i < fs.length) {
      callAll(fs, args, i + 1);
    }
  }
};

const nop = () => {};

/**
 * @template T
 * @param {function():T} f
 * @return {T}
 */
const apply = f => f();

/**
 * @template A
 *
 * @param {A} a
 * @return {A}
 */
const id = a => a;

/**
 * @template T
 *
 * @param {T} a
 * @param {T} b
 * @return {boolean}
 */
const equalityStrict = (a, b) => a === b;

/**
 * @template T
 *
 * @param {Array<T>|object} a
 * @param {Array<T>|object} b
 * @return {boolean}
 */
const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))));

var _function = /*#__PURE__*/Object.freeze({
  __proto__: null,
  callAll: callAll,
  nop: nop,
  apply: apply,
  id: id,
  equalityStrict: equalityStrict,
  equalityFlat: equalityFlat
});

exports._function = _function;
exports.apply = apply;
exports.callAll = callAll;
exports.equalityFlat = equalityFlat;
exports.equalityStrict = equalityStrict;
exports.id = id;
exports.nop = nop;
//# sourceMappingURL=function-040981e4.cjs.map
