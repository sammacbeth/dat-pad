{"version":3,"file":"tests.js","sources":["../node_modules/lib0/array.js","../node_modules/lib0/math.js","../node_modules/lib0/map.js","../node_modules/lib0/string.js","../node_modules/lib0/conditions.js","../node_modules/lib0/storage.js","../node_modules/lib0/environment.js","../node_modules/lib0/buffer.js","../node_modules/lib0/binary.js","../node_modules/lib0/number.js","../node_modules/lib0/encoding.js","../node_modules/lib0/decoding.js","../src/utils/DeleteSet.js","../node_modules/lib0/set.js","../node_modules/lib0/observable.js","../node_modules/isomorphic.js/iso-browser.js","../node_modules/lib0/isomorphic.js","../node_modules/lib0/random.js","../src/utils/Doc.js","../src/utils/encoding.js","../node_modules/lib0/object.js","../node_modules/lib0/function.js","../src/utils/EventHandler.js","../node_modules/lib0/error.js","../src/utils/ID.js","../src/utils/isParentOf.js","../src/utils/PermanentUserData.js","../src/utils/RelativePosition.js","../src/utils/Snapshot.js","../src/utils/StructStore.js","../src/utils/Transaction.js","../node_modules/lib0/metric.js","../node_modules/lib0/time.js","../src/utils/UndoManager.js","../src/utils/YEvent.js","../node_modules/lib0/iterator.js","../src/types/AbstractType.js","../src/types/YArray.js","../src/types/YMap.js","../src/types/YText.js","../src/types/YXmlFragment.js","../src/types/YXmlElement.js","../src/types/YXmlEvent.js","../src/types/YXmlHook.js","../src/types/YXmlText.js","../src/structs/AbstractStruct.js","../src/structs/GC.js","../src/structs/ContentBinary.js","../src/structs/ContentDeleted.js","../src/structs/ContentEmbed.js","../src/structs/ContentFormat.js","../src/structs/ContentJSON.js","../src/structs/ContentAny.js","../src/structs/ContentString.js","../src/structs/ContentType.js","../src/structs/Item.js","../node_modules/lib0/symbol.js","../node_modules/lib0/pair.js","../node_modules/lib0/dom.js","../node_modules/lib0/json.js","../node_modules/lib0/eventloop.js","../node_modules/lib0/logging.js","../node_modules/lib0/prng/Xorshift32.js","../node_modules/lib0/prng/Xoroshiro128plus.js","../node_modules/lib0/prng.js","../node_modules/lib0/statistics.js","../node_modules/lib0/testing.js","../node_modules/y-protocols/sync.js","../tests/testHelper.js","../tests/y-array.tests.js","../tests/y-map.tests.js","../tests/y-text.tests.js","../tests/y-xml.tests.js","../tests/encoding.tests.js","../tests/undo-redo.tests.js","../tests/index.js"],"sourcesContent":["/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = new Array(nextLen)\n    for (let i = 0; i < nextLen; i++) {\n      bytes[i] = buf[bufPos++]\n    }\n    encodedString += String.fromCodePoint.apply(null, bytes)\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport const utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true })\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* global localStorage */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} value\n   */\n  setItem (key, value) {\n    this.map.set(key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    } else {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => new Uint8Array(Buffer.from(s, 'base64').buffer)\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\nexport const BITS31 = 0x7FFFFFFF\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num >>>= 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  let isNegative = false\n  if (num < 0) {\n    num = -num\n    isNegative = true\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num >>>= 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num >>>= 7\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeVarString = (encoder, str) =>\n  writeVarUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write the content of another Encoder.\n *\n * TODO: can be improved!\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing position.\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing position.\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing position.\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let len = 0\n  while (true) {\n    const r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let len = 6\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nexport const readVarString = decoder =>\n  string.decodeUtf8(readVarUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n","\nimport {\n  findIndexSS,\n  createID,\n  getState,\n  splitItem,\n  iterateStructs,\n  Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array.js'\nimport * as math from 'lib0/math.js'\nimport * as map from 'lib0/map.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len === right.clock) {\n        left.len += right.len\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, id, length) => {\n  map.setIfUndefined(ds.clients, id.client, () => []).push(new DeleteItem(id.clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.id.clock === clock + len && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder, ds.clients.size)\n  ds.clients.forEach((dsitems, client) => {\n    encoding.writeVarUint(encoder, client)\n    const len = dsitems.length\n    encoding.writeVarUint(encoder, len)\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i]\n      encoding.writeVarUint(encoder, item.clock)\n      encoding.writeVarUint(encoder, item.len)\n    }\n  })\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder)\n  for (let i = 0; i < numClients; i++) {\n    const client = decoding.readVarUint(decoder)\n    const numberOfDeletes = decoding.readVarUint(decoder)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      addToDeleteSet(ds, createID(client, decoding.readVarUint(decoder)), decoding.readVarUint(decoder))\n    }\n  }\n  return ds\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder)\n  for (let i = 0; i < numClients; i++) {\n    const client = decoding.readVarUint(decoder)\n    const numberOfDeletes = decoding.readVarUint(decoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoding.readVarUint(decoder)\n      const len = decoding.readVarUint(decoder)\n      if (clock < state) {\n        if (state < clock + len) {\n          addToDeleteSet(unappliedDS, createID(client, state), clock + len - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clock + len) {\n            if (!struct.deleted) {\n              if (clock + len < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clock + len - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, createID(client, clock), len)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    // TODO: no need for encoding+decoding ds anymore\n    const unappliedDSEncoder = encoding.createEncoder()\n    writeDeleteSet(unappliedDSEncoder, unappliedDS)\n    store.pendingDeleteReaders.push(decoding.createDecoder(encoding.toUint8Array(unappliedDSEncoder)))\n  }\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/* eslint-env browser */\nconst perf = typeof performance === 'undefined' ? null : performance\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nconst cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const arr = new Uint8Array(len)\n    isoCrypto.getRandomValues(arr)\n    return arr.buffer\n  }\n  : len => {\n    // polyfill\n    const arr = new Uint8Array(len)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return arr.buffer\n  }\n\nexports.performance = perf\nexports.cryptoRandomBuffer = cryptoRandomBuffer\n","/**\n * Isomorphic library exports from isomorphic.js.\n *\n * @module isomorphic\n */\n\n// @ts-ignore\nimport iso from 'isomorphic.js'\n\nexport const performance = /** @type {any} */ (iso.performance)\nexport const cryptoRandomBuffer = /** @type {any} */ (iso.cryptoRandomBuffer)\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\n/* istanbul ignore next */\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable.js'\nimport * as random from 'lib0/random.js'\nimport * as map from 'lib0/map.js'\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {Object} conf configuration\n   * @param {boolean} [conf.gc] Disable garbage collection (default: gc=true)\n   * @param {function(Item):boolean} [conf.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n   */\n  constructor ({ gc = true, gcFilter = () => true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = random.uint32()\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} name\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name) {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} name\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name) {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @param {string} name\n   * @return {YMap<any>}\n   *\n   * @public\n   */\n  getMap (name) {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} name\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name) {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    this.emit('destroyed', [true])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","\n/**\n * @module encoding\n *\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  GCRef,\n  ItemRef,\n  writeID,\n  createID,\n  readID,\n  getState,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  Doc, Transaction, AbstractStruct, StructStore, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as binary from 'lib0/binary.js'\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Array<AbstractStruct>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder, structs.length - startNewStructs)\n  writeID(encoder, createID(client, clock))\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock, 0)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0, 0)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @param {number} numOfStructs\n * @param {ID} nextID\n * @return {Array<GCRef|ItemRef>}\n *\n * @private\n * @function\n */\nconst readStructRefs = (decoder, numOfStructs, nextID) => {\n  /**\n   * @type {Array<GCRef|ItemRef>}\n   */\n  const refs = []\n  for (let i = 0; i < numOfStructs; i++) {\n    const info = decoding.readUint8(decoder)\n    const ref = (binary.BITS5 & info) === 0 ? new GCRef(decoder, nextID, info) : new ItemRef(decoder, nextID, info)\n    nextID = createID(nextID.client, nextID.clock + ref.length)\n    refs.push(ref)\n  }\n  return refs\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder, sm.size)\n  sm.forEach((clock, client) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {decoding.Decoder} decoder The decoder object to read data from.\n * @return {Map<number,Array<GCRef|ItemRef>>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = decoder => {\n  /**\n   * @type {Map<number,Array<GCRef|ItemRef>>}\n   */\n  const clientRefs = new Map()\n  const numOfStateUpdates = decoding.readVarUint(decoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder)\n    const nextID = readID(decoder)\n    const refs = readStructRefs(decoder, numberOfStructs, nextID)\n    clientRefs.set(nextID.client, refs)\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nconst resumeStructIntegration = (transaction, store) => {\n  const stack = store.pendingStack\n  const clientsStructRefs = store.pendingClientsStructRefs\n  // iterate over all struct readers until we are done\n  while (stack.length !== 0 || clientsStructRefs.size !== 0) {\n    if (stack.length === 0) {\n      // take any first struct from clientsStructRefs and put it on the stack\n      const [client, structRefs] = clientsStructRefs.entries().next().value\n      stack.push(structRefs.refs[structRefs.i++])\n      if (structRefs.refs.length === structRefs.i) {\n        clientsStructRefs.delete(client)\n      }\n    }\n    const ref = stack[stack.length - 1]\n    const m = ref._missing\n    const client = ref.id.client\n    const localClock = getState(store, client)\n    const offset = ref.id.clock < localClock ? localClock - ref.id.clock : 0\n    if (ref.id.clock + offset !== localClock) {\n      // A previous message from this client is missing\n      // check if there is a pending structRef with a smaller clock and switch them\n      const structRefs = clientsStructRefs.get(client)\n      if (structRefs !== undefined) {\n        const r = structRefs.refs[structRefs.i]\n        if (r.id.clock < ref.id.clock) {\n          // put ref with smaller clock on stack instead and continue\n          structRefs.refs[structRefs.i] = ref\n          stack[stack.length - 1] = r\n          // sort the set because this approach might bring the list out of order\n          structRefs.refs = structRefs.refs.slice(structRefs.i).sort((r1, r2) => r1.id.clock - r2.id.clock)\n          structRefs.i = 0\n          continue\n        }\n      }\n      // wait until missing struct is available\n      return\n    }\n    while (m.length > 0) {\n      const missing = m[m.length - 1]\n      if (getState(store, missing.client) <= missing.clock) {\n        const client = missing.client\n        // get the struct reader that has the missing struct\n        const structRefs = clientsStructRefs.get(client)\n        if (structRefs === undefined) {\n          // This update message causally depends on another update message.\n          return\n        }\n        stack.push(structRefs.refs[structRefs.i++])\n        if (structRefs.i === structRefs.refs.length) {\n          clientsStructRefs.delete(client)\n        }\n        break\n      }\n      ref._missing.pop()\n    }\n    if (m.length === 0) {\n      if (offset < ref.length) {\n        ref.toStruct(transaction, store, offset).integrate(transaction)\n      }\n      stack.pop()\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const tryResumePendingDeleteReaders = (transaction, store) => {\n  const pendingReaders = store.pendingDeleteReaders\n  store.pendingDeleteReaders = []\n  for (let i = 0; i < pendingReaders.length; i++) {\n    readAndApplyDeleteSet(pendingReaders[i], transaction, store)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * @param {StructStore} store\n * @param {Map<number, Array<GCRef|ItemRef>>} clientsStructsRefs\n *\n * @private\n * @function\n */\nconst mergeReadStructsIntoPendingReads = (store, clientsStructsRefs) => {\n  const pendingClientsStructRefs = store.pendingClientsStructRefs\n  for (const [client, structRefs] of clientsStructsRefs) {\n    const pendingStructRefs = pendingClientsStructRefs.get(client)\n    if (pendingStructRefs === undefined) {\n      pendingClientsStructRefs.set(client, { refs: structRefs, i: 0 })\n    } else {\n      // merge into existing structRefs\n      const merged = pendingStructRefs.i > 0 ? pendingStructRefs.refs.slice(pendingStructRefs.i) : pendingStructRefs.refs\n      for (let i = 0; i < structRefs.length; i++) {\n        merged.push(structRefs[i])\n      }\n      pendingStructRefs.i = 0\n      pendingStructRefs.refs = merged.sort((r1, r2) => r1.id.clock - r2.id.clock)\n    }\n  }\n}\n\n/**\n * Read the next Item in a Decoder and fill this Item with the read data.\n *\n * This is called when data is received from a remote peer.\n *\n * @param {decoding.Decoder} decoder The decoder object to read data from.\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const readStructs = (decoder, transaction, store) => {\n  const clientsStructRefs = readClientsStructRefs(decoder)\n  mergeReadStructsIntoPendingReads(store, clientsStructRefs)\n  resumeStructIntegration(transaction, store)\n  tryResumePendingDeleteReaders(transaction, store)\n}\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) =>\n  transact(ydoc, transaction => {\n    readStructs(decoder, transaction, ydoc.store)\n    readAndApplyDeleteSet(decoder, transaction, ydoc.store)\n  }, transactionOrigin, false)\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) =>\n  readUpdate(decoding.createDecoder(update), ydoc, transactionOrigin)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {encoding.Encoder} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => {\n  const encoder = encoding.createEncoder()\n  const targetStateVector = encodedTargetStateVector == null ? new Map() : decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {decoding.Decoder} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(decoding.createDecoder(decodedState))\n\n/**\n * Write State Vector to `lib0/encoding.js#Encoder`.\n *\n * @param {encoding.Encoder} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder, sv.size)\n  sv.forEach((clock, client) => {\n    encoding.writeVarUint(encoder, client)\n    encoding.writeVarUint(encoder, clock)\n  })\n  return encoder\n}\n\n/**\n * Write State Vector to `lib0/encoding.js#Encoder`.\n *\n * @param {encoding.Encoder} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => {\n  const encoder = encoding.createEncoder()\n  writeDocumentStateVector(encoder, doc)\n  return encoding.toUint8Array(encoder)\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n","import * as f from 'lib0/function.js'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  eventHandler.l = eventHandler.l.filter(g => f !== g)\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as error from 'lib0/error.js'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = child.parent._item\n  }\n  return false\n}\n","\nimport {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(decoding.createDecoder(encodedDs))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(decoding.createDecoder(encodedDs)))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = encoding.createEncoder()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoding.toUint8Array(encoder)])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = encoding.createEncoder()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoding.toUint8Array(encoder)])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n","\nimport {\n  createID,\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   */\n  constructor (type, tname, item) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n  }\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock))\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   */\n  constructor (type, index) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index) => new AbsolutePosition(type, index)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n *\n * @function\n */\nexport const createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = type._item.id\n  }\n  return new RelativePosition(typeid, tname, item)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index) => {\n  let t = type._start\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index))\n      }\n      index -= t.length\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition|null}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  return new RelativePosition(type, tname, itemID)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition|null}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = right.parent\n    if (type._item === null || !type._item.deleted) {\n      index = right.deleted || !right.countable ? 0 : res.diff\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    index = type._length\n  }\n  return createAbsolutePosition(type, index)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type)\n)\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  createID,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  getState,\n  Transaction, Doc, DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map.js'\nimport * as set from 'lib0/set.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => {\n  const encoder = encoding.createEncoder()\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => {\n  const decoder = decoding.createDecoder(buf)\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\n  snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\n    meta.add(snapshot)\n  }\n}\n","\nimport {\n  GC,\n  splitItem,\n  GCRef, ItemRef, Transaction, ID, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math.js'\nimport * as error from 'lib0/error.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * Store incompleted struct reads here\n     * `i` denotes to the next read operation\n     * We could shift the array of refs instead, but shift is incredible\n     * slow in Chrome for arrays with more than 100k elements\n     * @see tryResumePendingStructRefs\n     * @type {Map<number,{i:number,refs:Array<GCRef|ItemRef>}>}\n     */\n    this.pendingClientsStructRefs = new Map()\n    /**\n     * Stack of pending structs waiting for struct dependencies\n     * Maximum length of stack is structReaders.size\n     * @type {Array<GCRef|ItemRef>}\n     */\n    this.pendingStack = []\n    /**\n     * @type {Array<decoding.Decoder>}\n     */\n    this.pendingDeleteReaders = []\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<any>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = structs[midindex]\n    const midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\n// @ts-ignore\nexport const getItem = (store, id) => find(store, id)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  createID,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  StructStore, ID, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as map from 'lib0/map.js'\nimport * as math from 'lib0/math.js'\nimport * as set from 'lib0/set.js'\nimport { callAll } from 'lib0/function.js'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Set<ID>}\n     */\n    this._mergeStructs = new Set()\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n  }\n}\n\n/**\n * @param {Transaction} transaction\n */\nexport const computeUpdateMessageFromTransaction = transaction => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return null\n  }\n  const encoder = encoding.createEncoder()\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return encoder\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1]\n  const right = structs[pos]\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1)\n      if (right instanceof Item && right.parentSub !== null && right.parent._map.get(right.parentSub) === right) {\n        right.parent._map.set(right.parentSub, /** @type {Item} */ (left))\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients) {\n    const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  for (const [client, deleteItems] of ds.clients) {\n    const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si)\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc._transaction = null\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                )\n              events\n                .forEach(event => {\n                  event.currentTarget = type\n                })\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction)\n            }\n          })\n        )\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      })\n      callAll(fs, [])\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      for (const [client, clock] of transaction.afterState) {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i)\n          }\n        }\n      }\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (const mid of transaction._mergeStructs) {\n        const client = mid.client\n        const clock = mid.clock\n        const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos)\n        }\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const updateMessage = computeUpdateMessageFromTransaction(transaction)\n        if (updateMessage !== null) {\n          doc.emit('update', [encoding.toUint8Array(updateMessage), transaction.origin, doc])\n        }\n      }\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    f(doc._transaction)\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0)\n    }\n  }\n}\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  redoItem,\n  iterateStructs,\n  isParentOf,\n  createID,\n  followRedone,\n  getItemCleanStart,\n  getState,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time.js'\nimport { Observable } from 'lib0/observable.js'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} ds\n   * @param {number} start clock start of the local client\n   * @param {number} len\n   */\n  constructor (ds, start, len) {\n    this.ds = ds\n    this.start = start\n    this.len = len\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const clientID = doc.clientID\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      const stackStartClock = stackItem.start\n      const stackEndClock = stackItem.start + stackItem.len\n      const itemsToRedo = new Set()\n      // @todo iterateStructs should not need the structs parameter\n      const structs = /** @type {Array<GC|Item>} */ (store.clients.get(clientID))\n      let performedChange = false\n      if (stackStartClock !== stackEndClock) {\n        // make sure structs don't overlap with the range of created operations [stackItem.start, stackItem.start + stackItem.end)\n        getItemCleanStart(transaction, createID(clientID, stackStartClock))\n        if (stackEndClock < getState(doc.store, clientID)) {\n          getItemCleanStart(transaction, createID(clientID, stackEndClock))\n        }\n      }\n      iterateDeletedStructs(transaction, stackItem.ds, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in [stackItem.start, stackItem.start + stackItem.end) because they were created and deleted in the same capture interval.\n          !(struct.id.client === clientID && struct.id.clock >= stackStartClock && struct.id.clock < stackEndClock)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo) !== null || performedChange\n      })\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      iterateStructs(transaction, structs, stackStartClock, stackItem.len, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            if (item.length > stackItem.len) {\n              getItemCleanStart(transaction, createID(item.id.client, stackEndClock))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = stackItem\n      if (result != null) {\n        undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType }, undoManager])\n      }\n    }\n  }, undoManager)\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, { captureTimeout, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\n    if (captureTimeout == null) {\n      captureTimeout = 500\n    }\n    super()\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope]\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = /** @type {Doc} */ (this.scope[0].doc)\n    this.lastChange = 0\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = []\n      }\n      const beforeState = transaction.beforeState.get(this.doc.clientID) || 0\n      const afterState = transaction.afterState.get(this.doc.clientID) || 0\n      const now = time.getUnixTime()\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.ds = mergeDeleteSets([lastOp.ds, transaction.deleteSet])\n        lastOp.len = afterState - lastOp.start\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, beforeState, afterState - beforeState))\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo' }, this])\n    })\n  }\n\n  clear () {\n    this.doc.transact(transaction => {\n      /**\n       * @param {StackItem} stackItem\n       */\n      const clearItem = stackItem => {\n        iterateDeletedStructs(transaction, stackItem.ds, item => {\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n            keepItem(item, false)\n          }\n        })\n      }\n      this.undoStack.forEach(clearItem)\n      this.redoStack.forEach(clearItem)\n    })\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n}\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set.js'\nimport * as array from 'lib0/array.js'\n\n/**\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @return {{added:Set<Item>,deleted:Set<Item>,delta:Array<{insert:Array<any>}|{delete:number}|{retain:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      /**\n       * @type {Map<string,{ action: 'add' | 'update' | 'delete', oldValue: any}>}\n       */\n      const keys = new Map()\n      changes = {\n        added, deleted, delta, keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = child._item.parent._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = child._item.parent\n  }\n  return path\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  nextID,\n  isVisible,\n  ContentType,\n  ContentAny,\n  ContentBinary,\n  createID,\n  getItemCleanStart,\n  Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map.js'\nimport * as iterator from 'lib0/iterator.js'\nimport * as error from 'lib0/error.js'\nimport * as encoding from 'lib0/encoding.js' // eslint-disable-line\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = type._item.parent\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) { /* skip if no type is specified */ }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  for (let n = type._start; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    switch (c.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        jsonContent.push(c)\n        break\n      default:\n        packJsonContent()\n        switch (c.constructor) {\n          case Uint8Array:\n          case ArrayBuffer:\n            left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n            left.integrate(transaction)\n            break\n          default:\n            if (c instanceof AbstractType) {\n              left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentType(c))\n              left.integrate(transaction)\n            } else {\n              throw new Error('Unexpected content type in insert operation')\n            }\n        }\n    }\n  })\n  packJsonContent()\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index === 0) {\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  let n = parent._start\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  let n = parent._start\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw error.create('array length exceeded')\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(nextID(transaction), left, left === null ? null : left.lastId, null, null, parent, key, content).integrate(transaction)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  for (const [key, value] of parent._map) {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  }\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\nimport * as encoding from 'lib0/encoding.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {IterableIterator<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template T,M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YArrayRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n *\n * @private\n * @function\n */\nexport const readYArray = decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\nimport * as iterator from 'lib0/iterator.js'\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template T number|string|Object|Array|Uint8Array\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<T>>\n * @implements {IterableIterator}\n */\nexport class YMap extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = new Map()\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    for (const [key, value] of /** @type {Map<string, any>} */ (this._prelimContent)) {\n      this.set(key, value)\n    }\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,T>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    for (const [key, item] of this._map) {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    }\n    return map\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on overy key-value pair.\n   *\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    for (const [key, item] of this._map) {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    }\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {T} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {T|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YMapRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n *\n * @private\n * @function\n */\nexport const readYMap = decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  nextID,\n  createID,\n  getItemCleanStart,\n  isVisible,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\nimport * as encoding from 'lib0/encoding.js'\nimport * as object from 'lib0/object.js'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\nexport class ItemTextListPosition extends ItemListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, currentAttributes) {\n    super(left, right)\n    this.currentAttributes = currentAttributes\n  }\n}\n\nexport class ItemInsertionResult extends ItemListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {Map<string,any>} negatedAttributes\n   */\n  constructor (left, right, negatedAttributes) {\n    super(left, right)\n    this.negatedAttributes = negatedAttributes\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Map<string,any>} currentAttributes\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {number} count\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, currentAttributes, left, right, count) => {\n  while (right !== null && count > 0) {\n    switch (right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!right.deleted) {\n          if (count < right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(right.id.client, right.id.clock + count))\n          }\n          count -= right.length\n        }\n        break\n      case ContentFormat:\n        if (!right.deleted) {\n          updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n        }\n        break\n    }\n    left = right\n    right = right.right\n  }\n  return new ItemTextListPosition(left, right, currentAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const right = parent._start\n  return findNextPosition(transaction, currentAttributes, null, right, index)\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} negatedAttributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, left, right, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    right !== null && (\n      right.deleted === true || (\n        right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (right.content).key), /** @type {ContentFormat} */ (right.content).value)\n      )\n    )\n  ) {\n    if (!right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (right.content).key)\n    }\n    left = right\n    right = right.right\n  }\n  for (const [key, val] of negatedAttributes) {\n    left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentFormat(key, val))\n    left.integrate(transaction)\n  }\n  return { left, right }\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {Object<string,any>} attributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (left, right, currentAttributes, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (right === null) {\n      break\n    } else if (right.deleted) {\n      // continue\n    } else if (right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (right.content)).key] || null, /** @type {ContentFormat} */ (right.content).value)) {\n      // found a format, update currentAttributes and continue\n      updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n    } else {\n      break\n    }\n    left = right\n    right = right.right\n  }\n  return new ItemListPosition(left, right)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {Object<string,any>} attributes\n * @return {ItemInsertionResult}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, left, right, currentAttributes, attributes) => {\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentFormat(key, val))\n      left.integrate(transaction)\n    }\n  }\n  return new ItemInsertionResult(left, right, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {string|object} text\n * @param {Object<string,any>} attributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, left, right, currentAttributes, text, attributes) => {\n  for (const [key] of currentAttributes) {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  }\n  const minPos = minimizeAttributeChanges(left, right, currentAttributes, attributes)\n  const insertPos = insertAttributes(transaction, parent, minPos.left, minPos.right, currentAttributes, attributes)\n  left = insertPos.left\n  right = insertPos.right\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : new ContentEmbed(text)\n  left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, content)\n  left.integrate(transaction)\n  return insertNegatedAttributes(transaction, parent, left, insertPos.right, insertPos.negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {number} length\n * @param {Object<string,any>} attributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, left, right, currentAttributes, length, attributes) => {\n  const minPos = minimizeAttributeChanges(left, right, currentAttributes, attributes)\n  const insertPos = insertAttributes(transaction, parent, minPos.left, minPos.right, currentAttributes, attributes)\n  const negatedAttributes = insertPos.negatedAttributes\n  left = insertPos.left\n  right = insertPos.right\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && right !== null) {\n    if (!right.deleted) {\n      switch (right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              negatedAttributes.set(key, value)\n            }\n            right.delete(transaction)\n          }\n          updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n          break\n        }\n        case ContentEmbed:\n        case ContentString:\n          if (length < right.length) {\n            getItemCleanStart(transaction, createID(right.id.client, right.id.clock + length))\n          }\n          length -= right.length\n          break\n      }\n    }\n    left = right\n    right = right.right\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentString(newlines))\n    left.integrate(transaction)\n  }\n  return insertNegatedAttributes(transaction, parent, left, right, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {number} length\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, left, right, currentAttributes, length) => {\n  while (length > 0 && right !== null) {\n    if (right.deleted === false) {\n      switch (right.content.constructor) {\n        case ContentFormat:\n          updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n          break\n        case ContentEmbed:\n        case ContentString:\n          if (length < right.length) {\n            getItemCleanStart(transaction, createID(right.id.client, right.id.clock + length))\n          }\n          length -= right.length\n          right.delete(transaction)\n          break\n      }\n    }\n    left = right\n    right = right.right\n  }\n  return { left, right }\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @typedef {Object} DeltaItem\n * @property {number|undefined} DeltaItem.delete\n * @property {number|undefined} DeltaItem.retain\n * @property {string|undefined} DeltaItem.string\n * @property {Object<string,any>} DeltaItem.attributes\n */\n\n/**\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   */\n  constructor (ytext, transaction) {\n    super(ytext, transaction)\n    /**\n     * @type {Array<DeltaItem>|null}\n     */\n    this._delta = null\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<DeltaItem>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      this._delta = []\n      transact(y, transaction => {\n        const delta = /** @type {Array<DeltaItem>} */ (this._delta)\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  for (const [key, value] of currentAttributes) {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = /** @type {ContentEmbed} */ (item.content).embed\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      attributes[key] = value\n                    } else {\n                      delete attributes[key]\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n    }\n    return this._delta\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YTextEvent(this, transaction))\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   *\n   * @public\n   */\n  applyDelta (delta) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        /**\n         * @type {ItemListPosition}\n         */\n        let pos = new ItemListPosition(null, this._start)\n        const currentAttributes = new Map()\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (typeof op.insert === 'string' && i === delta.length - 1 && pos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              pos = insertText(transaction, this, pos.left, pos.right, currentAttributes, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            pos = formatText(transaction, this, pos.left, pos.right, currentAttributes, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            pos = deleteText(transaction, pos.left, pos.right, currentAttributes, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        for (const [key, value] of currentAttributes) {\n          addAttributes = true\n          attributes[key] = value\n        }\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot)\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot)\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: /** @type {ContentEmbed} */ (n.content).embed\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                for (const [key, value] of currentAttributes) {\n                  attrs[key] = value\n                }\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }, splitSnapshotAffectedStructs)\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, left, right, currentAttributes, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    if (embed.constructor !== Object) {\n      throw new Error('Embed must be an Object')\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, this, index)\n        insertText(transaction, this, left, right, currentAttributes, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, this, index)\n        deleteText(transaction, left, right, currentAttributes, length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, this, index)\n        if (right === null) {\n          return\n        }\n        formatText(transaction, this, left, right, currentAttributes, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YTextRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  Doc, ContentType, Transaction, Item, YXmlText, YXmlHook, Snapshot // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {IterableIterator}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = /** @type {ContentType} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {ContentType} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = n.parent._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  Snapshot, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YXmlElementRefID)\n    encoding.writeVarString(encoder, this.nodeName)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoding.readVarString(decoder))\n","\nimport {\n  YEvent,\n  YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string|null>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID\n} from '../internals.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    super._write(encoder)\n    encoding.writeVarUint(encoder, YXmlHookRefID)\n    encoding.writeVarString(encoder, this.hookName)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoding.readVarString(decoder))\n","\nimport { YText, YXmlTextRefID } from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YXmlTextRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  StructStore, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js' // eslint-disable-line\nimport * as error from 'lib0/error.js'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    /**\n     * The uniqe identifier of this struct.\n     * @type {ID}\n     * @readonly\n     */\n    this.id = id\n    this.length = length\n    this.deleted = false\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  integrate (transaction) {\n    throw error.methodUnimplemented()\n  }\n}\n\nexport class AbstractStructRef {\n  /**\n   * @param {ID} id\n   */\n  constructor (id) {\n    /**\n     * @type {Array<ID>}\n     */\n    this._missing = []\n    /**\n     * The uniqe identifier of this type.\n     * @type {ID}\n     */\n    this.id = id\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @return {Array<ID|null>}\n   */\n  getMissing (transaction) {\n    return this._missing\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @param {number} offset\n   * @return {AbstractStruct}\n   */\n  toStruct (transaction, store, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStructRef,\n  AbstractStruct,\n  createID,\n  addStruct,\n  StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    super(id, length)\n    this.deleted = true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  integrate (transaction) {\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeUint8(encoder, structGCRefNumber)\n    encoding.writeVarUint(encoder, this.length - offset)\n  }\n}\n\n/**\n * @private\n */\nexport class GCRef extends AbstractStructRef {\n  /**\n   * @param {decoding.Decoder} decoder\n   * @param {ID} id\n   * @param {number} info\n   */\n  constructor (decoder, id, info) {\n    super(id)\n    /**\n     * @type {number}\n     */\n    this.length = decoding.readVarUint(decoder)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @param {number} offset\n   * @return {GC}\n   */\n  toStruct (transaction, store, offset) {\n    if (offset > 0) {\n      // @ts-ignore\n      this.id = createID(this.id.client, this.id.clock + offset)\n      this.length -= offset\n    }\n    return new GC(\n      this.id,\n      this.length\n    )\n  }\n}\n","import {\n  StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as buffer from 'lib0/buffer.js'\nimport * as error from 'lib0/error.js'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarUint8Array(encoder, this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(buffer.copyUint8Array(decoding.readVarUint8Array(decoder)))\n","\nimport {\n  addToDeleteSet,\n  StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id, this.len)\n    item.deleted = true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarUint(encoder, this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoding.readVarUint(decoder))\n","\nimport {\n  StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarString(encoder, JSON.stringify(this.embed))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(JSON.parse(decoding.readVarString(decoder)))\n","\nimport {\n  Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarString(encoder, this.key)\n    encoding.writeVarString(encoder, JSON.stringify(this.value))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoding.readVarString(decoder), JSON.parse(decoding.readVarString(decoder)))\n","import {\n  Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoding.writeVarUint(encoder, len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoding.writeVarString(encoder, c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoding.readVarUint(decoder)\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoding.readVarString(decoder)\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoding.writeVarUint(encoder, len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoding.writeAny(encoder, c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoding.readVarUint(decoder)\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoding.readAny(decoder))\n  }\n  return new ContentAny(cs)\n}\n","import {\n  Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarString(encoder, offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoding.readVarString(decoder))\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js' // eslint-disable-line\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @type {Array<function(decoding.Decoder):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.add(item.id)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.add(item.id)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoding.readVarUint(decoder)](decoder))\n","\nimport {\n  readID,\n  createID,\n  writeID,\n  GC,\n  nextID,\n  AbstractStructRef,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as maplib from 'lib0/map.js'\nimport * as set from 'lib0/set.js'\nimport * as binary from 'lib0/binary.js'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = item.parent._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  const id = leftItem.id\n  // create rightItem\n  const rightItem = new Item(\n    createID(id.client, id.clock + diff),\n    leftItem,\n    createID(id.client, id.clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.deleted = true\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.add(rightItem.id)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    rightItem.parent._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems) => {\n  if (item.redone !== null) {\n    return getItemCleanStart(transaction, item.redone)\n  }\n  let parentItem = item.parent._item\n  /**\n   * @type {Item|null}\n   */\n  let left\n  /**\n   * @type {Item|null}\n   */\n  let right\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n  } else {\n    // Is a map item. Insert as current value\n    left = item\n    while (left.right !== null) {\n      left = left.right\n      if (left.id.client !== transaction.doc.clientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (item.parent._map.get(item.parentSub))\n    }\n    right = null\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && leftTrace.parent._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && leftTrace.parent._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && rightTrace.parent._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && rightTrace.parent._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  }\n  const redoneItem = new Item(\n    nextID(transaction),\n    left, left === null ? null : left.lastId,\n    right, right === null ? null : right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = redoneItem.id\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>} parent\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     * @readonly\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @readonly\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * The parent type.\n     * @type {AbstractType<any>}\n     * @readonly\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     * @readonly\n     */\n    this.parentSub = parentSub\n    /**\n     * Whether this item was deleted or not.\n     * @type {Boolean}\n     */\n    this.deleted = false\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    this.length = content.getLength()\n    this.countable = content.isCountable()\n    /**\n     * If true, do not garbage collect this Item.\n     */\n    this.keep = false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  integrate (transaction) {\n    const store = transaction.doc.store\n    const id = this.id\n    const parent = this.parent\n    const parentSub = this.parentSub\n    const length = this.length\n    /**\n     * @type {Item|null}\n     */\n    let o\n    // set o to the first conflicting item\n    if (this.left !== null) {\n      o = this.left.right\n    } else if (parentSub !== null) {\n      o = parent._map.get(parentSub) || null\n      while (o !== null && o.left !== null) {\n        o = o.left\n      }\n    } else {\n      o = parent._start\n    }\n    // TODO: use something like DeleteSet here (a tree implementation would be best)\n    /**\n     * @type {Set<Item>}\n     */\n    const conflictingItems = new Set()\n    /**\n     * @type {Set<Item>}\n     */\n    const itemsBeforeOrigin = new Set()\n    // Let c in conflictingItems, b in itemsBeforeOrigin\n    // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n    // Note that conflictingItems is a subset of itemsBeforeOrigin\n    while (o !== null && o !== this.right) {\n      itemsBeforeOrigin.add(o)\n      conflictingItems.add(o)\n      if (compareIDs(this.origin, o.origin)) {\n        // case 1\n        if (o.id.client < id.client) {\n          this.left = o\n          conflictingItems.clear()\n        }\n      } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(store, o.origin))) {\n        // case 2\n        if (o.origin === null || !conflictingItems.has(getItem(store, o.origin))) {\n          this.left = o\n          conflictingItems.clear()\n        }\n      } else {\n        break\n      }\n      o = o.right\n    }\n    // reconnect left/right + update parent map/start if necessary\n    if (this.left !== null) {\n      const right = this.left.right\n      this.right = right\n      this.left.right = this\n    } else {\n      let r\n      if (parentSub !== null) {\n        r = parent._map.get(parentSub) || null\n        while (r !== null && r.left !== null) {\n          r = r.left\n        }\n      } else {\n        r = parent._start\n        parent._start = this\n      }\n      this.right = r\n    }\n    if (this.right !== null) {\n      this.right.left = this\n    } else if (parentSub !== null) {\n      // set as current parent value if right === null and this is parentSub\n      parent._map.set(parentSub, this)\n      if (this.left !== null) {\n        // this is the current attribute value of parent. delete right\n        this.left.delete(transaction)\n      }\n    }\n    // adjust length of parent\n    if (parentSub === null && this.countable && !this.deleted) {\n      parent._length += length\n    }\n    addStruct(store, this)\n    this.content.integrate(transaction, this)\n    // add parent to transaction.changed\n    addChangedTypeToTransaction(transaction, parent, parentSub)\n    if ((parent._item !== null && parent._item.deleted) || (this.right !== null && parentSub !== null)) {\n      // delete if parent is deleted or if this is not the current attribute value of parent\n      this.delete(transaction)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    return createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = this.parent\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.deleted = true\n      addToDeleteSet(transaction.deleteSet, this.id, this.length)\n      maplib.setIfUndefined(transaction.changed, parent, set.create).add(this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoding.writeUint8(encoder, info)\n    if (origin !== null) {\n      writeID(encoder, origin)\n    }\n    if (rightOrigin !== null) {\n      writeID(encoder, rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = this.parent\n      if (parent._item === null) {\n        // parent type on y._map\n        // find the correct key\n        const ykey = findRootTypeKey(parent)\n        encoding.writeVarUint(encoder, 1) // write parentYKey\n        encoding.writeVarString(encoder, ykey)\n      } else {\n        encoding.writeVarUint(encoder, 0) // write parent id\n        writeID(encoder, parent._item.id)\n      }\n      if (parentSub !== null) {\n        encoding.writeVarString(encoder, parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(decoding.Decoder):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { throw error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted,\n  readContentJSON,\n  readContentBinary,\n  readContentString,\n  readContentEmbed,\n  readContentFormat,\n  readContentType,\n  readContentAny\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n\n/**\n * @private\n */\nexport class ItemRef extends AbstractStructRef {\n  /**\n   * @param {decoding.Decoder} decoder\n   * @param {ID} id\n   * @param {number} info\n   */\n  constructor (decoder, id, info) {\n    super(id)\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.left = (info & binary.BIT8) === binary.BIT8 ? readID(decoder) : null\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.right = (info & binary.BIT7) === binary.BIT7 ? readID(decoder) : null\n    const canCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n    const hasParentYKey = canCopyParentInfo ? decoding.readVarUint(decoder) === 1 : false\n    /**\n     * If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n     * and we read the next string as parentYKey.\n     * It indicates how we store/retrieve parent from `y.share`\n     * @type {string|null}\n     */\n    this.parentYKey = canCopyParentInfo && hasParentYKey ? decoding.readVarString(decoder) : null\n    /**\n     * The parent type.\n     * @type {ID | null}\n     */\n    this.parent = canCopyParentInfo && !hasParentYKey ? readID(decoder) : null\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = canCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoding.readVarString(decoder) : null\n    const missing = this._missing\n    if (this.left !== null) {\n      missing.push(this.left)\n    }\n    if (this.right !== null) {\n      missing.push(this.right)\n    }\n    if (this.parent !== null) {\n      missing.push(this.parent)\n    }\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = readItemContent(decoder, info)\n    this.length = this.content.getLength()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @param {number} offset\n   * @return {Item|GC}\n   */\n  toStruct (transaction, store, offset) {\n    if (offset > 0) {\n      /**\n       * @type {ID}\n       */\n      const id = this.id\n      this.id = createID(id.client, id.clock + offset)\n      this.left = createID(this.id.client, this.id.clock - 1)\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    const left = this.left === null ? null : getItemCleanEnd(transaction, store, this.left)\n    const right = this.right === null ? null : getItemCleanStart(transaction, this.right)\n    let parent = null\n    let parentSub = this.parentSub\n    if (this.parent !== null) {\n      const parentItem = getItem(store, this.parent)\n      // Edge case: toStruct is called with an offset > 0. In this case left is defined.\n      // Depending in which order structs arrive, left may be GC'd and the parent not\n      // deleted. This is why we check if left is GC'd. Strictly we don't have\n      // to check if right is GC'd, but we will in case we run into future issues\n      if (!parentItem.deleted && (left === null || left.constructor !== GC) && (right === null || right.constructor !== GC)) {\n        parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    } else if (this.parentYKey !== null) {\n      parent = transaction.doc.get(this.parentYKey)\n    } else if (left !== null) {\n      if (left.constructor !== GC) {\n        parent = left.parent\n        parentSub = left.parentSub\n      }\n    } else if (right !== null) {\n      if (right.constructor !== GC) {\n        parent = right.parent\n        parentSub = right.parentSub\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n\n    return parent === null\n      ? new GC(this.id, this.length)\n      : new Item(\n        this.id,\n        left,\n        this.left,\n        right,\n        this.right,\n        parent,\n        parentSub,\n        this.content\n      )\n  }\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  map.map(attrs, (value, key) => el.setAttribute(key, value))\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    fragment.appendChild(children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  parent.appendChild(fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement|DocumentFragment} child\n * @return {HTMLElement|DocumentFragment}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n","/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nexport const stringify = JSON.stringify\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nexport const parse = JSON.parse\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* istanbul ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/* istanbul ignore next */\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* istanbul ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/* istanbul ignore next */\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any)}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n","/**\n * @module prng\n */\n\nimport * as binary from '../binary.js'\n\n/**\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\n */\nexport class Xorshift32 {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed\n    /**\n     * @type {number}\n     */\n    this._state = seed\n  }\n\n  /**\n   * Generate a random signed integer.\n   *\n   * @return {Number} A 32 bit signed integer.\n   */\n  next () {\n    let x = this._state\n    x ^= x << 13\n    x ^= x >> 17\n    x ^= x << 5\n    this._state = x\n    return (x >>> 0) / (binary.BITS32 + 1)\n  }\n}\n","/**\n * @module prng\n */\n\nimport { Xorshift32 } from './Xorshift32.js'\nimport * as binary from '../binary.js'\n\n/**\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\n *\n * This implementation follows the idea of the original xoroshiro128plus implementation,\n * but is optimized for the JavaScript runtime. I.e.\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\n *   first 32bit addition is not carried over to the last 32bit.\n *\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\n */\nexport class Xoroshiro128plus {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed\n    // This is a variant of Xoroshiro128plus to fill the initial state\n    const xorshift32 = new Xorshift32(seed)\n    this.state = new Uint32Array(4)\n    for (let i = 0; i < 4; i++) {\n      this.state[i] = xorshift32.next() * binary.BITS32\n    }\n    this._fresh = true\n  }\n\n  /**\n   * @return {number} Float/Double in [0,1)\n   */\n  next () {\n    const state = this.state\n    if (this._fresh) {\n      this._fresh = false\n      return ((state[0] + state[2]) >>> 0) / binary.BITS32\n    } else {\n      this._fresh = true\n      const s0 = state[0]\n      const s1 = state[1]\n      const s2 = state[2] ^ s0\n      const s3 = state[3] ^ s1\n      // function js_rotl (x, k) {\n      //   k = k - 32\n      //   const x1 = x[0]\n      //   const x2 = x[1]\n      //   x[0] = x2 << k | x1 >>> (32 - k)\n      //   x[1] = x1 << k | x2 >>> (32 - k)\n      // }\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18)\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14)\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\n      state[2] = s3 << 4 | s2 >>> 28\n      state[3] = s2 << 4 | s3 >>> 28\n      return (((state[1] + state[3]) >>> 0) / (binary.BITS32 + 1))\n    }\n  }\n}\n\n/*\n// Reference implementation\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\n// By David Blackman and Sebastiano Vigna\n// Who published the reference implementation under Public Domain (CC0)\n\n#include <stdint.h>\n#include <stdio.h>\n\nuint64_t s[2];\n\nstatic inline uint64_t rotl(const uint64_t x, int k) {\n    return (x << k) | (x >> (64 - k));\n}\n\nuint64_t next(void) {\n    const uint64_t s0 = s[0];\n    uint64_t s1 = s[1];\n    s1 ^= s0;\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\n    s[1] = rotl(s1, 36); // c\n    return (s[0] + s[1]) & 0xFFFFFFFF;\n}\n\nint main(void)\n{\n    int i;\n    s[0] = 1111 | (1337ul << 32);\n    s[1] = 1234 | (9999ul << 32);\n\n    printf(\"1000 outputs of genrand_int31()\\n\");\n    for (i=0; i<100; i++) {\n        printf(\"%10lu \", i);\n        printf(\"%10lu \", next());\n        printf(\"- %10lu \", s[0] >> 32);\n        printf(\"%10lu \", (s[0] << 32) >> 32);\n        printf(\"%10lu \", s[1] >> 32);\n        printf(\"%10lu \", (s[1] << 32) >> 32);\n        printf(\"\\n\");\n        // if (i%5==4) printf(\"\\n\");\n    }\n    return 0;\n}\n*/\n","/**\n * Fast Pseudo Random Number Generators.\n *\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\n *\n * @module prng\n */\n\nimport * as binary from './binary.js'\nimport { fromCharCode, fromCodePoint } from './string.js'\nimport * as math from './math.js'\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\nimport * as buffer from './buffer.js'\n\n/**\n * Description of the function\n *  @callback generatorNext\n *  @return {number} A 32bit integer\n */\n\n/**\n * A random type generator.\n *\n * @typedef {Object} PRNG\n * @property {generatorNext} next Generate new number\n */\n\nexport const DefaultPRNG = Xoroshiro128plus\n\n/**\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\n * This is the fastest full-period generator passing BigCrush without systematic failures.\n * But there are more PRNGs available in ./PRNG/.\n *\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\n * @return {PRNG}\n */\nexport const create = seed => new DefaultPRNG(seed)\n\n/**\n * Generates a single random bool.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Boolean} A random boolean\n */\nexport const bool = gen => (gen.next() >= 0.5)\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const int53 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const uint53 = (gen, min, max) => math.abs(int53(gen, min, max))\n\n/**\n * Generates a random integer with 32 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const int32 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const uint32 = (gen, min, max) => int32(gen, min, max) >>> 0\n\n/**\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\n * openaring on smaller ranges.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\n * @return {Number} A random integer on [min, max]\n */\nexport const int31 = (gen, min, max) => {\n  const _min = min & binary.BITS31\n  const _max = max & binary.BITS31\n  return math.floor(gen.next() * (math.min(_max - _min + 1, binary.BITS31) & binary.BITS31) + _min)\n}\n\n/**\n * Generates a random real on [0, 1) with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Number} A random real number on [0, 1).\n */\nexport const real53 = gen => gen.next() // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\n\n/**\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\n *\n * @param {PRNG} gen A random number generator.\n * @return {string}\n *\n * (Space)!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\n */\nexport const char = gen => fromCharCode(int31(gen, 32, 126))\n\n/**\n * @param {PRNG} gen\n * @return {string} A single letter (a-z)\n */\nexport const letter = gen => fromCharCode(int31(gen, 97, 122))\n\n/**\n * @param {PRNG} gen\n * @param {number} [minLen=0]\n * @param {number} [maxLen=20]\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\n */\nexport const word = (gen, minLen = 0, maxLen = 20) => {\n  const len = int31(gen, minLen, maxLen)\n  let str = ''\n  for (let i = 0; i < len; i++) {\n    str += letter(gen)\n  }\n  return str\n}\n\n/**\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\n *\n * @param {PRNG} gen\n * @return {string}\n */\nexport const utf16Rune = gen => {\n  const codepoint = int31(gen, 0, 256)\n  return fromCodePoint(codepoint)\n}\n\n/**\n * @param {PRNG} gen\n * @param {number} [maxlen = 20]\n */\nexport const utf16String = (gen, maxlen = 20) => {\n  const len = int31(gen, 0, maxlen)\n  let str = ''\n  for (let i = 0; i < len; i++) {\n    str += utf16Rune(gen)\n  }\n  return str\n}\n\n/**\n * Returns one element of a given array.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Array<T>} array Non empty Array of possible values.\n * @return {T} One of the values of the supplied Array.\n * @template T\n */\nexport const oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)]\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint8Array}\n */\nexport const uint8Array = (gen, len) => {\n  const buf = buffer.createUint8ArrayFromLen(len)\n  for (let i = 0; i < buf.length; i++) {\n    buf[i] = int32(gen, 0, binary.BITS8)\n  }\n  return buf\n}\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint16Array}\n */\nexport const uint16Array = (gen, len) => new Uint16Array(uint8Array(gen, len * 2).buffer)\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint32Array}\n */\nexport const uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer)\n","/**\n * Utility helpers for generating statistics.\n *\n * @module statistics\n */\n\nimport * as math from './math.js'\n\n/**\n * @param {Array<number>} arr Array of values\n * @return {number} Returns null if the array is empty\n */\nexport const median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[math.floor((arr.length - 1) / 2)] + arr[math.ceil((arr.length - 1) / 2)]) / 2)\n\n/**\n * @param {Array<number>} arr\n * @return {number}\n */\nexport const average = arr => arr.reduce(math.add, 0) / arr.length\n","/**\n * Testing framework with support for generating tests.\n *\n * ```js\n * // test.js template for creating a test executable\n * import { runTests } from 'lib0/testing.js'\n * import * as log from 'lib0/logging.js'\n * import * as mod1 from './mod1.test.js'\n * import * as mod2 from './mod2.test.js'\n\n * import { isBrowser, isNode } from 'lib0/environment.js'\n *\n * if (isBrowser) {\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\n *   log.createVConsole(document.body)\n * }\n *\n * runTests({\n *  mod1,\n *  mod2,\n * }).then(success => {\n *   if (isNode) {\n *     process.exit(success ? 0 : 1)\n *   }\n * })\n * ```\n *\n * ```js\n * // mod1.test.js\n * /**\n *  * runTests automatically tests all exported functions that start with \"test\".\n *  * The name of the function should be in camelCase and is used for the logging output.\n *  *\n *  * @param {t.TestCase} tc\n *  *\\/\n * export const testMyFirstTest = tc => {\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\n * }\n * ```\n *\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\n *\n * @module testing\n */\n\nimport * as log from './logging.js'\nimport { simpleDiff } from './diff.js'\nimport * as object from './object.js'\nimport * as string from './string.js'\nimport * as math from './math.js'\nimport * as random from './random.js'\nimport * as prng from './prng.js'\nimport * as statistics from './statistics.js'\nimport * as array from './array.js'\nimport * as env from './environment.js'\nimport * as json from './json.js'\nimport * as time from './time.js'\n\nimport { performance } from './isomorphic.js'\n\nexport { production } from './environment.js'\n\nexport const extensive = env.hasConf('extensive')\n\n/* istanbul ignore next */\nexport const envSeed = env.hasParam('--seed') ? Number.parseInt(env.getParam('--seed', '0')) : null\n\nexport class TestCase {\n  /**\n   * @param {string} moduleName\n   * @param {string} testName\n   */\n  constructor (moduleName, testName) {\n    /**\n     * @type {string}\n     */\n    this.moduleName = moduleName\n    /**\n     * @type {string}\n     */\n    this.testName = testName\n    this._seed = null\n    this._prng = null\n  }\n\n  resetSeed () {\n    this._seed = null\n    this._prng = null\n  }\n\n  /**\n   * @type {number}\n   */\n  /* istanbul ignore next */\n  get seed () {\n    /* istanbul ignore else */\n    if (this._seed === null) {\n      /* istanbul ignore next */\n      this._seed = envSeed === null ? random.uint32() : envSeed\n    }\n    return this._seed\n  }\n\n  /**\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\n   *\n   * @type {prng.PRNG}\n   */\n  get prng () {\n    /* istanbul ignore else */\n    if (this._prng === null) {\n      this._prng = prng.create(this.seed)\n    }\n    return this._prng\n  }\n}\n\nexport const repititionTime = Number(env.getParam('--repitition-time', '50'))\n/* istanbul ignore next */\nconst testFilter = env.hasParam('--filter') ? env.getParam('--filter', '') : null\n\n/* istanbul ignore next */\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*')\n\nconst repeatTestRegex = /^(repeat|repeating)\\s/\n\n/**\n * @param {string} moduleName\n * @param {string} name\n * @param {function(TestCase):void|Promise<any>} f\n * @param {number} i\n * @param {number} numberOfTests\n */\nexport const run = async (moduleName, name, f, i, numberOfTests) => {\n  const uncamelized = string.fromCamelCase(name.slice(4), ' ')\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`)\n  /* istanbul ignore if */\n  if (filtered) {\n    return true\n  }\n  const tc = new TestCase(moduleName, name)\n  const repeat = repeatTestRegex.test(uncamelized)\n  const groupArgs = [log.GREY, `[${i + 1}/${numberOfTests}] `, log.PURPLE, `${moduleName}: `, log.BLUE, uncamelized]\n  /* istanbul ignore next */\n  if (testFilter === null) {\n    log.groupCollapsed(...groupArgs)\n  } else {\n    log.group(...groupArgs)\n  }\n  const times = []\n  const start = performance.now()\n  let lastTime = start\n  let err = null\n  performance.mark(`${name}-start`)\n  do {\n    try {\n      const p = f(tc)\n      if (p != null && p.constructor === Promise) {\n        await p\n      }\n    } catch (_err) {\n      err = _err\n    }\n    const currTime = performance.now()\n    times.push(currTime - lastTime)\n    lastTime = currTime\n    if (repeat && err === null && (lastTime - start) < repititionTime) {\n      tc.resetSeed()\n    } else {\n      break\n    }\n  } while (err === null && (lastTime - start) < repititionTime)\n  performance.mark(`${name}-end`)\n  /* istanbul ignore if */\n  if (err !== null && err.constructor !== SkipError) {\n    log.printError(err)\n  }\n  performance.measure(name, `${name}-start`, `${name}-end`)\n  log.groupEnd()\n  const duration = lastTime - start\n  let success = true\n  times.sort((a, b) => a - b)\n  /* istanbul ignore next */\n  const againMessage = env.isBrowser\n    ? `     - ${window.location.href}?filter=\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\n    : `\\nrepeat: npm run test -- --filter \"\\\\[${i + 1}/\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`\n  const timeInfo = (repeat && err === null)\n    ? ` - ${times.length} repititions in ${time.humanizeDuration(duration)} (best: ${time.humanizeDuration(times[0])}, worst: ${time.humanizeDuration(array.last(times))}, median: ${time.humanizeDuration(statistics.median(times))}, average: ${time.humanizeDuration(statistics.average(times))})`\n    : ` in ${time.humanizeDuration(duration)}`\n  if (err !== null) {\n    /* istanbul ignore else */\n    if (err.constructor === SkipError) {\n      log.print(log.GREY, log.BOLD, 'Skipped: ', log.UNBOLD, uncamelized)\n    } else {\n      success = false\n      log.print(log.RED, log.BOLD, 'Failure: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\n    }\n  } else {\n    log.print(log.GREEN, log.BOLD, 'Success: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\n  }\n  return success\n}\n\n/**\n * Describe what you are currently testing. The message will be logged.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} description\n * @param {string} info\n */\nexport const describe = (description, info = '') => log.print(log.BLUE, description, ' ', log.GREY, info)\n\n/**\n * Describe the state of the current computation.\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} info\n */\nexport const info = info => describe('', info)\n\nexport const printDom = log.printDom\n\nexport const printCanvas = log.printCanvas\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   t.group('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):void|Promise<undefined>} f\n */\nexport const group = async (description, f) => {\n  log.group(log.BLUE, description)\n  try {\n    const p = f()\n    if (p) {\n      await p\n    }\n  } finally {\n    log.groupEnd()\n  }\n}\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.measureTime('measurement', () => {\n *     heavyCalculation()\n *   })\n *   t.group('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():void|Promise<undefined>} f\n */\nexport const measureTime = async (message, f) => {\n  let duration = 0\n  let iterations = 0\n  const start = performance.now()\n  while (duration < 5) {\n    const p = f()\n    if (p) {\n      await p\n    }\n    duration = performance.now() - start\n    iterations++\n  }\n  const iterationsInfo = iterations > 1 ? `, ${iterations} repititions` : ''\n  log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration / iterations)}${iterationsInfo}`)\n}\n\n/**\n * @template T\n * @param {Array<T>} as\n * @param {Array<T>} bs\n * @param {string} [m]\n * @return {boolean}\n */\nexport const compareArrays = (as, bs, m = 'Arrays match') => {\n  if (as.length !== bs.length) {\n    fail(m)\n  }\n  for (let i = 0; i < as.length; i++) {\n    if (as[i] !== bs[i]) {\n      fail(m)\n    }\n  }\n  return true\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @param {string} [m]\n * @throws {TestError} Throws if tests fails\n */\nexport const compareStrings = (a, b, m = 'Strings match') => {\n  if (a !== b) {\n    const diff = simpleDiff(a, b)\n    log.print(log.GREY, a.slice(0, diff.index), log.RED, a.slice(diff.index, diff.remove), log.GREEN, diff.insert, log.GREY, a.slice(diff.index + diff.remove))\n    fail(m)\n  }\n}\n\n/**\n * @template K,V\n * @param {Object<K,V>} a\n * @param {Object<K,V>} b\n * @param {string} [m]\n * @throws {TestError} Throws if test fails\n */\nexport const compareObjects = (a, b, m = 'Objects match') => { object.equalFlat(a, b) || fail(m) }\n\n/**\n * @param {any} constructor\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @throws {TestError}\n */\nconst compareValues = (constructor, a, b, path) => {\n  if (a !== b) {\n    fail(`Values ${json.stringify(a)} and ${json.stringify(b)} don't match (${path})`)\n  }\n  return true\n}\n\n/**\n * @param {string?} message\n * @param {string} reason\n * @param {string} path\n * @throws {TestError}\n */\nconst _failMessage = (message, reason, path) => fail(\n  message === null\n    ? `${reason} ${path}`\n    : `${message} (${reason}) ${path}`\n)\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @param {string?} message\n * @param {function(any,any,any,string,any):boolean} customCompare\n */\nconst _compare = (a, b, path, message, customCompare) => {\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\n  if (a == null || b == null) {\n    return compareValues(null, a, b, path)\n  }\n  if (a.constructor !== b.constructor) {\n    _failMessage(message, 'Constructors don\\'t match', path)\n  }\n  let success = true\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        _failMessage(message, 'ArrayBuffer lengths match', path)\n      }\n      for (let i = 0; success && i < a.length; i++) {\n        success = success && a[i] === b[i]\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Sets have different number of attributes', path)\n      }\n      // @ts-ignore\n      a.forEach(value => {\n        if (!b.has(value)) {\n          _failMessage(message, `b.${path} does have ${value}`, path)\n        }\n      })\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Maps have different number of attributes', path)\n      }\n      // @ts-ignore\n      a.forEach((value, key) => {\n        if (!b.has(key)) {\n          _failMessage(message, `Property ${path}[\"${key}\"] does not exist on second argument`, path)\n        }\n        _compare(value, b.get(key), `${path}[\"${key}\"]`, message, customCompare)\n      })\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        _failMessage(message, 'Objects have a different number of attributes', path)\n      }\n      object.forEach(a, (value, key) => {\n        if (!object.hasProperty(b, key)) {\n          _failMessage(message, `Property ${path} does not exist on second argument`, path)\n        }\n        _compare(value, b[key], `${path}[\"${key}\"]`, message, customCompare)\n      })\n      break\n    case Array:\n      if (a.length !== b.length) {\n        _failMessage(message, 'Arrays have a different number of attributes', path)\n      }\n      // @ts-ignore\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare))\n      break\n    /* istanbul ignore next */\n    default:\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\n        _failMessage(message, `Values ${json.stringify(a)} and ${json.stringify(b)} don't match`, path)\n      }\n  }\n  assert(success, message)\n  return true\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @param {string?} [message]\n * @param {function(any,T,T,string,any):boolean} [customCompare]\n */\nexport const compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare)\n\n/* istanbul ignore next */\n/**\n * @param {boolean} condition\n * @param {string?} [message]\n * @throws {TestError}\n */\nexport const assert = (condition, message = null) => condition || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`)\n\n/**\n * @param {function():void} f\n * @throws {TestError}\n */\nexport const fails = f => {\n  let err = null\n  try {\n    f()\n  } catch (_err) {\n    err = _err\n    log.print(log.GREEN, '⇖ This Error was expected')\n  }\n  /* istanbul ignore if */\n  if (err === null) {\n    fail('Expected this to fail')\n  }\n}\n\n/**\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\n */\nexport const runTests = async tests => {\n  const numberOfTests = object.map(tests, mod => object.map(mod, f => /* istanbul ignore next */ f ? 1 : 0).reduce(math.add, 0)).reduce(math.add, 0)\n  let successfulTests = 0\n  let testnumber = 0\n  const start = performance.now()\n  for (const modName in tests) {\n    const mod = tests[modName]\n    for (const fname in mod) {\n      const f = mod[fname]\n      /* istanbul ignore else */\n      if (f) {\n        const repeatEachTest = 1\n        let success = true\n        for (let i = 0; success && i < repeatEachTest; i++) {\n          success = await run(modName, fname, f, testnumber, numberOfTests)\n        }\n        testnumber++\n        /* istanbul ignore else */\n        if (success) {\n          successfulTests++\n        }\n      }\n    }\n  }\n  const end = performance.now()\n  log.print('')\n  const success = successfulTests === numberOfTests\n  /* istanbul ignore next */\n  if (success) {\n    /* istanbul ignore next */\n    log.print(log.GREEN, log.BOLD, 'All tests successful!', log.GREY, log.UNBOLD, ` in ${time.humanizeDuration(end - start)}`)\n    /* istanbul ignore next */\n    log.printImgBase64(nyanCatImage, 50)\n  } else {\n    const failedTests = numberOfTests - successfulTests\n    log.print(log.RED, log.BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`)\n  }\n  return success\n}\n\nclass TestError extends Error {}\n\n/**\n * @param {string} reason\n * @throws {TestError}\n */\nexport const fail = reason => {\n  log.print(log.RED, log.BOLD, 'X ', log.UNBOLD, reason)\n  throw new TestError('Test Failed')\n}\n\nclass SkipError extends Error {}\n\n/**\n * @param {boolean} cond If true, this tests will be skipped\n * @throws {SkipError}\n */\nexport const skip = (cond = true) => {\n  if (cond) {\n    throw new SkipError('skipping..')\n  }\n}\n\n// eslint-disable-next-line\nconst nyanCatImage = ''\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines three message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the the client is assured that\n *   it received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","import * as Y from '../src/index.js'\n\nimport {\n  createDeleteSetFromStructStore,\n  getStateVector,\n  Item,\n  DeleteItem, DeleteSet, StructStore, Doc // eslint-disable-line\n} from '../src/internals.js'\n\nimport * as t from 'lib0/testing.js'\nimport * as prng from 'lib0/prng.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as syncProtocol from 'y-protocols/sync.js'\nimport * as object from 'lib0/object.js'\nexport * from '../src/internals.js'\n\n/**\n * @param {TestYInstance} y // publish message created by `y` to all other online clients\n * @param {Uint8Array} m\n */\nconst broadcastMessage = (y, m) => {\n  if (y.tc.onlineConns.has(y)) {\n    y.tc.onlineConns.forEach(remoteYInstance => {\n      if (remoteYInstance !== y) {\n        remoteYInstance._receive(m, y)\n      }\n    })\n  }\n}\n\nexport class TestYInstance extends Doc {\n  /**\n   * @param {TestConnector} testConnector\n   * @param {number} clientID\n   */\n  constructor (testConnector, clientID) {\n    super()\n    this.userID = clientID // overwriting clientID\n    /**\n     * @type {TestConnector}\n     */\n    this.tc = testConnector\n    /**\n     * @type {Map<TestYInstance, Array<Uint8Array>>}\n     */\n    this.receiving = new Map()\n    testConnector.allConns.add(this)\n    // set up observe on local model\n    this.on('update', /** @param {Uint8Array} update @param {any} origin */ (update, origin) => {\n      if (origin !== testConnector) {\n        const encoder = encoding.createEncoder()\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    })\n    this.connect()\n  }\n\n  /**\n   * Disconnect from TestConnector.\n   */\n  disconnect () {\n    this.receiving = new Map()\n    this.tc.onlineConns.delete(this)\n  }\n\n  /**\n   * Append yourself to the list of known Y instances in testconnector.\n   * Also initiate sync with all clients.\n   */\n  connect () {\n    if (!this.tc.onlineConns.has(this)) {\n      this.tc.onlineConns.add(this)\n      const encoder = encoding.createEncoder()\n      syncProtocol.writeSyncStep1(encoder, this)\n      // publish SyncStep1\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n      this.tc.onlineConns.forEach(remoteYInstance => {\n        if (remoteYInstance !== this) {\n          // remote instance sends instance to this instance\n          const encoder = encoding.createEncoder()\n          syncProtocol.writeSyncStep1(encoder, remoteYInstance)\n          this._receive(encoding.toUint8Array(encoder), remoteYInstance)\n        }\n      })\n    }\n  }\n\n  /**\n   * Receive a message from another client. This message is only appended to the list of receiving messages.\n   * TestConnector decides when this client actually reads this message.\n   *\n   * @param {Uint8Array} message\n   * @param {TestYInstance} remoteClient\n   */\n  _receive (message, remoteClient) {\n    let messages = this.receiving.get(remoteClient)\n    if (messages === undefined) {\n      messages = []\n      this.receiving.set(remoteClient, messages)\n    }\n    messages.push(message)\n  }\n}\n\n/**\n * Keeps track of TestYInstances.\n *\n * The TestYInstances add/remove themselves from the list of connections maiained in this object.\n * I think it makes sense. Deal with it.\n */\nexport class TestConnector {\n  /**\n   * @param {prng.PRNG} gen\n   */\n  constructor (gen) {\n    /**\n     * @type {Set<TestYInstance>}\n     */\n    this.allConns = new Set()\n    /**\n     * @type {Set<TestYInstance>}\n     */\n    this.onlineConns = new Set()\n    /**\n     * @type {prng.PRNG}\n     */\n    this.prng = gen\n  }\n\n  /**\n   * Create a new Y instance and add it to the list of connections\n   * @param {number} clientID\n   */\n  createY (clientID) {\n    return new TestYInstance(this, clientID)\n  }\n\n  /**\n   * Choose random connection and flush a random message from a random sender.\n   *\n   * If this function was unable to flush a message, because there are no more messages to flush, it returns false. true otherwise.\n   * @return {boolean}\n   */\n  flushRandomMessage () {\n    const gen = this.prng\n    const conns = Array.from(this.onlineConns).filter(conn => conn.receiving.size > 0)\n    if (conns.length > 0) {\n      const receiver = prng.oneOf(gen, conns)\n      const [sender, messages] = prng.oneOf(gen, Array.from(receiver.receiving))\n      const m = messages.shift()\n      if (messages.length === 0) {\n        receiver.receiving.delete(sender)\n      }\n      if (m === undefined) {\n        return this.flushRandomMessage()\n      }\n      const encoder = encoding.createEncoder()\n      // console.log('receive (' + sender.userID + '->' + receiver.userID + '):\\n', syncProtocol.stringifySyncMessage(decoding.createDecoder(m), receiver))\n      // do not publish data created when this function is executed (could be ss2 or update message)\n      syncProtocol.readSyncMessage(decoding.createDecoder(m), encoder, receiver, receiver.tc)\n      if (encoding.length(encoder) > 0) {\n        // send reply message\n        sender._receive(encoding.toUint8Array(encoder), receiver)\n      }\n      return true\n    }\n    return false\n  }\n\n  /**\n   * @return {boolean} True iff this function actually flushed something\n   */\n  flushAllMessages () {\n    let didSomething = false\n    while (this.flushRandomMessage()) {\n      didSomething = true\n    }\n    return didSomething\n  }\n\n  reconnectAll () {\n    this.allConns.forEach(conn => conn.connect())\n  }\n\n  disconnectAll () {\n    this.allConns.forEach(conn => conn.disconnect())\n  }\n\n  syncAll () {\n    this.reconnectAll()\n    this.flushAllMessages()\n  }\n\n  /**\n   * @return {boolean} Whether it was possible to disconnect a randon connection.\n   */\n  disconnectRandom () {\n    if (this.onlineConns.size === 0) {\n      return false\n    }\n    prng.oneOf(this.prng, Array.from(this.onlineConns)).disconnect()\n    return true\n  }\n\n  /**\n   * @return {boolean} Whether it was possible to reconnect a random connection.\n   */\n  reconnectRandom () {\n    /**\n     * @type {Array<TestYInstance>}\n     */\n    const reconnectable = []\n    this.allConns.forEach(conn => {\n      if (!this.onlineConns.has(conn)) {\n        reconnectable.push(conn)\n      }\n    })\n    if (reconnectable.length === 0) {\n      return false\n    }\n    prng.oneOf(this.prng, reconnectable).connect()\n    return true\n  }\n}\n\n/**\n * @template T\n * @param {t.TestCase} tc\n * @param {{users?:number}} conf\n * @param {InitTestObjectCallback<T>} [initTestObject]\n * @return {{testObjects:Array<any>,testConnector:TestConnector,users:Array<TestYInstance>,array0:Y.Array<any>,array1:Y.Array<any>,array2:Y.Array<any>,map0:Y.Map<any>,map1:Y.Map<any>,map2:Y.Map<any>,map3:Y.Map<any>,text0:Y.Text,text1:Y.Text,text2:Y.Text,xml0:Y.XmlElement,xml1:Y.XmlElement,xml2:Y.XmlElement}}\n */\nexport const init = (tc, { users = 5 } = {}, initTestObject) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const result = {\n    users: []\n  }\n  const gen = tc.prng\n  const testConnector = new TestConnector(gen)\n  result.testConnector = testConnector\n  for (let i = 0; i < users; i++) {\n    const y = testConnector.createY(i)\n    y.clientID = i\n    result.users.push(y)\n    result['array' + i] = y.get('array', Y.Array)\n    result['map' + i] = y.get('map', Y.Map)\n    result['xml' + i] = y.get('xml', Y.XmlElement)\n    result['text' + i] = y.get('text', Y.Text)\n  }\n  testConnector.syncAll()\n  result.testObjects = result.users.map(initTestObject || (() => null))\n  return /** @type {any} */ (result)\n}\n\n/**\n * 1. reconnect and flush all\n * 2. user 0 gc\n * 3. get type content\n * 4. disconnect & reconnect all (so gc is propagated)\n * 5. compare os, ds, ss\n *\n * @param {Array<TestYInstance>} users\n */\nexport const compare = users => {\n  users.forEach(u => u.connect())\n  while (users[0].tc.flushAllMessages()) {}\n  const userArrayValues = users.map(u => u.getArray('array').toJSON())\n  const userMapValues = users.map(u => u.getMap('map').toJSON())\n  const userXmlValues = users.map(u => u.get('xml', Y.XmlElement).toString())\n  const userTextValues = users.map(u => u.getText('text').toDelta())\n  for (const u of users) {\n    t.assert(u.store.pendingDeleteReaders.length === 0)\n    t.assert(u.store.pendingStack.length === 0)\n    t.assert(u.store.pendingClientsStructRefs.size === 0)\n  }\n  // Test Array iterator\n  t.compare(users[0].getArray('array').toArray(), Array.from(users[0].getArray('array')))\n  // Test Map iterator\n  const ymapkeys = Array.from(users[0].getMap('map').keys())\n  t.assert(ymapkeys.length === Object.keys(userMapValues[0]).length)\n  ymapkeys.forEach(key => t.assert(object.hasProperty(userMapValues[0], key)))\n  /**\n   * @type {Object<string,any>}\n   */\n  const mapRes = {}\n  for (const [k, v] of users[0].getMap('map')) {\n    mapRes[k] = v instanceof Y.AbstractType ? v.toJSON() : v\n  }\n  t.compare(userMapValues[0], mapRes)\n  // Compare all users\n  for (let i = 0; i < users.length - 1; i++) {\n    t.compare(userArrayValues[i].length, users[i].getArray('array').length)\n    t.compare(userArrayValues[i], userArrayValues[i + 1])\n    t.compare(userMapValues[i], userMapValues[i + 1])\n    t.compare(userXmlValues[i], userXmlValues[i + 1])\n    t.compare(userTextValues[i].map(/** @param {any} a */ a => typeof a.insert === 'string' ? a.insert : ' ').join('').length, users[i].getText('text').length)\n    t.compare(userTextValues[i], userTextValues[i + 1])\n    t.compare(getStateVector(users[i].store), getStateVector(users[i + 1].store))\n    compareDS(createDeleteSetFromStructStore(users[i].store), createDeleteSetFromStructStore(users[i + 1].store))\n    compareStructStores(users[i].store, users[i + 1].store)\n  }\n  users.map(u => u.destroy())\n}\n\n/**\n * @param {Item?} a\n * @param {Item?} b\n * @return {boolean}\n */\nexport const compareItemIDs = (a, b) => a === b || (a !== null && b != null && Y.compareIDs(a.id, b.id))\n\n/**\n * @param {StructStore} ss1\n * @param {StructStore} ss2\n */\nexport const compareStructStores = (ss1, ss2) => {\n  t.assert(ss1.clients.size === ss2.clients.size)\n  for (const [client, structs1] of ss1.clients) {\n    const structs2 = /** @type {Array<Y.AbstractStruct>} */ (ss2.clients.get(client))\n    t.assert(structs2 !== undefined && structs1.length === structs2.length)\n    for (let i = 0; i < structs1.length; i++) {\n      const s1 = structs1[i]\n      const s2 = structs2[i]\n      // checks for abstract struct\n      if (\n        s1.constructor !== s2.constructor ||\n        !Y.compareIDs(s1.id, s2.id) ||\n        s1.deleted !== s2.deleted ||\n        s1.length !== s2.length\n      ) {\n        t.fail('Structs dont match')\n      }\n      if (s1 instanceof Item) {\n        if (\n          !(s2 instanceof Item) ||\n          !((s1.left === null && s2.left === null) || (s1.left !== null && s2.left !== null && Y.compareIDs(s1.left.lastId, s2.left.lastId))) ||\n          !compareItemIDs(s1.right, s2.right) ||\n          !Y.compareIDs(s1.origin, s2.origin) ||\n          !Y.compareIDs(s1.rightOrigin, s2.rightOrigin) ||\n          s1.parentSub !== s2.parentSub\n        ) {\n          return t.fail('Items dont match')\n        }\n        // make sure that items are connected correctly\n        t.assert(s1.left === null || s1.left.right === s1)\n        t.assert(s1.right === null || s1.right.left === s1)\n        t.assert(s2.left === null || s2.left.right === s2)\n        t.assert(s2.right === null || s2.right.left === s2)\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nexport const compareDS = (ds1, ds2) => {\n  t.assert(ds1.clients.size === ds2.clients.size)\n  for (const [client, deleteItems1] of ds1.clients) {\n    const deleteItems2 = /** @type {Array<DeleteItem>} */ (ds2.clients.get(client))\n    t.assert(deleteItems2 !== undefined && deleteItems1.length === deleteItems2.length)\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i]\n      const di2 = deleteItems2[i]\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        t.fail('DeleteSets dont match')\n      }\n    }\n  }\n}\n\n/**\n * @template T\n * @callback InitTestObjectCallback\n * @param {TestYInstance} y\n * @return {T}\n */\n\n/**\n * @template T\n * @param {t.TestCase} tc\n * @param {Array<function(Y.Doc,prng.PRNG,T):void>} mods\n * @param {number} iterations\n * @param {InitTestObjectCallback<T>} [initTestObject]\n */\nexport const applyRandomTests = (tc, mods, iterations, initTestObject) => {\n  const gen = tc.prng\n  const result = init(tc, { users: 5 }, initTestObject)\n  const { testConnector, users } = result\n  for (let i = 0; i < iterations; i++) {\n    if (prng.int31(gen, 0, 100) <= 2) {\n      // 2% chance to disconnect/reconnect a random user\n      if (prng.bool(gen)) {\n        testConnector.disconnectRandom()\n      } else {\n        testConnector.reconnectRandom()\n      }\n    } else if (prng.int31(gen, 0, 100) <= 1) {\n      // 1% chance to flush all\n      testConnector.flushAllMessages()\n    } else if (prng.int31(gen, 0, 100) <= 50) {\n      // 50% chance to flush a random message\n      testConnector.flushRandomMessage()\n    }\n    const user = prng.int31(gen, 0, users.length - 1)\n    const test = prng.oneOf(gen, mods)\n    test(users[user], gen, result.testObjects[user])\n  }\n  compare(users)\n  return result\n}\n","import { init, compare, applyRandomTests, Doc } from './testHelper.js' // eslint-disable-line\n\nimport * as Y from '../src/index.js'\nimport * as t from 'lib0/testing.js'\nimport * as prng from 'lib0/prng.js'\nimport * as math from 'lib0/math.js'\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testDeleteInsert = tc => {\n  const { users, array0 } = init(tc, { users: 2 })\n  array0.delete(0, 0)\n  t.describe('Does not throw when deleting zero elements with position 0')\n  t.fails(() => {\n    array0.delete(1, 1)\n  })\n  array0.insert(0, ['A'])\n  array0.delete(1, 0)\n  t.describe('Does not throw when deleting zero elements with valid position 1')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testInsertThreeElementsTryRegetProperty = tc => {\n  const { testConnector, users, array0, array1 } = init(tc, { users: 2 })\n  array0.insert(0, [1, true, false])\n  t.compare(array0.toJSON(), [1, true, false], '.toJSON() works')\n  testConnector.flushAllMessages()\n  t.compare(array1.toJSON(), [1, true, false], '.toJSON() works after sync')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testConcurrentInsertWithThreeConflicts = tc => {\n  var { users, array0, array1, array2 } = init(tc, { users: 3 })\n  array0.insert(0, [0])\n  array1.insert(0, [1])\n  array2.insert(0, [2])\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testConcurrentInsertDeleteWithThreeConflicts = tc => {\n  const { testConnector, users, array0, array1, array2 } = init(tc, { users: 3 })\n  array0.insert(0, ['x', 'y', 'z'])\n  testConnector.flushAllMessages()\n  array0.insert(1, [0])\n  array1.delete(0)\n  array1.delete(1, 1)\n  array2.insert(1, [2])\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testInsertionsInLateSync = tc => {\n  const { testConnector, users, array0, array1, array2 } = init(tc, { users: 3 })\n  array0.insert(0, ['x', 'y'])\n  testConnector.flushAllMessages()\n  users[1].disconnect()\n  users[2].disconnect()\n  array0.insert(1, ['user0'])\n  array1.insert(1, ['user1'])\n  array2.insert(1, ['user2'])\n  users[1].connect()\n  users[2].connect()\n  testConnector.flushAllMessages()\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testDisconnectReallyPreventsSendingMessages = tc => {\n  var { testConnector, users, array0, array1 } = init(tc, { users: 3 })\n  array0.insert(0, ['x', 'y'])\n  testConnector.flushAllMessages()\n  users[1].disconnect()\n  users[2].disconnect()\n  array0.insert(1, ['user0'])\n  array1.insert(1, ['user1'])\n  t.compare(array0.toJSON(), ['x', 'user0', 'y'])\n  t.compare(array1.toJSON(), ['x', 'user1', 'y'])\n  users[1].connect()\n  users[2].connect()\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testDeletionsInLateSync = tc => {\n  const { testConnector, users, array0, array1 } = init(tc, { users: 2 })\n  array0.insert(0, ['x', 'y'])\n  testConnector.flushAllMessages()\n  users[1].disconnect()\n  array1.delete(1, 1)\n  array0.delete(0, 2)\n  users[1].connect()\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testInsertThenMergeDeleteOnSync = tc => {\n  const { testConnector, users, array0, array1 } = init(tc, { users: 2 })\n  array0.insert(0, ['x', 'y', 'z'])\n  testConnector.flushAllMessages()\n  users[0].disconnect()\n  array1.delete(0, 3)\n  users[0].connect()\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testInsertAndDeleteEvents = tc => {\n  const { array0, users } = init(tc, { users: 2 })\n  /**\n   * @type {Object<string,any>?}\n   */\n  let event = null\n  array0.observe(e => {\n    event = e\n  })\n  array0.insert(0, [0, 1, 2])\n  t.assert(event !== null)\n  event = null\n  array0.delete(0)\n  t.assert(event !== null)\n  event = null\n  array0.delete(0, 2)\n  t.assert(event !== null)\n  event = null\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testNestedObserverEvents = tc => {\n  const { array0, users } = init(tc, { users: 2 })\n  /**\n   * @type {Array<number>}\n   */\n  const vals = []\n  array0.observe(e => {\n    if (array0.length === 1) {\n      // inserting, will call this observer again\n      // we expect that this observer is called after this event handler finishedn\n      array0.insert(1, [1])\n      vals.push(0)\n    } else {\n      // this should be called the second time an element is inserted (above case)\n      vals.push(1)\n    }\n  })\n  array0.insert(0, [0])\n  t.compareArrays(vals, [0, 1])\n  t.compareArrays(array0.toArray(), [0, 1])\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testInsertAndDeleteEventsForTypes = tc => {\n  const { array0, users } = init(tc, { users: 2 })\n  /**\n   * @type {Object<string,any>|null}\n   */\n  let event = null\n  array0.observe(e => {\n    event = e\n  })\n  array0.insert(0, [new Y.Array()])\n  t.assert(event !== null)\n  event = null\n  array0.delete(0)\n  t.assert(event !== null)\n  event = null\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testChangeEvent = tc => {\n  const { array0, users } = init(tc, { users: 2 })\n  /**\n   * @type {any}\n   */\n  let changes = null\n  array0.observe(e => {\n    changes = e.changes\n  })\n  const newArr = new Y.Array()\n  array0.insert(0, [newArr, 4, 'dtrn'])\n  t.assert(changes !== null && changes.added.size === 2 && changes.deleted.size === 0)\n  t.compare(changes.delta, [{ insert: [newArr, 4, 'dtrn'] }])\n  changes = null\n  array0.delete(0, 2)\n  t.assert(changes !== null && changes.added.size === 0 && changes.deleted.size === 2)\n  t.compare(changes.delta, [{ delete: 2 }])\n  changes = null\n  array0.insert(1, [0.1])\n  t.assert(changes !== null && changes.added.size === 1 && changes.deleted.size === 0)\n  t.compare(changes.delta, [{ retain: 1 }, { insert: [0.1] }])\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testInsertAndDeleteEventsForTypes2 = tc => {\n  const { array0, users } = init(tc, { users: 2 })\n  /**\n   * @type {Array<Object<string,any>>}\n   */\n  const events = []\n  array0.observe(e => {\n    events.push(e)\n  })\n  array0.insert(0, ['hi', new Y.Map()])\n  t.assert(events.length === 1, 'Event is triggered exactly once for insertion of two elements')\n  array0.delete(1)\n  t.assert(events.length === 2, 'Event is triggered exactly once for deletion')\n  compare(users)\n}\n\n/**\n * This issue has been reported here https://github.com/yjs/yjs/issues/155\n * @param {t.TestCase} tc\n */\nexport const testNewChildDoesNotEmitEventInTransaction = tc => {\n  const { array0, users } = init(tc, { users: 2 })\n  let fired = false\n  users[0].transact(() => {\n    const newMap = new Y.Map()\n    newMap.observe(() => {\n      fired = true\n    })\n    array0.insert(0, [newMap])\n    newMap.set('tst', 42)\n  })\n  t.assert(!fired, 'Event does not trigger')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGarbageCollector = tc => {\n  const { testConnector, users, array0 } = init(tc, { users: 3 })\n  array0.insert(0, ['x', 'y', 'z'])\n  testConnector.flushAllMessages()\n  users[0].disconnect()\n  array0.delete(0, 3)\n  users[0].connect()\n  testConnector.flushAllMessages()\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testEventTargetIsSetCorrectlyOnLocal = tc => {\n  const { array0, users } = init(tc, { users: 3 })\n  /**\n   * @type {any}\n   */\n  let event\n  array0.observe(e => {\n    event = e\n  })\n  array0.insert(0, ['stuff'])\n  t.assert(event.target === array0, '\"target\" property is set correctly')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testEventTargetIsSetCorrectlyOnRemote = tc => {\n  const { testConnector, array0, array1, users } = init(tc, { users: 3 })\n  /**\n   * @type {any}\n   */\n  let event\n  array0.observe(e => {\n    event = e\n  })\n  array1.insert(0, ['stuff'])\n  testConnector.flushAllMessages()\n  t.assert(event.target === array0, '\"target\" property is set correctly')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testIteratingArrayContainingTypes = tc => {\n  const y = new Y.Doc()\n  const arr = y.getArray('arr')\n  const numItems = 10\n  for (let i = 0; i < numItems; i++) {\n    const map = new Y.Map()\n    map.set('value', i)\n    arr.push([map])\n  }\n  let cnt = 0\n  for (const item of arr) {\n    t.assert(item.get('value') === cnt++, 'value is correct')\n  }\n  y.destroy()\n}\n\nlet _uniqueNumber = 0\nconst getUniqueNumber = () => _uniqueNumber++\n\n/**\n * @type {Array<function(Doc,prng.PRNG,any):void>}\n */\nconst arrayTransactions = [\n  function insert (user, gen) {\n    const yarray = user.getArray('array')\n    var uniqueNumber = getUniqueNumber()\n    var content = []\n    var len = prng.int31(gen, 1, 4)\n    for (var i = 0; i < len; i++) {\n      content.push(uniqueNumber)\n    }\n    var pos = prng.int31(gen, 0, yarray.length)\n    yarray.insert(pos, content)\n  },\n  function insertTypeArray (user, gen) {\n    const yarray = user.getArray('array')\n    var pos = prng.int31(gen, 0, yarray.length)\n    yarray.insert(pos, [new Y.Array()])\n    var array2 = yarray.get(pos)\n    array2.insert(0, [1, 2, 3, 4])\n  },\n  function insertTypeMap (user, gen) {\n    const yarray = user.getArray('array')\n    var pos = prng.int31(gen, 0, yarray.length)\n    yarray.insert(pos, [new Y.Map()])\n    var map = yarray.get(pos)\n    map.set('someprop', 42)\n    map.set('someprop', 43)\n    map.set('someprop', 44)\n  },\n  function _delete (user, gen) {\n    const yarray = user.getArray('array')\n    var length = yarray.length\n    if (length > 0) {\n      var somePos = prng.int31(gen, 0, length - 1)\n      var delLength = prng.int31(gen, 1, math.min(2, length - somePos))\n      if (prng.bool(gen)) {\n        var type = yarray.get(somePos)\n        if (type.length > 0) {\n          somePos = prng.int31(gen, 0, type.length - 1)\n          delLength = prng.int31(gen, 0, math.min(2, type.length - somePos))\n          type.delete(somePos, delLength)\n        }\n      } else {\n        yarray.delete(somePos, delLength)\n      }\n    }\n  }\n]\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests4 = tc => {\n  applyRandomTests(tc, arrayTransactions, 4)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests40 = tc => {\n  applyRandomTests(tc, arrayTransactions, 40)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests42 = tc => {\n  applyRandomTests(tc, arrayTransactions, 42)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests43 = tc => {\n  applyRandomTests(tc, arrayTransactions, 43)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests44 = tc => {\n  applyRandomTests(tc, arrayTransactions, 44)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests45 = tc => {\n  applyRandomTests(tc, arrayTransactions, 45)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests46 = tc => {\n  applyRandomTests(tc, arrayTransactions, 46)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests300 = tc => {\n  applyRandomTests(tc, arrayTransactions, 300)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests400 = tc => {\n  applyRandomTests(tc, arrayTransactions, 400)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests500 = tc => {\n  applyRandomTests(tc, arrayTransactions, 500)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests600 = tc => {\n  applyRandomTests(tc, arrayTransactions, 600)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests1000 = tc => {\n  applyRandomTests(tc, arrayTransactions, 1000)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests1800 = tc => {\n  applyRandomTests(tc, arrayTransactions, 1800)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests3000 = tc => {\n  t.skip(!t.production)\n  applyRandomTests(tc, arrayTransactions, 3000)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests5000 = tc => {\n  t.skip(!t.production)\n  applyRandomTests(tc, arrayTransactions, 5000)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYarrayTests30000 = tc => {\n  t.skip(!t.production)\n  applyRandomTests(tc, arrayTransactions, 30000)\n}\n","import { init, compare, applyRandomTests, Doc } from './testHelper.js' // eslint-disable-line\n\nimport {\n  compareIDs\n} from '../src/internals.js'\n\nimport * as Y from '../src/index.js'\nimport * as t from 'lib0/testing.js'\nimport * as prng from 'lib0/prng.js'\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testBasicMapTests = tc => {\n  const { testConnector, users, map0, map1, map2 } = init(tc, { users: 3 })\n  users[2].disconnect()\n\n  map0.set('number', 1)\n  map0.set('string', 'hello Y')\n  map0.set('object', { key: { key2: 'value' } })\n  map0.set('y-map', new Y.Map())\n  map0.set('boolean1', true)\n  map0.set('boolean0', false)\n  const map = map0.get('y-map')\n  map.set('y-array', new Y.Array())\n  const array = map.get('y-array')\n  array.insert(0, [0])\n  array.insert(0, [-1])\n\n  t.assert(map0.get('number') === 1, 'client 0 computed the change (number)')\n  t.assert(map0.get('string') === 'hello Y', 'client 0 computed the change (string)')\n  t.assert(map0.get('boolean0') === false, 'client 0 computed the change (boolean)')\n  t.assert(map0.get('boolean1') === true, 'client 0 computed the change (boolean)')\n  t.compare(map0.get('object'), { key: { key2: 'value' } }, 'client 0 computed the change (object)')\n  t.assert(map0.get('y-map').get('y-array').get(0) === -1, 'client 0 computed the change (type)')\n\n  users[2].connect()\n  testConnector.flushAllMessages()\n\n  t.assert(map1.get('number') === 1, 'client 1 received the update (number)')\n  t.assert(map1.get('string') === 'hello Y', 'client 1 received the update (string)')\n  t.assert(map1.get('boolean0') === false, 'client 1 computed the change (boolean)')\n  t.assert(map1.get('boolean1') === true, 'client 1 computed the change (boolean)')\n  t.compare(map1.get('object'), { key: { key2: 'value' } }, 'client 1 received the update (object)')\n  t.assert(map1.get('y-map').get('y-array').get(0) === -1, 'client 1 received the update (type)')\n\n  // compare disconnected user\n  t.assert(map2.get('number') === 1, 'client 2 received the update (number) - was disconnected')\n  t.assert(map2.get('string') === 'hello Y', 'client 2 received the update (string) - was disconnected')\n  t.assert(map2.get('boolean0') === false, 'client 2 computed the change (boolean)')\n  t.assert(map2.get('boolean1') === true, 'client 2 computed the change (boolean)')\n  t.compare(map2.get('object'), { key: { key2: 'value' } }, 'client 2 received the update (object) - was disconnected')\n  t.assert(map2.get('y-map').get('y-array').get(0) === -1, 'client 2 received the update (type) - was disconnected')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetAndSetOfMapProperty = tc => {\n  const { testConnector, users, map0 } = init(tc, { users: 2 })\n  map0.set('stuff', 'stuffy')\n  map0.set('undefined', undefined)\n  map0.set('null', null)\n  t.compare(map0.get('stuff'), 'stuffy')\n\n  testConnector.flushAllMessages()\n\n  for (const user of users) {\n    const u = user.getMap('map')\n    t.compare(u.get('stuff'), 'stuffy')\n    t.assert(u.get('undefined') === undefined, 'undefined')\n    t.compare(u.get('null'), null, 'null')\n  }\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testYmapSetsYmap = tc => {\n  const { users, map0 } = init(tc, { users: 2 })\n  const map = map0.set('Map', new Y.Map())\n  t.assert(map0.get('Map') === map)\n  map.set('one', 1)\n  t.compare(map.get('one'), 1)\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testYmapSetsYarray = tc => {\n  const { users, map0 } = init(tc, { users: 2 })\n  const array = map0.set('Array', new Y.Array())\n  t.assert(array === map0.get('Array'))\n  array.insert(0, [1, 2, 3])\n  // @ts-ignore\n  t.compare(map0.toJSON(), { Array: [1, 2, 3] })\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetAndSetOfMapPropertySyncs = tc => {\n  const { testConnector, users, map0 } = init(tc, { users: 2 })\n  map0.set('stuff', 'stuffy')\n  t.compare(map0.get('stuff'), 'stuffy')\n  testConnector.flushAllMessages()\n  for (const user of users) {\n    var u = user.getMap('map')\n    t.compare(u.get('stuff'), 'stuffy')\n  }\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetAndSetOfMapPropertyWithConflict = tc => {\n  const { testConnector, users, map0, map1 } = init(tc, { users: 3 })\n  map0.set('stuff', 'c0')\n  map1.set('stuff', 'c1')\n  testConnector.flushAllMessages()\n  for (const user of users) {\n    var u = user.getMap('map')\n    t.compare(u.get('stuff'), 'c1')\n  }\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetAndSetAndDeleteOfMapProperty = tc => {\n  const { testConnector, users, map0, map1 } = init(tc, { users: 3 })\n  map0.set('stuff', 'c0')\n  map1.set('stuff', 'c1')\n  map1.delete('stuff')\n  testConnector.flushAllMessages()\n  for (const user of users) {\n    var u = user.getMap('map')\n    t.assert(u.get('stuff') === undefined)\n  }\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetAndSetOfMapPropertyWithThreeConflicts = tc => {\n  const { testConnector, users, map0, map1, map2 } = init(tc, { users: 3 })\n  map0.set('stuff', 'c0')\n  map1.set('stuff', 'c1')\n  map1.set('stuff', 'c2')\n  map2.set('stuff', 'c3')\n  testConnector.flushAllMessages()\n  for (const user of users) {\n    var u = user.getMap('map')\n    t.compare(u.get('stuff'), 'c3')\n  }\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetAndSetAndDeleteOfMapPropertyWithThreeConflicts = tc => {\n  const { testConnector, users, map0, map1, map2, map3 } = init(tc, { users: 4 })\n  map0.set('stuff', 'c0')\n  map1.set('stuff', 'c1')\n  map1.set('stuff', 'c2')\n  map2.set('stuff', 'c3')\n  testConnector.flushAllMessages()\n  map0.set('stuff', 'deleteme')\n  map1.set('stuff', 'c1')\n  map2.set('stuff', 'c2')\n  map3.set('stuff', 'c3')\n  map3.delete('stuff')\n  testConnector.flushAllMessages()\n  for (const user of users) {\n    var u = user.getMap('map')\n    t.assert(u.get('stuff') === undefined)\n  }\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testObserveDeepProperties = tc => {\n  const { testConnector, users, map1, map2, map3 } = init(tc, { users: 4 })\n  const _map1 = map1.set('map', new Y.Map())\n  let calls = 0\n  let dmapid\n  map1.observeDeep(events => {\n    events.forEach(event => {\n      calls++\n      // @ts-ignore\n      t.assert(event.keysChanged.has('deepmap'))\n      t.assert(event.path.length === 1)\n      t.assert(event.path[0] === 'map')\n      // @ts-ignore\n      dmapid = event.target.get('deepmap')._item.id\n    })\n  })\n  testConnector.flushAllMessages()\n  const _map3 = map3.get('map')\n  _map3.set('deepmap', new Y.Map())\n  testConnector.flushAllMessages()\n  const _map2 = map2.get('map')\n  _map2.set('deepmap', new Y.Map())\n  testConnector.flushAllMessages()\n  const dmap1 = _map1.get('deepmap')\n  const dmap2 = _map2.get('deepmap')\n  const dmap3 = _map3.get('deepmap')\n  t.assert(calls > 0)\n  t.assert(compareIDs(dmap1._item.id, dmap2._item.id))\n  t.assert(compareIDs(dmap1._item.id, dmap3._item.id))\n  // @ts-ignore we want the possibility of dmapid being undefined\n  t.assert(compareIDs(dmap1._item.id, dmapid))\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testObserversUsingObservedeep = tc => {\n  const { users, map0 } = init(tc, { users: 2 })\n  /**\n   * @type {Array<Array<string|number>>}\n   */\n  const pathes = []\n  let calls = 0\n  map0.observeDeep(events => {\n    events.forEach(event => {\n      pathes.push(event.path)\n    })\n    calls++\n  })\n  map0.set('map', new Y.Map())\n  map0.get('map').set('array', new Y.Array())\n  map0.get('map').get('array').insert(0, ['content'])\n  t.assert(calls === 3)\n  t.compare(pathes, [[], ['map'], ['map', 'array']])\n  compare(users)\n}\n\n// TODO: Test events in Y.Map\n/**\n * @param {Object<string,any>} is\n * @param {Object<string,any>} should\n */\nconst compareEvent = (is, should) => {\n  for (var key in should) {\n    t.compare(should[key], is[key])\n  }\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testThrowsAddAndUpdateAndDeleteEvents = tc => {\n  const { users, map0 } = init(tc, { users: 2 })\n  /**\n   * @type {Object<string,any>}\n   */\n  let event = {}\n  map0.observe(e => {\n    event = e // just put it on event, should be thrown synchronously anyway\n  })\n  map0.set('stuff', 4)\n  compareEvent(event, {\n    target: map0,\n    keysChanged: new Set(['stuff'])\n  })\n  // update, oldValue is in contents\n  map0.set('stuff', new Y.Array())\n  compareEvent(event, {\n    target: map0,\n    keysChanged: new Set(['stuff'])\n  })\n  // update, oldValue is in opContents\n  map0.set('stuff', 5)\n  // delete\n  map0.delete('stuff')\n  compareEvent(event, {\n    keysChanged: new Set(['stuff']),\n    target: map0\n  })\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testChangeEvent = tc => {\n  const { map0, users } = init(tc, { users: 2 })\n  /**\n   * @type {any}\n   */\n  let changes = null\n  /**\n   * @type {any}\n   */\n  let keyChange = null\n  map0.observe(e => {\n    changes = e.changes\n  })\n  map0.set('a', 1)\n  keyChange = changes.keys.get('a')\n  t.assert(changes !== null && keyChange.action === 'add' && keyChange.oldValue === undefined)\n  map0.set('a', 2)\n  keyChange = changes.keys.get('a')\n  t.assert(changes !== null && keyChange.action === 'update' && keyChange.oldValue === 1)\n  users[0].transact(() => {\n    map0.set('a', 3)\n    map0.set('a', 4)\n  })\n  keyChange = changes.keys.get('a')\n  t.assert(changes !== null && keyChange.action === 'update' && keyChange.oldValue === 2)\n  users[0].transact(() => {\n    map0.set('b', 1)\n    map0.set('b', 2)\n  })\n  keyChange = changes.keys.get('b')\n  t.assert(changes !== null && keyChange.action === 'add' && keyChange.oldValue === undefined)\n  users[0].transact(() => {\n    map0.set('c', 1)\n    map0.delete('c')\n  })\n  t.assert(changes !== null && changes.keys.size === 0)\n  users[0].transact(() => {\n    map0.set('d', 1)\n    map0.set('d', 2)\n  })\n  keyChange = changes.keys.get('d')\n  t.assert(changes !== null && keyChange.action === 'add' && keyChange.oldValue === undefined)\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testYmapEventExceptionsShouldCompleteTransaction = tc => {\n  const doc = new Y.Doc()\n  const map = doc.getMap('map')\n\n  let updateCalled = false\n  let throwingObserverCalled = false\n  let throwingDeepObserverCalled = false\n  doc.on('update', () => {\n    updateCalled = true\n  })\n\n  const throwingObserver = () => {\n    throwingObserverCalled = true\n    throw new Error('Failure')\n  }\n\n  const throwingDeepObserver = () => {\n    throwingDeepObserverCalled = true\n    throw new Error('Failure')\n  }\n\n  map.observe(throwingObserver)\n  map.observeDeep(throwingDeepObserver)\n\n  t.fails(() => {\n    map.set('y', '2')\n  })\n\n  t.assert(updateCalled)\n  t.assert(throwingObserverCalled)\n  t.assert(throwingDeepObserverCalled)\n\n  // check if it works again\n  updateCalled = false\n  throwingObserverCalled = false\n  throwingDeepObserverCalled = false\n  t.fails(() => {\n    map.set('z', '3')\n  })\n\n  t.assert(updateCalled)\n  t.assert(throwingObserverCalled)\n  t.assert(throwingDeepObserverCalled)\n\n  t.assert(map.get('z') === '3')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testYmapEventHasCorrectValueWhenSettingAPrimitive = tc => {\n  const { users, map0 } = init(tc, { users: 3 })\n  /**\n   * @type {Object<string,any>}\n   */\n  let event = {}\n  map0.observe(e => {\n    event = e\n  })\n  map0.set('stuff', 2)\n  t.compare(event.value, event.target.get(event.name))\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testYmapEventHasCorrectValueWhenSettingAPrimitiveFromOtherUser = tc => {\n  const { users, map0, map1, testConnector } = init(tc, { users: 3 })\n  /**\n   * @type {Object<string,any>}\n   */\n  let event = {}\n  map0.observe(e => {\n    event = e\n  })\n  map1.set('stuff', 2)\n  testConnector.flushAllMessages()\n  t.compare(event.value, event.target.get(event.name))\n  compare(users)\n}\n\n/**\n * @type {Array<function(Doc,prng.PRNG):void>}\n */\nconst mapTransactions = [\n  function set (user, gen) {\n    const key = prng.oneOf(gen, ['one', 'two'])\n    var value = prng.utf16String(gen)\n    user.getMap('map').set(key, value)\n  },\n  function setType (user, gen) {\n    const key = prng.oneOf(gen, ['one', 'two'])\n    var type = prng.oneOf(gen, [new Y.Array(), new Y.Map()])\n    user.getMap('map').set(key, type)\n    if (type instanceof Y.Array) {\n      type.insert(0, [1, 2, 3, 4])\n    } else {\n      type.set('deepkey', 'deepvalue')\n    }\n  },\n  function _delete (user, gen) {\n    const key = prng.oneOf(gen, ['one', 'two'])\n    user.getMap('map').delete(key)\n  }\n]\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests10 = tc => {\n  applyRandomTests(tc, mapTransactions, 10)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests40 = tc => {\n  applyRandomTests(tc, mapTransactions, 40)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests42 = tc => {\n  applyRandomTests(tc, mapTransactions, 42)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests43 = tc => {\n  applyRandomTests(tc, mapTransactions, 43)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests44 = tc => {\n  applyRandomTests(tc, mapTransactions, 44)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests45 = tc => {\n  applyRandomTests(tc, mapTransactions, 45)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests46 = tc => {\n  applyRandomTests(tc, mapTransactions, 46)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests300 = tc => {\n  applyRandomTests(tc, mapTransactions, 300)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests400 = tc => {\n  applyRandomTests(tc, mapTransactions, 400)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests500 = tc => {\n  applyRandomTests(tc, mapTransactions, 500)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests600 = tc => {\n  applyRandomTests(tc, mapTransactions, 600)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests1000 = tc => {\n  applyRandomTests(tc, mapTransactions, 1000)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests1800 = tc => {\n  applyRandomTests(tc, mapTransactions, 1800)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests5000 = tc => {\n  t.skip(!t.production)\n  applyRandomTests(tc, mapTransactions, 5000)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests10000 = tc => {\n  t.skip(!t.production)\n  applyRandomTests(tc, mapTransactions, 10000)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testRepeatGeneratingYmapTests100000 = tc => {\n  t.skip(!t.production)\n  applyRandomTests(tc, mapTransactions, 100000)\n}\n","import * as Y from './testHelper.js'\nimport * as t from 'lib0/testing.js'\nconst { init, compare } = Y\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testBasicInsertAndDelete = tc => {\n  const { users, text0 } = init(tc, { users: 2 })\n  let delta\n\n  text0.observe(event => {\n    delta = event.delta\n  })\n\n  text0.delete(0, 0)\n  t.assert(true, 'Does not throw when deleting zero elements with position 0')\n\n  text0.insert(0, 'abc')\n  t.assert(text0.toString() === 'abc', 'Basic insert works')\n  t.compare(delta, [{ insert: 'abc' }])\n\n  text0.delete(0, 1)\n  t.assert(text0.toString() === 'bc', 'Basic delete works (position 0)')\n  t.compare(delta, [{ delete: 1 }])\n\n  text0.delete(1, 1)\n  t.assert(text0.toString() === 'b', 'Basic delete works (position 1)')\n  t.compare(delta, [{ retain: 1 }, { delete: 1 }])\n\n  users[0].transact(() => {\n    text0.insert(0, '1')\n    text0.delete(0, 1)\n  })\n  t.compare(delta, [])\n\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testBasicFormat = tc => {\n  const { users, text0 } = init(tc, { users: 2 })\n  let delta\n  text0.observe(event => {\n    delta = event.delta\n  })\n  text0.insert(0, 'abc', { bold: true })\n  t.assert(text0.toString() === 'abc', 'Basic insert with attributes works')\n  t.compare(text0.toDelta(), [{ insert: 'abc', attributes: { bold: true } }])\n  t.compare(delta, [{ insert: 'abc', attributes: { bold: true } }])\n  text0.delete(0, 1)\n  t.assert(text0.toString() === 'bc', 'Basic delete on formatted works (position 0)')\n  t.compare(text0.toDelta(), [{ insert: 'bc', attributes: { bold: true } }])\n  t.compare(delta, [{ delete: 1 }])\n  text0.delete(1, 1)\n  t.assert(text0.toString() === 'b', 'Basic delete works (position 1)')\n  t.compare(text0.toDelta(), [{ insert: 'b', attributes: { bold: true } }])\n  t.compare(delta, [{ retain: 1 }, { delete: 1 }])\n  text0.insert(0, 'z', { bold: true })\n  t.assert(text0.toString() === 'zb')\n  t.compare(text0.toDelta(), [{ insert: 'zb', attributes: { bold: true } }])\n  t.compare(delta, [{ insert: 'z', attributes: { bold: true } }])\n  // @ts-ignore\n  t.assert(text0._start.right.right.right.content.str === 'b', 'Does not insert duplicate attribute marker')\n  text0.insert(0, 'y')\n  t.assert(text0.toString() === 'yzb')\n  t.compare(text0.toDelta(), [{ insert: 'y' }, { insert: 'zb', attributes: { bold: true } }])\n  t.compare(delta, [{ insert: 'y' }])\n  text0.format(0, 2, { bold: null })\n  t.assert(text0.toString() === 'yzb')\n  t.compare(text0.toDelta(), [{ insert: 'yz' }, { insert: 'b', attributes: { bold: true } }])\n  t.compare(delta, [{ retain: 1 }, { retain: 1, attributes: { bold: null } }])\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testGetDeltaWithEmbeds = tc => {\n  const { text0 } = init(tc, { users: 1 })\n  text0.applyDelta([{\n    insert: { linebreak: 's' }\n  }])\n  t.compare(text0.toDelta(), [{\n    insert: { linebreak: 's' }\n  }])\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testSnapshot = tc => {\n  const { text0 } = init(tc, { users: 1 })\n  const doc0 = /** @type {Y.Doc} */ (text0.doc)\n  doc0.gc = false\n  text0.applyDelta([{\n    insert: 'abcd'\n  }])\n  const snapshot1 = Y.snapshot(doc0)\n  text0.applyDelta([{\n    retain: 1\n  }, {\n    insert: 'x'\n  }, {\n    delete: 1\n  }])\n  const snapshot2 = Y.snapshot(doc0)\n  text0.applyDelta([{\n    retain: 2\n  }, {\n    delete: 3\n  }, {\n    insert: 'x'\n  }, {\n    delete: 1\n  }])\n  const state1 = text0.toDelta(snapshot1)\n  t.compare(state1, [{ insert: 'abcd' }])\n  const state2 = text0.toDelta(snapshot2)\n  t.compare(state2, [{ insert: 'axcd' }])\n  const state2Diff = text0.toDelta(snapshot2, snapshot1)\n  // @ts-ignore Remove userid info\n  state2Diff.forEach(v => {\n    if (v.attributes && v.attributes.ychange) {\n      delete v.attributes.ychange.user\n    }\n  })\n  t.compare(state2Diff, [{ insert: 'a' }, { insert: 'x', attributes: { ychange: { type: 'added' } } }, { insert: 'b', attributes: { ychange: { type: 'removed' } } }, { insert: 'cd' }])\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testSnapshotDeleteAfter = tc => {\n  const { text0 } = init(tc, { users: 1 })\n  const doc0 = /** @type {Y.Doc} */ (text0.doc)\n  doc0.gc = false\n  text0.applyDelta([{\n    insert: 'abcd'\n  }])\n  const snapshot1 = Y.snapshot(doc0)\n  text0.applyDelta([{\n    retain: 4\n  }, {\n    insert: 'e'\n  }])\n  const state1 = text0.toDelta(snapshot1)\n  t.compare(state1, [{ insert: 'abcd' }])\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testToJson = tc => {\n  const { text0 } = init(tc, { users: 1 })\n  text0.insert(0, 'abc', { bold: true })\n  t.assert(text0.toJSON() === 'abc', 'toJSON returns the unformatted text')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testToDeltaEmbedAttributes = tc => {\n  const { text0 } = init(tc, { users: 1 })\n  text0.insert(0, 'ab', { bold: true })\n  text0.insertEmbed(1, { image: 'imageSrc.png' }, { width: 100 })\n  const delta0 = text0.toDelta()\n  t.compare(delta0, [{ insert: 'a', attributes: { bold: true } }, { insert: { image: 'imageSrc.png' }, attributes: { width: 100 } }, { insert: 'b', attributes: { bold: true } }])\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testToDeltaEmbedNoAttributes = tc => {\n  const { text0 } = init(tc, { users: 1 })\n  text0.insert(0, 'ab', { bold: true })\n  text0.insertEmbed(1, { image: 'imageSrc.png' })\n  const delta0 = text0.toDelta()\n  t.compare(delta0, [{ insert: 'a', attributes: { bold: true } }, { insert: { image: 'imageSrc.png' } }, { insert: 'b', attributes: { bold: true } }], 'toDelta does not set attributes key when no attributes are present')\n}\n","import { init, compare } from './testHelper.js'\nimport * as Y from '../src/index.js'\n\nimport * as t from 'lib0/testing.js'\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testSetProperty = tc => {\n  const { testConnector, users, xml0, xml1 } = init(tc, { users: 2 })\n  xml0.setAttribute('height', '10')\n  t.assert(xml0.getAttribute('height') === '10', 'Simple set+get works')\n  testConnector.flushAllMessages()\n  t.assert(xml1.getAttribute('height') === '10', 'Simple set+get works (remote)')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testEvents = tc => {\n  const { testConnector, users, xml0, xml1 } = init(tc, { users: 2 })\n  /**\n   * @type {any}\n   */\n  let event\n  /**\n   * @type {any}\n   */\n  let remoteEvent\n  xml0.observe(e => {\n    event = e\n  })\n  xml1.observe(e => {\n    remoteEvent = e\n  })\n  xml0.setAttribute('key', 'value')\n  t.assert(event.attributesChanged.has('key'), 'YXmlEvent.attributesChanged on updated key')\n  testConnector.flushAllMessages()\n  t.assert(remoteEvent.attributesChanged.has('key'), 'YXmlEvent.attributesChanged on updated key (remote)')\n  // check attributeRemoved\n  xml0.removeAttribute('key')\n  t.assert(event.attributesChanged.has('key'), 'YXmlEvent.attributesChanged on removed attribute')\n  testConnector.flushAllMessages()\n  t.assert(remoteEvent.attributesChanged.has('key'), 'YXmlEvent.attributesChanged on removed attribute (remote)')\n  xml0.insert(0, [new Y.XmlText('some text')])\n  t.assert(event.childListChanged, 'YXmlEvent.childListChanged on inserted element')\n  testConnector.flushAllMessages()\n  t.assert(remoteEvent.childListChanged, 'YXmlEvent.childListChanged on inserted element (remote)')\n  // test childRemoved\n  xml0.delete(0)\n  t.assert(event.childListChanged, 'YXmlEvent.childListChanged on deleted element')\n  testConnector.flushAllMessages()\n  t.assert(remoteEvent.childListChanged, 'YXmlEvent.childListChanged on deleted element (remote)')\n  compare(users)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testTreewalker = tc => {\n  const { users, xml0 } = init(tc, { users: 3 })\n  const paragraph1 = new Y.XmlElement('p')\n  const paragraph2 = new Y.XmlElement('p')\n  const text1 = new Y.XmlText('init')\n  const text2 = new Y.XmlText('text')\n  paragraph1.insert(0, [text1, text2])\n  xml0.insert(0, [paragraph1, paragraph2, new Y.XmlElement('img')])\n  const allParagraphs = xml0.querySelectorAll('p')\n  t.assert(allParagraphs.length === 2, 'found exactly two paragraphs')\n  t.assert(allParagraphs[0] === paragraph1, 'querySelectorAll found paragraph1')\n  t.assert(allParagraphs[1] === paragraph2, 'querySelectorAll found paragraph2')\n  t.assert(xml0.querySelector('p') === paragraph1, 'querySelector found paragraph1')\n  compare(users)\n}\n","import * as t from 'lib0/testing.js'\n\nimport {\n  contentRefs,\n  readContentBinary,\n  readContentDeleted,\n  readContentString,\n  readContentJSON,\n  readContentEmbed,\n  readContentType,\n  readContentFormat,\n  readContentAny\n} from '../src/internals.js'\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testStructReferences = tc => {\n  t.assert(contentRefs.length === 9)\n  t.assert(contentRefs[1] === readContentDeleted)\n  t.assert(contentRefs[2] === readContentJSON) // TODO: deprecate content json?\n  t.assert(contentRefs[3] === readContentBinary)\n  t.assert(contentRefs[4] === readContentString)\n  t.assert(contentRefs[5] === readContentEmbed)\n  t.assert(contentRefs[6] === readContentFormat)\n  t.assert(contentRefs[7] === readContentType)\n  t.assert(contentRefs[8] === readContentAny)\n}\n","import { init, compare, applyRandomTests, Doc } from './testHelper.js' // eslint-disable-line\n\nimport {\n  UndoManager\n} from '../src/internals.js'\n\nimport * as Y from '../src/index.js'\nimport * as t from 'lib0/testing.js'\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testUndoText = tc => {\n  const { testConnector, text0, text1 } = init(tc, { users: 3 })\n  const undoManager = new UndoManager(text0)\n\n  // items that are added & deleted in the same transaction won't be undo\n  text0.insert(0, 'test')\n  text0.delete(0, 4)\n  undoManager.undo()\n  t.assert(text0.toString() === '')\n\n  // follow redone items\n  text0.insert(0, 'a')\n  undoManager.stopCapturing()\n  text0.delete(0, 1)\n  undoManager.stopCapturing()\n  undoManager.undo()\n  t.assert(text0.toString() === 'a')\n  undoManager.undo()\n  t.assert(text0.toString() === '')\n\n  text0.insert(0, 'abc')\n  text1.insert(0, 'xyz')\n  testConnector.syncAll()\n  undoManager.undo()\n  t.assert(text0.toString() === 'xyz')\n  undoManager.redo()\n  t.assert(text0.toString() === 'abcxyz')\n  testConnector.syncAll()\n  text1.delete(0, 1)\n  testConnector.syncAll()\n  undoManager.undo()\n  t.assert(text0.toString() === 'xyz')\n  undoManager.redo()\n  t.assert(text0.toString() === 'bcxyz')\n  // test marks\n  text0.format(1, 3, { bold: true })\n  t.compare(text0.toDelta(), [{ insert: 'b' }, { insert: 'cxy', attributes: { bold: true } }, { insert: 'z' }])\n  undoManager.undo()\n  t.compare(text0.toDelta(), [{ insert: 'bcxyz' }])\n  undoManager.redo()\n  t.compare(text0.toDelta(), [{ insert: 'b' }, { insert: 'cxy', attributes: { bold: true } }, { insert: 'z' }])\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testUndoMap = tc => {\n  const { testConnector, map0, map1 } = init(tc, { users: 2 })\n  map0.set('a', 0)\n  const undoManager = new UndoManager(map0)\n  map0.set('a', 1)\n  undoManager.undo()\n  t.assert(map0.get('a') === 0)\n  undoManager.redo()\n  t.assert(map0.get('a') === 1)\n  // testing sub-types and if it can restore a whole type\n  const subType = new Y.Map()\n  map0.set('a', subType)\n  subType.set('x', 42)\n  t.compare(map0.toJSON(), /** @type {any} */ ({ a: { x: 42 } }))\n  undoManager.undo()\n  t.assert(map0.get('a') === 1)\n  undoManager.redo()\n  t.compare(map0.toJSON(), /** @type {any} */ ({ a: { x: 42 } }))\n  testConnector.syncAll()\n  // if content is overwritten by another user, undo operations should be skipped\n  map1.set('a', 44)\n  testConnector.syncAll()\n  undoManager.undo()\n  t.assert(map0.get('a') === 44)\n  undoManager.redo()\n  t.assert(map0.get('a') === 44)\n\n  // test setting value multiple times\n  map0.set('b', 'initial')\n  undoManager.stopCapturing()\n  map0.set('b', 'val1')\n  map0.set('b', 'val2')\n  undoManager.stopCapturing()\n  undoManager.undo()\n  t.assert(map0.get('b') === 'initial')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testUndoArray = tc => {\n  const { testConnector, array0, array1 } = init(tc, { users: 3 })\n  const undoManager = new UndoManager(array0)\n  array0.insert(0, [1, 2, 3])\n  array1.insert(0, [4, 5, 6])\n  testConnector.syncAll()\n  t.compare(array0.toArray(), [1, 2, 3, 4, 5, 6])\n  undoManager.undo()\n  t.compare(array0.toArray(), [4, 5, 6])\n  undoManager.redo()\n  t.compare(array0.toArray(), [1, 2, 3, 4, 5, 6])\n  testConnector.syncAll()\n  array1.delete(0, 1) // user1 deletes [1]\n  testConnector.syncAll()\n  undoManager.undo()\n  t.compare(array0.toArray(), [4, 5, 6])\n  undoManager.redo()\n  t.compare(array0.toArray(), [2, 3, 4, 5, 6])\n  array0.delete(0, 5)\n  // test nested structure\n  const ymap = new Y.Map()\n  array0.insert(0, [ymap])\n  t.compare(array0.toJSON(), [{}])\n  undoManager.stopCapturing()\n  ymap.set('a', 1)\n  t.compare(array0.toJSON(), [{ a: 1 }])\n  undoManager.undo()\n  t.compare(array0.toJSON(), [{}])\n  undoManager.undo()\n  t.compare(array0.toJSON(), [2, 3, 4, 5, 6])\n  undoManager.redo()\n  t.compare(array0.toJSON(), [{}])\n  undoManager.redo()\n  t.compare(array0.toJSON(), [{ a: 1 }])\n  testConnector.syncAll()\n  array1.get(0).set('b', 2)\n  testConnector.syncAll()\n  t.compare(array0.toJSON(), [{ a: 1, b: 2 }])\n  undoManager.undo()\n  t.compare(array0.toJSON(), [{ b: 2 }])\n  undoManager.undo()\n  t.compare(array0.toJSON(), [2, 3, 4, 5, 6])\n  undoManager.redo()\n  t.compare(array0.toJSON(), [{ b: 2 }])\n  undoManager.redo()\n  t.compare(array0.toJSON(), [{ a: 1, b: 2 }])\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testUndoXml = tc => {\n  const { xml0 } = init(tc, { users: 3 })\n  const undoManager = new UndoManager(xml0)\n  const child = new Y.XmlElement('p')\n  xml0.insert(0, [child])\n  const textchild = new Y.XmlText('content')\n  child.insert(0, [textchild])\n  t.assert(xml0.toString() === '<undefined><p>content</p></undefined>')\n  // format textchild and revert that change\n  undoManager.stopCapturing()\n  textchild.format(3, 4, { bold: {} })\n  t.assert(xml0.toString() === '<undefined><p>con<bold>tent</bold></p></undefined>')\n  undoManager.undo()\n  t.assert(xml0.toString() === '<undefined><p>content</p></undefined>')\n  undoManager.redo()\n  t.assert(xml0.toString() === '<undefined><p>con<bold>tent</bold></p></undefined>')\n  xml0.delete(0, 1)\n  t.assert(xml0.toString() === '<undefined></undefined>')\n  undoManager.undo()\n  t.assert(xml0.toString() === '<undefined><p>con<bold>tent</bold></p></undefined>')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testUndoEvents = tc => {\n  const { text0 } = init(tc, { users: 3 })\n  const undoManager = new UndoManager(text0)\n  let counter = 0\n  let receivedMetadata = -1\n  undoManager.on('stack-item-added', /** @param {any} event */ event => {\n    t.assert(event.type != null)\n    event.stackItem.meta.set('test', counter++)\n  })\n  undoManager.on('stack-item-popped', /** @param {any} event */ event => {\n    t.assert(event.type != null)\n    receivedMetadata = event.stackItem.meta.get('test')\n  })\n  text0.insert(0, 'abc')\n  undoManager.undo()\n  t.assert(receivedMetadata === 0)\n  undoManager.redo()\n  t.assert(receivedMetadata === 1)\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testTrackClass = tc => {\n  const { users, text0 } = init(tc, { users: 3 })\n  // only track origins that are numbers\n  const undoManager = new UndoManager(text0, { trackedOrigins: new Set([Number]) })\n  users[0].transact(() => {\n    text0.insert(0, 'abc')\n  }, 42)\n  t.assert(text0.toString() === 'abc')\n  undoManager.undo()\n  t.assert(text0.toString() === '')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testTypeScope = tc => {\n  const { array0 } = init(tc, { users: 3 })\n  // only track origins that are numbers\n  const text0 = new Y.Text()\n  const text1 = new Y.Text()\n  array0.insert(0, [text0, text1])\n  const undoManager = new UndoManager(text0)\n  const undoManagerBoth = new UndoManager([text0, text1])\n  text1.insert(0, 'abc')\n  t.assert(undoManager.undoStack.length === 0)\n  t.assert(undoManagerBoth.undoStack.length === 1)\n  t.assert(text1.toString() === 'abc')\n  undoManager.undo()\n  t.assert(text1.toString() === 'abc')\n  undoManagerBoth.undo()\n  t.assert(text1.toString() === '')\n}\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testUndoDeleteFilter = tc => {\n  /**\n   * @type {Array<Y.Map<any>>}\n   */\n  const array0 = /** @type {any} */ (init(tc, { users: 3 }).array0)\n  const undoManager = new UndoManager(array0, { deleteFilter: item => !(item instanceof Y.Item) || (item.content instanceof Y.ContentType && item.content.type._map.size === 0) })\n  const map0 = new Y.Map()\n  map0.set('hi', 1)\n  const map1 = new Y.Map()\n  array0.insert(0, [map0, map1])\n  undoManager.undo()\n  t.assert(array0.length === 1)\n  array0.get(0)\n  t.assert(Array.from(array0.get(0).keys()).length === 1)\n}\n","\nimport * as array from './y-array.tests.js'\nimport * as map from './y-map.tests.js'\nimport * as text from './y-text.tests.js'\nimport * as xml from './y-xml.tests.js'\nimport * as encoding from './encoding.tests.js'\nimport * as undoredo from './undo-redo.tests.js'\n\nimport { runTests } from 'lib0/testing.js'\nimport { isBrowser, isNode } from 'lib0/environment.js'\nimport * as log from 'lib0/logging.js'\n\nif (isBrowser) {\n  log.createVConsole(document.body)\n}\nrunTests({\n  map, array, text, xml, encoding, undoredo\n}).then(success => {\n  /* istanbul ignore next */\n  if (isNode) {\n    process.exit(success ? 0 : 1)\n  }\n})\n"],"names":["map.create","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","math.floor","buffer.createUint8ArrayViewFromArrayBuffer","math.max","binary.BITS7","binary.BIT8","binary.BITS6","binary.BIT7","string.encodeUtf8","math.min","number.isInteger","binary.BITS31","string.decodeUtf8","array.appendTo","map.setIfUndefined","encoding.writeVarUint","decoding.readVarUint","encoding.createEncoder","decoding.createDecoder","encoding.toUint8Array","create","set.create","array.from","performance","iso","cryptoRandomBuffer","random.uint32","decoding.readUint8","binary.BITS5","map","length","f.callAll","error.unexpectedCase","encoding.writeUint8","encoding.writeVarString","decoding.readVarString","map.any","math.log10","math.round","math.exp10","metric.prefix","time.getUnixTime","array.last","error.methodUnimplemented","error.create","iterator.iteratorFilter","iterator.iteratorMap","object.equalFlat","encoding.writeVarUint8Array","buffer.copyUint8Array","decoding.readVarUint8Array","encoding.writeAny","decoding.readAny","maplib.setIfUndefined","binary.BIT6","forEach","pair.forEach","map.map","symbol.create","pair.create","dom.mapToStyleString","env.isNode","env.isBrowser","dom.element","dom.text","json.stringify","eventloop.enqueue","dom.append","dom.addEventListener","binary.BITS32","min","math.ceil","math.add","env.hasConf","env.hasParam","env.getParam","prng.create","log.GREY","log.PURPLE","log.BLUE","log.groupCollapsed","log.group","log.printError","log.groupEnd","time.humanizeDuration","statistics.median","statistics.average","log.print","log.BOLD","log.UNBOLD","log.RED","log.UNCOLOR","log.GREEN","object.length","object.forEach","object.hasProperty","object.map","log.printImgBase64","Y.encodeStateVector","Y.encodeStateAsUpdate","Y.applyUpdate","readUpdate","syncProtocol.writeUpdate","syncProtocol.writeSyncStep1","prng.oneOf","syncProtocol.readSyncMessage","encoding.length","Y.Array","Y.Map","Y.XmlElement","Y.Text","compare","t.assert","t.compare","Y.AbstractType","Y.compareIDs","t.fail","prng.int31","prng.bool","t.describe","t.fails","t.compareArrays","Y.Doc","t.skip","t.production","testChangeEvent","prng.utf16String","init","Y.snapshot","Y.XmlText","Y.Item","Y.ContentType","log.createVConsole","text"],"mappings":";;;EAAA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAC;AAc9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK;EACvC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACvC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;EACrB,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM,IAAI,GAAG,KAAK,CAAC;;ECjD1B;EACA;EACA;EACA;EACA;AACA;AACA,EAAO,MAAM,KAAK,GAAG,IAAI,CAAC,MAAK;AAC/B,EAAO,MAAM,IAAI,GAAG,IAAI,CAAC,KAAI;AAC7B,EAEO,MAAM,KAAK,GAAG,IAAI,CAAC,MAAK;AAC/B,EAAO,MAAM,KAAK,GAAG,IAAI,CAAC,MAAK;AAC/B,AAGA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAC;AAClC;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AAC1C;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AAC1C,EAIA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC;;ECjD7C;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,MAAM,IAAI,GAAG,GAAE;AACrC,AAcA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,KAAK;EACrD,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;EACxB,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;EACzB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,EAAE,EAAC;EACjC,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;EAC7B,EAAE,MAAM,GAAG,GAAG,GAAE;EAChB,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;EAChC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAC;EAC3B,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;EAC7B,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;EAChC,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;EACvB,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,GAAG;EACH,EAAE,OAAO,KAAK;EACd,CAAC;;EC3FD;EACA;EACA;EACA;EACA;AACA,EAEO,MAAM,aAAa,GAAG,MAAM,CAAC,cAAa;AACjD;EACA;EACA;EACA;EACA;EACA,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,GAAE;AACxC;EACA,MAAM,aAAa,GAAG,QAAO;AAC7B;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,EAAC;AACzD;EACA,MAAM,kBAAkB,GAAG,WAAU;AACrC;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAK,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;AACpI,AAOA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,GAAG,IAAI;EAC1C,EAAE,MAAM,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAC;EACzD,EAAE,MAAM,GAAG,GAAG,aAAa,CAAC,OAAM;EAClC,EAAE,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;EACjC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAChC,IAAI,GAAG,CAAC,CAAC,CAAC,0BAA0B,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC;EACjE,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACA;AACA,EAAO,MAAM,eAAe,+BAA+B,OAAO,WAAW,KAAK,WAAW,GAAG,IAAI,WAAW,EAAE,GAAG,IAAI,EAAC;AACzH;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,GAAG,EAAC;AACnE;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,eAAe,GAAG,iBAAiB,GAAG,oBAAmB;AACnF;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,GAAG,IAAI;EAC1C,EAAE,IAAI,YAAY,GAAG,GAAG,CAAC,OAAM;EAC/B,EAAE,IAAI,aAAa,GAAG,GAAE;EACxB,EAAE,IAAI,MAAM,GAAG,EAAC;EAChB,EAAE,OAAO,YAAY,GAAG,CAAC,EAAE;EAC3B,IAAI,MAAM,OAAO,GAAG,YAAY,GAAG,KAAK,GAAG,YAAY,GAAG,MAAK;EAC/D,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,EAAC;EACpC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;EACtC,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAC;EAC9B,KAAK;EACL,IAAI,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAC;EAC5D,IAAI,YAAY,IAAI,QAAO;EAC3B,GAAG;EACH,EAAE,OAAO,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;EAClD,EAAC;AACD;EACA;AACA,EAAO,MAAM,eAAe,GAAG,OAAO,WAAW,KAAK,WAAW,GAAG,IAAI,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAC;AACpH;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,GAAG,+BAA+B,CAAC,eAAe,EAAE,MAAM,CAAC,GAAG,EAAC;AAChG;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,eAAe,GAAG,iBAAiB,GAAG,mBAAmB;;ECvGnF;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,GAAG,IAAI,GAAG,CAAC;;ECZ9D;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA,MAAM,kBAAkB,CAAC;EACzB,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,GAAE;EACxB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE;EACvB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EAC5B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE;EAChB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;EAC5B,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA,IAAI,aAAa,GAAG,IAAI,kBAAkB,GAAE;AAC5C;EACA,IAAI;EACJ;EACA;EACA,EAAE,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;EAC3C,IAAI,aAAa,GAAG,aAAY;EAChC,GAAG;EACH,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG;AACf;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,aAAa;;EClDvC;EACA;EACA;EACA;EACA;AACA,AAKA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,CAAC,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAC;EACnH;AACA,EAAO,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,OAAM;EACjE;AACA,EAAO,MAAM,KAAK,GAAG,OAAO,SAAS,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,MAAK;AAC9F;EACA;EACA;EACA;EACA,IAAI,OAAM;AACV,AACA;EACA;EACA,MAAM,aAAa,GAAG,MAAM;EAC5B,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;EAC5B,IAAI,IAAI,MAAM,EAAE;EAChB,MAAM,MAAM,GAAGA,MAAU,GAAE;EAC3B,MAAM,MAAM,KAAK,GAAG,OAAO,CAAC,KAAI;EAChC,MAAM,IAAI,aAAa,GAAG,KAAI;EAC9B;EACA,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;EAC7B,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;EAC7B,UAAU,IAAI,aAAa,KAAK,IAAI,EAAE;EACtC,YAAY,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,EAAC;EACzC,WAAW;EACX,UAAU,aAAa,GAAG,KAAI;EAC9B,SAAS,MAAM;EACf,UAAU,IAAI,aAAa,KAAK,IAAI,EAAE;EACtC,YAAY,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,EAAC;EAC3C,YAAY,aAAa,GAAG,KAAI;EAChC,WAAW,AAEA;EACX,SAAS;EACT,OAAO;EACP,MAAM,IAAI,aAAa,KAAK,IAAI,EAAE;EAClC,QAAQ,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,EAAC;EACrC,OAAO;EACP,KAAK,MAAM;EACX,MAAM,MAAM,GAAGA,MAAU,EAAE;EAC3B;EACA,OAAO,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI;EAClE,QAAQ,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;EAC7B,UAAU,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAC;EAC5C,UAAU,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAEC,aAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC;EAClE,UAAU,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAEA,aAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC;EACjE,SAAS;EACT,OAAO,EAAC;EACR,KAAK;EACL,GAAG;EACH,EAAE,OAAO,MAAM;EACf,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,IAAI,IAAI,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,EAAC;AACzD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,UAAU,KAAK,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,WAAU;EACrF;AACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,IAAI,IAAI,MAAM,GAAGC,eAA0B,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,GAAGA,eAA0B,CAACC,UAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;AACtK,AAMA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,IAAI,IAAI,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,KAAI;AAClF;EACA;AACA,EAAO,MAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC;;ECxG/C;EACA;EACA;EACA;EACA;AACA,AAGA;EACA;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,GAAG,IAAI,IAAI,UAAU,CAAC,GAAG,EAAC;AACjE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,KAAK,IAAI,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAC;AAC7H,AAqDA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,UAAU,IAAI;EAC5C,EAAE,MAAM,MAAM,GAAG,uBAAuB,CAAC,UAAU,CAAC,UAAU,EAAC;EAC/D,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,EAAC;EACxB,EAAE,OAAO,MAAM;EACf,CAAC;;ECtFD;AACA,EAiBO,MAAM,IAAI,GAAG,GAAE;AACtB,EAAO,MAAM,IAAI,GAAG,GAAE;AACtB,EAAO,MAAM,IAAI,GAAG,IAAG;AACvB,EAmCO,MAAM,KAAK,GAAG,GAAE;AACvB,EAAO,MAAM,KAAK,GAAG,GAAE;AACvB,EAAO,MAAM,KAAK,GAAG,IAAG;AACxB,EAuBO,MAAM,MAAM,GAAG,WAAU;AAChC,EAAO,MAAM,MAAM,GAAG,UAAU;;ECnFhC;EACA;EACA;EACA;EACA;AACA,AASA;EACA;EACA;EACA;AACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,KAAK,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAIC,KAAU,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC;;ECpBzH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,AAMA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,CAAC;EACrB,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,IAAI,CAAC,IAAI,GAAG,EAAC;EACjB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;EACnC;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,GAAE;EAClB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,GAAE;AAChD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,OAAO,IAAI;EACjC,EAAE,IAAI,GAAG,GAAG,OAAO,CAAC,KAAI;EACxB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAChD,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAM;EACjC,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,OAAO,IAAI;EACvC,EAAE,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC;EAClD,EAAE,IAAI,MAAM,GAAG,EAAC;EAChB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAChD,IAAI,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAC;EAC7B,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAC;EAC3B,IAAI,MAAM,IAAI,CAAC,CAAC,OAAM;EACtB,GAAG;EACH,EAAE,QAAQ,CAAC,GAAG,CAACC,mCAA0C,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAC;EACxG,EAAE,OAAO,QAAQ;EACjB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EACpC,EAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,OAAM;EACvC,EAAE,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,EAAE;EACtC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAACA,mCAA0C,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAC;EACvG,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI,UAAU,CAACC,GAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,EAAC;EAC/D,IAAI,OAAO,CAAC,IAAI,GAAG,EAAC;EACpB,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EACvC,EAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,OAAM;EACvC,EAAE,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;EAClC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC;EACnC,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,SAAS,GAAG,CAAC,EAAC;EAChD,IAAI,OAAO,CAAC,IAAI,GAAG,EAAC;EACpB,GAAG;EACH,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,IAAG;EACpC,EAAC;AACD,AA2BA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,MAAK;AAC/B,AA+DA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EAC9C,EAAE,OAAO,GAAG,GAAGC,KAAY,EAAE;EAC7B,IAAI,KAAK,CAAC,OAAO,EAAEC,IAAW,IAAID,KAAY,GAAG,GAAG,CAAC,EAAC;EACtD,IAAI,GAAG,MAAM,EAAC;EACd,GAAG;EACH,EAAE,KAAK,CAAC,OAAO,EAAEA,KAAY,GAAG,GAAG,EAAC;EACpC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EAC7C,EAAE,IAAI,UAAU,GAAG,MAAK;EACxB,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE;EACf,IAAI,GAAG,GAAG,CAAC,IAAG;EACd,IAAI,UAAU,GAAG,KAAI;EACrB,GAAG;EACH;EACA,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,GAAGE,KAAY,GAAGD,IAAW,GAAG,CAAC,KAAK,UAAU,GAAGE,IAAW,GAAG,CAAC,CAAC,IAAID,KAAY,GAAG,GAAG,CAAC,EAAC;EAChH,EAAE,GAAG,MAAM,EAAC;EACZ;EACA;EACA,EAAE,OAAO,GAAG,GAAG,CAAC,EAAE;EAClB,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,GAAGF,KAAY,GAAGC,IAAW,GAAG,CAAC,KAAKD,KAAY,GAAG,GAAG,CAAC,EAAC;EACjF,IAAI,GAAG,MAAM,EAAC;EACd,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG;EAC3C,EAAE,kBAAkB,CAAC,OAAO,EAAEI,UAAiB,CAAC,GAAG,CAAC,EAAC;AACrD,AAWA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;EACxD,EAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,OAAM;EACvC,EAAE,MAAM,IAAI,GAAG,OAAO,CAAC,KAAI;EAC3B,EAAE,MAAM,WAAW,GAAGC,GAAQ,CAAC,SAAS,GAAG,IAAI,EAAE,UAAU,CAAC,MAAM,EAAC;EACnE,EAAE,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,GAAG,YAAW;EACtD,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,IAAI,EAAC;EAC7D,EAAE,OAAO,CAAC,IAAI,IAAI,YAAW;EAC7B,EAAE,IAAI,YAAY,GAAG,CAAC,EAAE;EACxB;EACA;EACA,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC;EACnC;EACA,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI,UAAU,CAACN,GAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,YAAY,CAAC,EAAC;EACxE;EACA,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;EACtD,IAAI,OAAO,CAAC,IAAI,GAAG,aAAY;EAC/B,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;EAC3D,EAAE,YAAY,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,EAAC;EAC9C,EAAE,eAAe,CAAC,OAAO,EAAE,UAAU,EAAC;EACtC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EACjD,EAAE,SAAS,CAAC,OAAO,EAAE,GAAG,EAAC;EACzB,EAAE,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,GAAG,EAAC;EACpE,EAAE,OAAO,CAAC,IAAI,IAAI,IAAG;EACrB,EAAE,OAAO,KAAK;EACd,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,EAAC;AAC5F;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,EAAC;AAC5F;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,GAAG,wBAAwB,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,GAAG,EAAC;AACnH,AAMA;EACA,MAAM,YAAY,GAAG,IAAI,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,EAAC;EACrD;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,SAAS,GAAG,GAAG,IAAI;EACzB,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,EAAC;EACjC,EAAE,OAAO,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG;EAC3C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,IAAI,KAAK;EAC3C,EAAE,QAAQ,OAAO,IAAI;EACrB,IAAI,KAAK,QAAQ;EACjB;EACA,MAAM,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EACzB,MAAM,cAAc,CAAC,OAAO,EAAE,IAAI,EAAC;EACnC,MAAM,KAAK;EACX,IAAI,KAAK,QAAQ;EACjB,MAAM,IAAIO,SAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,IAAIC,MAAa,EAAE;EAC3D;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,QAAQ,WAAW,CAAC,OAAO,EAAE,IAAI,EAAC;EAClC,OAAO,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;EAClC;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,QAAQ,YAAY,CAAC,OAAO,EAAE,IAAI,EAAC;EACnC,OAAO,MAAM;EACb;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,QAAQ,YAAY,CAAC,OAAO,EAAE,IAAI,EAAC;EACnC,OAAO;EACP,MAAM,KAAK;EACX,IAAI,KAAK,QAAQ;EACjB;EACA,MAAM,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EACzB,MAAM,aAAa,CAAC,OAAO,EAAE,IAAI,EAAC;EAClC,MAAM,KAAK;EACX,IAAI,KAAK,QAAQ;EACjB,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;EACzB;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,OAAO,MAAM,IAAI,IAAI,YAAY,KAAK,EAAE;EACxC;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,QAAQ,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAC;EAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC9C,UAAU,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAC;EACpC,SAAS;EACT,OAAO,MAAM,IAAI,IAAI,YAAY,UAAU,EAAE;EAC7C;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,QAAQ,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAC;EACzC,OAAO,MAAM;EACb;EACA,QAAQ,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAC3B,QAAQ,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAC;EACtC,QAAQ,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAC;EAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC9C,UAAU,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EAC7B,UAAU,cAAc,CAAC,OAAO,EAAE,GAAG,EAAC;EACtC,UAAU,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,EAAC;EACtC,SAAS;EACT,OAAO;EACP,MAAM,KAAK;EACX,IAAI,KAAK,SAAS;EAClB;EACA,MAAM,KAAK,CAAC,OAAO,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,EAAC;EACtC,MAAM,KAAK;EACX,IAAI;EACJ;EACA,MAAM,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EACzB,GAAG;EACH,CAAC;;ECjeD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,AAIA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,CAAC;EACrB;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,UAAU,EAAE;EAC3B;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,WAAU;EACzB;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,EAAC;EAChB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,UAAU,IAAI,IAAI,OAAO,CAAC,UAAU,EAAC;AAClE,AAsBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EAChD,EAAE,MAAM,IAAI,GAAGT,mCAA0C,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAC;EACxH,EAAE,OAAO,CAAC,GAAG,IAAI,IAAG;EACpB,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC,EAAC;AACzF,AAgBA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;AAC9D,AAqEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,OAAO,IAAI;EACtC,EAAE,IAAI,GAAG,GAAG,EAAC;EACb,EAAE,IAAI,GAAG,GAAG,EAAC;EACb,EAAE,OAAO,IAAI,EAAE;EACf,IAAI,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;EACxC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAGE,KAAY,KAAK,GAAG,EAAC;EAC3C,IAAI,GAAG,IAAI,EAAC;EACZ,IAAI,IAAI,CAAC,GAAGC,IAAW,EAAE;EACzB,MAAM,OAAO,GAAG,KAAK,CAAC;EACtB,KAAK;EACL;EACA,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE;EAClB,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;EAC9C,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,OAAO,IAAI;EACrC,EAAE,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;EACpC,EAAE,IAAI,GAAG,GAAG,CAAC,GAAGC,MAAY;EAC5B,EAAE,IAAI,GAAG,GAAG,EAAC;EACb,EAAE,MAAM,IAAI,GAAG,CAAC,CAAC,GAAGC,IAAW,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAC;EAC7C,EAAE,IAAI,CAAC,CAAC,GAAGF,IAAW,MAAM,CAAC,EAAE;EAC/B;EACA,IAAI,OAAO,IAAI,GAAG,GAAG;EACrB,GAAG;EACH,EAAE,OAAO,IAAI,EAAE;EACf,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;EAClC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAGD,KAAY,KAAK,GAAG,EAAC;EAC3C,IAAI,GAAG,IAAI,EAAC;EACZ,IAAI,IAAI,CAAC,GAAGC,IAAW,EAAE;EACzB,MAAM,OAAO,IAAI,GAAG,GAAG;EACvB,KAAK;EACL;EACA,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE;EAClB,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;EAC9C,KAAK;EACL,GAAG;EACH,EAAC;AACD,AA4BA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,OAAO;EACpC,EAAEO,UAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAC;AAC/C,AAcA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EAClD,EAAE,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,EAAC;EACxF,EAAE,OAAO,CAAC,GAAG,IAAI,IAAG;EACpB,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAC;AAChF;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAC;AAChF;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,OAAO,uBAAuB,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAC;AACvG,AAKA;EACA;EACA;EACA;EACA,MAAM,kBAAkB,GAAG;EAC3B,EAAE,OAAO,IAAI,SAAS;EACtB,EAAE,OAAO,IAAI,IAAI;EACjB,EAAE,UAAU;EACZ,EAAE,WAAW;EACb,EAAE,WAAW;EACb,EAAE,YAAY;EACd,EAAE,OAAO,IAAI,KAAK;EAClB,EAAE,OAAO,IAAI,IAAI;EACjB,EAAE,aAAa;EACf,EAAE,OAAO,IAAI;EACb,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,EAAC;EACpC;EACA;EACA;EACA,IAAI,MAAM,GAAG,GAAG,GAAE;EAClB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAClC,MAAM,MAAM,GAAG,GAAG,aAAa,CAAC,OAAO,EAAC;EACxC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,EAAC;EACjC,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;EACH,EAAE,OAAO,IAAI;EACb,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,EAAC;EACpC,IAAI,MAAM,GAAG,GAAG,GAAE;EAClB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAClC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC;EAChC,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;EACH,EAAE,iBAAiB;EACnB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,OAAO,IAAI,kBAAkB,CAAC,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;;EC1XhF,MAAM,UAAU,CAAC;EACxB;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE;EAC3B;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,CAAC;EACvB,EAAE,WAAW,CAAC,GAAG;EACjB;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,GAAE;EAC5B,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,qBAAqB,GAAG,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC;EACxD,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,KAAK;EAC5C,IAAI,MAAM,OAAO,kCAAkC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAC;EAC/F,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,MAAM,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,EAAC;EAC5B,MAAM,cAAc,CAAC,WAAW,EAAE,OAAO,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACjE,KAAK;EACL,GAAG,EAAC;AACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,KAAK,KAAK;EAC3C,EAAE,IAAI,IAAI,GAAG,EAAC;EACd,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,EAAC;EAC5B,EAAE,OAAO,IAAI,IAAI,KAAK,EAAE;EACxB,IAAI,MAAM,QAAQ,GAAGX,KAAU,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,EAAC;EACnD,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAC;EAC7B,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAK;EAC9B,IAAI,IAAI,QAAQ,IAAI,KAAK,EAAE;EAC3B,MAAM,IAAI,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG,EAAE;EACtC,QAAQ,OAAO,QAAQ;EACvB,OAAO;EACP,MAAM,IAAI,GAAG,QAAQ,GAAG,EAAC;EACzB,KAAK,MAAM;EACX,MAAM,KAAK,GAAG,QAAQ,GAAG,EAAC;EAC1B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK;EACrC,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAC;EACvC,EAAE,OAAO,GAAG,KAAK,SAAS,IAAI,WAAW,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,IAAI;EACjE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,qBAAqB,GAAG,EAAE,IAAI;EAC3C,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC7B,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAC;EAC1C;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,EAAE,EAAC;EACZ,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC;EAC9B,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,EAAC;EAC3B,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,KAAK,EAAE;EACjD,QAAQ,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAG;EAC7B,OAAO,MAAM;EACb,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;EACnB,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,MAAK;EACzB,SAAS;EACT,QAAQ,CAAC,GAAE;EACX,OAAO;EACP,KAAK;EACL,IAAI,IAAI,CAAC,MAAM,GAAG,EAAC;EACnB,GAAG,EAAC;EACJ,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,GAAG,IAAI;EACtC,EAAE,MAAM,MAAM,GAAG,IAAI,SAAS,GAAE;EAChC,EAAE,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;EAChD,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,MAAM,KAAK;EACpD,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;EACvC;EACA;EACA;EACA;EACA;EACA,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,GAAE;EACrC,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACpD,UAAUY,QAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC;EAChE,SAAS;EACT,QAAQ,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAC;EACxC,OAAO;EACP,KAAK,EAAC;EACN,GAAG;EACH,EAAE,qBAAqB,CAAC,MAAM,EAAC;EAC/B,EAAE,OAAO,MAAM;EACf,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,KAAK;EAClD,EAAEC,cAAkB,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAC;EAC5F,EAAC;AACD;AACA,EAAO,MAAM,eAAe,GAAG,MAAM,IAAI,SAAS,GAAE;AACpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,8BAA8B,GAAG,EAAE,IAAI;EACpD,EAAE,MAAM,EAAE,GAAG,eAAe,GAAE;EAC9B,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;EAC1C;EACA;EACA;EACA,IAAI,MAAM,OAAO,GAAG,GAAE;EACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,MAAM,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,EAAC;EAC/B,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;EAC1B,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,MAAK;EACrC,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,OAAM;EAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;EACpC,UAAU,KAAK,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;EAC5I,YAAY,GAAG,IAAI,IAAI,CAAC,OAAM;EAC9B,WAAW;EACX,SAAS;EACT,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,EAAC;EAChD,OAAO;EACP,KAAK;EACL,IAAI,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;EAC5B,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAC;EACrC,KAAK;EACL,GAAG,EAAC;EACJ,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,EAAE,KAAK;EAC/C,EAAEC,YAAqB,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC;EACjD,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;EAC1C,IAAIA,YAAqB,CAAC,OAAO,EAAE,MAAM,EAAC;EAC1C,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,OAAM;EAC9B,IAAIA,YAAqB,CAAC,OAAO,EAAE,GAAG,EAAC;EACvC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAClC,MAAM,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,EAAC;EAC7B,MAAMA,YAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAC;EAChD,MAAMA,YAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAC;EAC9C,KAAK;EACL,GAAG,EAAC;EACJ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,OAAO,IAAI;EACxC,EAAE,MAAM,EAAE,GAAG,IAAI,SAAS,GAAE;EAC5B,EAAE,MAAM,UAAU,GAAGC,WAAoB,CAAC,OAAO,EAAC;EAClD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;EACvC,IAAI,MAAM,MAAM,GAAGA,WAAoB,CAAC,OAAO,EAAC;EAChD,IAAI,MAAM,eAAe,GAAGA,WAAoB,CAAC,OAAO,EAAC;EACzD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;EAC9C,MAAM,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAEA,WAAoB,CAAC,OAAO,CAAC,CAAC,EAAEA,WAAoB,CAAC,OAAO,CAAC,EAAC;EACxG,KAAK;EACL,GAAG;EACH,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,qBAAqB,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,KAAK,KAAK;EACtE,EAAE,MAAM,WAAW,GAAG,IAAI,SAAS,GAAE;EACrC,EAAE,MAAM,UAAU,GAAGA,WAAoB,CAAC,OAAO,EAAC;EAClD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;EACvC,IAAI,MAAM,MAAM,GAAGA,WAAoB,CAAC,OAAO,EAAC;EAChD,IAAI,MAAM,eAAe,GAAGA,WAAoB,CAAC,OAAO,EAAC;EACzD,IAAI,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAE;EACnD,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAC;EACzC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;EAC9C,MAAM,MAAM,KAAK,GAAGA,WAAoB,CAAC,OAAO,EAAC;EACjD,MAAM,MAAM,GAAG,GAAGA,WAAoB,CAAC,OAAO,EAAC;EAC/C,MAAM,IAAI,KAAK,GAAG,KAAK,EAAE;EACzB,QAAQ,IAAI,KAAK,GAAG,KAAK,GAAG,GAAG,EAAE;EACjC,UAAU,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG,KAAK,EAAC;EACnF,SAAS;EACT,QAAQ,IAAI,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,EAAC;EAC/C;EACA;EACA;EACA;EACA;EACA,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,EAAC;EACnC;EACA,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE;EACxD,UAAU,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC;EAC/F,UAAU,KAAK,GAAE;EACjB,SAAS;EACT,QAAQ,OAAO,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE;EACvC;EACA,UAAU,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,EAAC;EACnC,UAAU,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,GAAG,GAAG,EAAE;EAC7C,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;EACjC,cAAc,IAAI,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE;EACjE,gBAAgB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC;EACvG,eAAe;EACf,cAAc,MAAM,CAAC,MAAM,CAAC,WAAW,EAAC;EACxC,aAAa;EACb,WAAW,MAAM;EACjB,YAAY,KAAK;EACjB,WAAW;EACX,SAAS;EACT,OAAO,MAAM;EACb,QAAQ,cAAc,CAAC,WAAW,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,GAAG,EAAC;EACjE,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAE,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE;EACpC;EACA,IAAI,MAAM,kBAAkB,GAAGC,aAAsB,GAAE;EACvD,IAAI,cAAc,CAAC,kBAAkB,EAAE,WAAW,EAAC;EACnD,IAAI,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAACC,aAAsB,CAACC,YAAqB,CAAC,kBAAkB,CAAC,CAAC,EAAC;EACtG,GAAG;EACH,CAAC;;ECxTD;EACA;EACA;EACA;EACA;AACA;AACA,EAAO,MAAMC,QAAM,GAAG,MAAM,IAAI,GAAG,EAAE;;ECNrC;EACA;EACA;EACA;EACA;AACA,AAIA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,CAAC;EACxB,EAAE,WAAW,CAAC,GAAG;EACjB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,UAAU,GAAGvB,MAAU,GAAE;EAClC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;EACf,IAAIiB,cAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAEO,QAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;EAChE,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;EACjB;EACA;EACA;EACA,IAAI,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,KAAK;EAC5B,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAC;EACvB,MAAM,CAAC,CAAC,GAAG,IAAI,EAAC;EAChB,MAAK;EACL,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAC;EACrB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;EAChB,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAC;EAC/C,IAAI,IAAI,SAAS,KAAK,SAAS,EAAE;EACjC,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC;EACzB,MAAM,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,EAAE;EAChC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAC;EACpC,OAAO;EACP,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE;EACpB;EACA,IAAI,OAAOC,IAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAIzB,MAAU,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;EACpG,GAAG;AACH;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,IAAI,CAAC,UAAU,GAAGA,MAAU,GAAE;EAClC,GAAG;EACH,CAAC;;EC9ED;EACA,MAAM,IAAI,GAAG,OAAO,WAAW,KAAK,WAAW,GAAG,IAAI,GAAG,YAAW;AACpE;EACA,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,IAAI,GAAG,OAAM;AAC/D;EACA;EACA;EACA;EACA,MAAM,kBAAkB,GAAG,SAAS,KAAK,IAAI;EAC7C,IAAI,GAAG,IAAI;EACX;EACA,IAAI,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;EACnC,IAAI,SAAS,CAAC,eAAe,CAAC,GAAG,EAAC;EAClC,IAAI,OAAO,GAAG,CAAC,MAAM;EACrB,GAAG;EACH,IAAI,GAAG,IAAI;EACX;EACA,IAAI,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;EACnC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAClC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,MAAM,CAAC,EAAC;EAC5D,KAAK;EACL,IAAI,OAAO,GAAG,CAAC,MAAM;EACrB,IAAG;AACH;EACA,iBAAmB,GAAG,KAAI;EAC1B,wBAA0B,GAAG;;;;;;;ECzB7B;EACA;EACA;EACA;EACA;AACA,AAGA;AACA,EAAO,MAAM0B,aAAW,uBAAuBC,UAAG,CAAC,WAAW,EAAC;AAC/D,EAAO,MAAMC,oBAAkB,uBAAuBD,UAAG,CAAC,kBAAkB,CAAC;;ECI7E;AACA,EAAO,MAAM,MAAM,GAAG,MAAM,IAAI,WAAW,CAACC,oBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;ECfrE;EACA;EACA;AACA,AAeA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,SAAS,UAAU,CAAC;EACpC;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,QAAQ,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,EAAE;EAC1D,IAAI,KAAK,GAAE;EACX,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;EAC5B,IAAI,IAAI,CAAC,QAAQ,GAAGC,MAAa,GAAE;EACnC;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,GAAE;EAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,GAAE;EAClC;EACA;EACA;EACA,IAAI,IAAI,CAAC,YAAY,GAAG,KAAI;EAC5B;EACA;EACA;EACA,IAAI,IAAI,CAAC,oBAAoB,GAAG,GAAE;EAClC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE;EAC9B,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAC;EAC7B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,eAAe,GAAG,YAAY,EAAE;EAC7C,IAAI,MAAM,IAAI,GAAGZ,cAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM;EAC5D;EACA,MAAM,MAAM,CAAC,GAAG,IAAI,eAAe,GAAE;EACrC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAC;EAC9B,MAAM,OAAO,CAAC;EACd,KAAK,EAAC;EACN,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,YAAW;EACnC,IAAI,IAAI,eAAe,KAAK,YAAY,IAAI,MAAM,KAAK,eAAe,EAAE;EACxE,MAAM,IAAI,MAAM,KAAK,YAAY,EAAE;EACnC;EACA,QAAQ,MAAM,CAAC,GAAG,IAAI,eAAe,GAAE;EACvC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAI;EAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,yBAAyB,CAAC,IAAI;EACvD,UAAU,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;EACzC;EACA,YAAY,CAAC,CAAC,MAAM,GAAG,EAAC;EACxB,WAAW;EACX,SAAS,EAAC;EACV,QAAQ,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,OAAM;EAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;EACxD,UAAU,CAAC,CAAC,MAAM,GAAG,EAAC;EACtB,SAAS;EACT,QAAQ,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,QAAO;EAChC,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAC;EAC/B,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAC;EAChC,QAAQ,OAAO,CAAC;EAChB,OAAO,MAAM;EACb,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,mBAAmB,EAAE,IAAI,CAAC,sDAAsD,CAAC,CAAC;EAC3G,OAAO;EACP,KAAK;EACL,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE;EAClB;EACA,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;EACjC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE;EACjB;EACA,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;EAChC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE;EAChB;EACA,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;EAC/B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,cAAc,CAAC,CAAC,IAAI,EAAE;EACxB;EACA,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC;EACvC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAC;EAClC,IAAI,KAAK,CAAC,OAAO,GAAE;EACnB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE;EACpB,IAAI,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAC;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE;EACrB,IAAI,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,EAAC;EAC3B,GAAG;EACH,CAAC;;EC5JD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,KAAK;EAC1D;EACA,EAAE,MAAM,eAAe,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,EAAC;EACrD;EACA,EAAEC,YAAqB,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,GAAG,eAAe,EAAC;EAClE,EAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC;EAC3C,EAAE,MAAM,WAAW,GAAG,OAAO,CAAC,eAAe,EAAC;EAC9C;EACA,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAC;EAC7D,EAAE,KAAK,IAAI,CAAC,GAAG,eAAe,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7D,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAC;EACnC,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,MAAM,KAAK;EAC1D;EACA;EACA;EACA,EAAE,MAAM,IAAI,GAAG,GAAE;EACjB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;EACzC,IAAI,MAAM,IAAI,GAAGY,SAAkB,CAAC,OAAO,EAAC;EAC5C,IAAI,MAAM,GAAG,GAAG,CAACC,KAAY,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;EACnH,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,EAAC;EAC/D,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC;EAClB,GAAG;EACH,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,KAAK;EAC5D;EACA,EAAE,MAAM,EAAE,GAAG,IAAI,GAAG,GAAE;EACtB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;EACjC;EACA,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,KAAK,EAAE;EACzC,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAC;EAC3B,KAAK;EACL,GAAG,EAAC;EACJ,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;EACnD,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;EAC1B,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAC;EACvB,KAAK;EACL,GAAG,EAAC;EACJ;EACA,EAAEb,YAAqB,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAC;EACzC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;EAChC;EACA,IAAI,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAC;EACnE,GAAG,EAAC;EACJ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,qBAAqB,GAAG,OAAO,IAAI;EAChD;EACA;EACA;EACA,EAAE,MAAM,UAAU,GAAG,IAAI,GAAG,GAAE;EAC9B,EAAE,MAAM,iBAAiB,GAAGC,WAAoB,CAAC,OAAO,EAAC;EACzD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;EAC9C,IAAI,MAAM,eAAe,GAAGA,WAAoB,CAAC,OAAO,EAAC;EACzD,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,EAAC;EAClC,IAAI,MAAM,IAAI,GAAG,cAAc,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAC;EACjE,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAC;EACvC,GAAG;EACH,EAAE,OAAO,UAAU;EACnB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,uBAAuB,GAAG,CAAC,WAAW,EAAE,KAAK,KAAK;EACxD,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC,aAAY;EAClC,EAAE,MAAM,iBAAiB,GAAG,KAAK,CAAC,yBAAwB;EAC1D;EACA,EAAE,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,iBAAiB,CAAC,IAAI,KAAK,CAAC,EAAE;EAC7D,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EAC5B;EACA,MAAM,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,MAAK;EAC3E,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAC;EACjD,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,EAAE;EACnD,QAAQ,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAC;EACxC,OAAO;EACP,KAAK;EACL,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EACvC,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,SAAQ;EAC1B,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,OAAM;EAChC,IAAI,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAC;EAC9C,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,EAAC;EAC5E,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,KAAK,UAAU,EAAE;EAC9C;EACA;EACA,MAAM,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAC;EACtD,MAAM,IAAI,UAAU,KAAK,SAAS,EAAE;EACpC,QAAQ,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC;EAC/C,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE;EACvC;EACA,UAAU,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAG;EAC7C,UAAU,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAC;EACrC;EACA,UAAU,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,EAAC;EAC3G,UAAU,UAAU,CAAC,CAAC,GAAG,EAAC;EAC1B,UAAU,QAAQ;EAClB,SAAS;EACT,OAAO;EACP;EACA,MAAM,MAAM;EACZ,KAAK;EACL,IAAI,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;EACzB,MAAM,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;EACrC,MAAM,IAAI,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE;EAC5D,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,OAAM;EACrC;EACA,QAAQ,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAC;EACxD,QAAQ,IAAI,UAAU,KAAK,SAAS,EAAE;EACtC;EACA,UAAU,MAAM;EAChB,SAAS;EACT,QAAQ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAC;EACnD,QAAQ,IAAI,UAAU,CAAC,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE;EACrD,UAAU,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAC;EAC1C,SAAS;EACT,QAAQ,KAAK;EACb,OAAO;EACP,MAAM,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAE;EACxB,KAAK;EACL,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;EACxB,MAAM,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;EAC/B,QAAQ,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,WAAW,EAAC;EACvE,OAAO;EACP,MAAM,KAAK,CAAC,GAAG,GAAE;EACjB,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,6BAA6B,GAAG,CAAC,WAAW,EAAE,KAAK,KAAK;EACrE,EAAE,MAAM,cAAc,GAAG,KAAK,CAAC,qBAAoB;EACnD,EAAE,KAAK,CAAC,oBAAoB,GAAG,GAAE;EACjC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAClD,IAAI,qBAAqB,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,EAAC;EAChE,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,2BAA2B,GAAG,CAAC,OAAO,EAAE,WAAW,KAAK,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,WAAW,EAAC;AACjJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,gCAAgC,GAAG,CAAC,KAAK,EAAE,kBAAkB,KAAK;EACxE,EAAE,MAAM,wBAAwB,GAAG,KAAK,CAAC,yBAAwB;EACjE,EAAE,KAAK,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,kBAAkB,EAAE;EACzD,IAAI,MAAM,iBAAiB,GAAG,wBAAwB,CAAC,GAAG,CAAC,MAAM,EAAC;EAClE,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;EACzC,MAAM,wBAAwB,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,EAAC;EACtE,KAAK,MAAM;EACX;EACA,MAAM,MAAM,MAAM,GAAG,iBAAiB,CAAC,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,KAAI;EACzH,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAClD,QAAQ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;EAClC,OAAO;EACP,MAAM,iBAAiB,CAAC,CAAC,GAAG,EAAC;EAC7B,MAAM,iBAAiB,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,EAAC;EACjF,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,KAAK,KAAK;EAC5D,EAAE,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,OAAO,EAAC;EAC1D,EAAE,gCAAgC,CAAC,KAAK,EAAE,iBAAiB,EAAC;EAC5D,EAAE,uBAAuB,CAAC,WAAW,EAAE,KAAK,EAAC;EAC7C,EAAE,6BAA6B,CAAC,WAAW,EAAE,KAAK,EAAC;EACnD,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,iBAAiB;EAC3D,EAAE,QAAQ,CAAC,IAAI,EAAE,WAAW,IAAI;EAChC,IAAI,WAAW,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,EAAC;EACjD,IAAI,qBAAqB,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,EAAC;EAC3D,GAAG,EAAE,iBAAiB,EAAE,KAAK,EAAC;AAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,iBAAiB;EAC3D,EAAE,UAAU,CAACE,aAAsB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAC;AACrE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,GAAG,IAAI,GAAG,EAAE,KAAK;EACnF,EAAE,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,EAAE,iBAAiB,EAAC;EAC5D,EAAE,cAAc,CAAC,OAAO,EAAE,8BAA8B,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;EACpE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,CAAC,GAAG,EAAE,wBAAwB,KAAK;EACtE,EAAE,MAAM,OAAO,GAAGD,aAAsB,GAAE;EAC1C,EAAE,MAAM,iBAAiB,GAAG,wBAAwB,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,iBAAiB,CAAC,wBAAwB,EAAC;EACtH,EAAE,kBAAkB,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;EACrD,EAAE,OAAOE,YAAqB,CAAC,OAAO,CAAC;EACvC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,OAAO,IAAI;EAC1C,EAAE,MAAM,EAAE,GAAG,IAAI,GAAG,GAAE;EACtB,EAAE,MAAM,QAAQ,GAAGH,WAAoB,CAAC,OAAO,EAAC;EAChD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;EACrC,IAAI,MAAM,MAAM,GAAGA,WAAoB,CAAC,OAAO,EAAC;EAChD,IAAI,MAAM,KAAK,GAAGA,WAAoB,CAAC,OAAO,EAAC;EAC/C,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAC;EACzB,GAAG;EACH,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,YAAY,IAAI,eAAe,CAACE,aAAsB,CAAC,YAAY,CAAC,EAAC;AACtG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,CAAC,OAAO,EAAE,EAAE,KAAK;EACjD,EAAEH,YAAqB,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAC;EACzC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;EAChC,IAAIA,YAAqB,CAAC,OAAO,EAAE,MAAM,EAAC;EAC1C,IAAIA,YAAqB,CAAC,OAAO,EAAE,KAAK,EAAC;EACzC,GAAG,EAAC;EACJ,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,wBAAwB,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;AAC9G;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,GAAG,IAAI;EACxC,EAAE,MAAM,OAAO,GAAGE,aAAsB,GAAE;EAC1C,EAAE,wBAAwB,CAAC,OAAO,EAAE,GAAG,EAAC;EACxC,EAAE,OAAOE,YAAqB,CAAC,OAAO,CAAC;EACvC,CAAC;;ECtaD;EACA;EACA;EACA;EACA;AACA,AAUA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,MAAM,CAAC,KAAI;AAC/B;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;EACnC,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;EACzB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAC;EACpB,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMU,KAAG,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;EAC/B,EAAE,MAAM,OAAO,GAAG,GAAE;EACpB,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;EACzB,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAC;EAClC,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMC,QAAM,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,OAAM;AAC7C,AAcA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;EACjC,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;EACzB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE;EAC3B,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAC;AACvF;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAKA,QAAM,CAAC,CAAC,CAAC,KAAKA,QAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,SAAS,IAAI,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;;EC7F/J;EACA;EACA;EACA;EACA;AACA,AAGA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK;EAC5C,EAAE,IAAI;EACN,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAC;EACpB,KAAK;EACL,GAAG,SAAS;EACZ,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE;EACvB,MAAM,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAC;EAC9B,KAAK;EACL,GAAG;EACH,CAAC;;ECvBD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,CAAC;EAC1B,EAAE,WAAW,CAAC,GAAG;EACjB;EACA;EACA;EACA,IAAI,IAAI,CAAC,CAAC,GAAG,GAAE;EACf,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,kBAAkB,GAAG,MAAM,IAAI,YAAY,GAAE;AAC1D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,CAAC,YAAY,EAAE,CAAC;EACvD,EAAE,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC;AACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,0BAA0B,GAAG,CAAC,YAAY,EAAE,CAAC,KAAK;EAC/D,EAAE,YAAY,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;EACtD,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,8BAA8B,GAAG,YAAY,IAAI;EAC9D,EAAE,YAAY,CAAC,CAAC,CAAC,MAAM,GAAG,EAAC;EAC3B,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,yBAAyB,GAAG,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI;EAClE,EAAEC,OAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;ECjFzC;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMX,QAAM,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,EAAC;AACvC;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,MAAM;EACzC,EAAE,MAAMA,QAAM,CAAC,sBAAsB,CAAC;EACtC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,MAAM;EACpC,EAAE,MAAMA,QAAM,CAAC,iBAAiB,CAAC;EACjC,CAAC;;ECtBM,MAAM,EAAE,CAAC;EAChB;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE;EAC9B;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;EACxB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,EAAC;AACzH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,KAAK,KAAK,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,EAAC;AAChE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,OAAO,EAAE,EAAE,KAAK;EACxC,EAAEL,YAAqB,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,EAAC;EAC3C,EAAEA,YAAqB,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAC;EAC1C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,OAAO;EAC7B,EAAE,QAAQ,CAACC,WAAoB,CAAC,OAAO,CAAC,EAAEA,WAAoB,CAAC,OAAO,CAAC,EAAC;AACxE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,IAAI,IAAI;EACvC;EACA,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;EAC7C,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;EACxB,MAAM,OAAO,GAAG;EAChB,KAAK;EACL,GAAG;EACH,EAAE,MAAMgB,cAAoB,EAAE;EAC9B,CAAC;;ECtFD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,CAAC,MAAM,EAAE,KAAK,KAAK;EAC7C,EAAE,OAAO,KAAK,KAAK,IAAI,EAAE;EACzB,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;EACjC,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,MAAK;EAC9B,GAAG;EACH,EAAE,OAAO,KAAK;EACd,CAAC;;ECPM,MAAM,iBAAiB,CAAC;EAC/B;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;EACrD;EACA;EACA;EACA,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAE;EACzB,IAAI,IAAI,CAAC,MAAM,GAAG,UAAS;EAC3B,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,GAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB;EACA;EACA;EACA;EACA,IAAI,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,eAAe,KAAK;EAChD;EACA;EACA;EACA,MAAM,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC;EAC/B,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC;EACjC,MAAM,MAAM,WAAW,mCAAmC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,EAAC;EACjH,MAAM,EAAE,CAAC,OAAO,wCAAwC,KAAK,IAAI;EACjE,QAAQ,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;EAC5C,UAAU,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,SAAS,IAAI;EACzD,YAAY,IAAI,SAAS,YAAY,UAAU,EAAE;EACjD,cAAc,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,eAAe,EAAE,EAAE,aAAa,CAACd,aAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC;EACpK,aAAa;EACb,WAAW,EAAC;EACZ,SAAS,EAAC;EACV,OAAO,EAAC;EACR,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,IAAI,aAAa,CAACA,aAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC;EAC3H,MAAM,GAAG,CAAC,OAAO,wCAAwC,KAAK;EAC9D,QAAQ,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC3F,QAAO;EACP,MAAM,GAAG,CAAC,OAAO,CAAC,WAAW,EAAC;EAC9B,MAAK;EACL;EACA,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/B,MAAM,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe;EAC/C,QAAQ,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC;EACjE,QAAO;EACP,KAAK,EAAC;EACN;EACA,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAC;EAC/B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,cAAc,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,eAAe,EAAE,EAAE,MAAM,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,EAAE;EAChF,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,OAAM;EAC7B,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,eAAe,EAAC;EACzC,IAAI,IAAI,CAAC,IAAI,EAAE;EACf,MAAM,IAAI,GAAG,IAAI,IAAI,GAAE;EACvB,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,MAAM,EAAE,EAAC;EACnC,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,MAAM,EAAE,EAAC;EAClC,MAAM,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,EAAC;EACtC,KAAK;EACL,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAC;EACpC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI;EAC3B,MAAM,UAAU,CAAC,MAAM;EACvB,QAAQ,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,eAAe,EAAC;EACxD,QAAQ,IAAI,aAAa,KAAK,IAAI,EAAE;EACpC;EACA;EACA,UAAU,IAAI,GAAG,cAAa;EAC9B;EACA,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,QAAQ,KAAK;EAC/D,YAAY,IAAI,eAAe,KAAK,gBAAgB,EAAE;EACtD,cAAc,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAC;EAC9C,aAAa;EACb,WAAW,EAAC;EACZ,UAAU,MAAM,OAAO,GAAGD,aAAsB,GAAE;EAClD,UAAU,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAC;EAClD,UAAU,IAAI,EAAE,EAAE;EAClB,YAAY,cAAc,CAAC,OAAO,EAAE,EAAE,EAAC;EACvC,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAACE,YAAqB,CAAC,OAAO,CAAC,CAAC,EAAC;EACjE,WAAW;EACX,SAAS;EACT,OAAO,EAAE,CAAC,EAAC;EACX,KAAK,EAAC;EACN,IAAI,GAAG,CAAC,EAAE,CAAC,kBAAkB,0CAA0C,WAAW,IAAI;EACtF,MAAM,UAAU,CAAC,MAAM;EACvB,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC;EAClC,QAAQ,MAAM,EAAE,GAAG,WAAW,CAAC,UAAS;EACxC,QAAQ,IAAI,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;EACjF,UAAU,MAAM,OAAO,GAAGF,aAAsB,GAAE;EAClD,UAAU,cAAc,CAAC,OAAO,EAAE,EAAE,EAAC;EACrC,UAAU,GAAG,CAAC,IAAI,CAAC,CAACE,YAAqB,CAAC,OAAO,CAAC,CAAC,EAAC;EACpD,SAAS;EACT,OAAO,EAAC;EACR,KAAK,EAAC;EACN,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,iBAAiB,CAAC,CAAC,QAAQ,EAAE;EAC/B,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI;EAC7C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,kBAAkB,CAAC,CAAC,EAAE,EAAE;EAC1B,IAAI,KAAK,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;EAClD,MAAM,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;EAC7B,QAAQ,OAAO,eAAe;EAC9B,OAAO;EACP,KAAK;EACL,IAAI,OAAO,IAAI;EACf,GAAG;EACH,CAAC;;EC3HD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,CAAC;EAC9B;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;EAClC;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,8BAA8B,GAAG,IAAI,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;AAC9O;AACA,EAAO,MAAM,gBAAgB,CAAC;EAC9B;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE;EAC5B;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAC;AACxF;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK;EACtD,EAAE,IAAI,MAAM,GAAG,KAAI;EACnB,EAAE,IAAI,KAAK,GAAG,KAAI;EAClB,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC3B,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,EAAC;EACjC,GAAG,MAAM;EACT,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAE;EAC1B,GAAG;EACH,EAAE,OAAO,IAAI,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;EAClD,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;EACpE,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACrB,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE;EACnC,MAAM,IAAI,CAAC,CAAC,MAAM,GAAG,KAAK,EAAE;EAC5B;EACA,QAAQ,OAAO,sBAAsB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;EACtF,OAAO;EACP,MAAM,KAAK,IAAI,CAAC,CAAC,OAAM;EACvB,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAK;EACf,GAAG;EACH,EAAE,OAAO,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,qBAAqB,GAAG,CAAC,OAAO,EAAE,IAAI,KAAK;EACxD,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,KAAI;EACpC,EAAE,IAAI,IAAI,KAAK,IAAI,EAAE;EACrB,IAAIJ,YAAqB,CAAC,OAAO,EAAE,CAAC,EAAC;EACrC,IAAI,OAAO,CAAC,OAAO,EAAE,IAAI,EAAC;EAC1B,GAAG,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;EAC7B;EACA,IAAIkB,UAAmB,CAAC,OAAO,EAAE,CAAC,EAAC;EACnC,IAAIC,cAAuB,CAAC,OAAO,EAAE,KAAK,EAAC;EAC3C,GAAG,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;EAC5B;EACA,IAAID,UAAmB,CAAC,OAAO,EAAE,CAAC,EAAC;EACnC,IAAI,OAAO,CAAC,OAAO,EAAE,IAAI,EAAC;EAC1B,GAAG,MAAM;EACT,IAAI,MAAMD,cAAoB,EAAE;EAChC,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,IAAI,IAAI;EAC9C,EAAE,MAAM,OAAO,GAAGf,aAAsB,GAAE;EAC1C,EAAE,qBAAqB,CAAC,OAAO,EAAE,IAAI,EAAC;EACtC,EAAE,OAAOE,YAAqB,CAAC,OAAO,CAAC;EACvC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,oBAAoB,GAAG,OAAO,IAAI;EAC/C,EAAE,IAAI,IAAI,GAAG,KAAI;EACjB,EAAE,IAAI,KAAK,GAAG,KAAI;EAClB,EAAE,IAAI,MAAM,GAAG,KAAI;EACnB,EAAE,QAAQH,WAAoB,CAAC,OAAO,CAAC;EACvC,IAAI,KAAK,CAAC;EACV;EACA,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,EAAC;EAC9B,MAAM,KAAK;EACX,IAAI,KAAK,CAAC;EACV;EACA,MAAM,KAAK,GAAGmB,aAAsB,CAAC,OAAO,EAAC;EAC7C,MAAM,KAAK;EACX,IAAI,KAAK,CAAC,EAAE;EACZ;EACA,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAC;EAC5B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;EAClD,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,UAAU,IAAI,oBAAoB,CAACjB,aAAsB,CAAC,UAAU,CAAC,EAAC;AAC5G;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,0CAA0C,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK;EACzE,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,MAAK;EACzB,EAAE,MAAM,OAAO,GAAG,IAAI,CAAC,KAAI;EAC3B,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAI;EAC1B,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,MAAK;EAC1B,EAAE,IAAI,IAAI,GAAG,KAAI;EACjB,EAAE,IAAI,KAAK,GAAG,EAAC;EACf,EAAE,IAAI,OAAO,KAAK,IAAI,EAAE;EACxB,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE;EAC1D,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,IAAI,MAAM,GAAG,GAAG,YAAY,CAAC,KAAK,EAAE,OAAO,EAAC;EAC5C,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,KAAI;EAC1B,IAAI,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC,EAAE;EAClC,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,IAAI,IAAI,GAAG,KAAK,CAAC,OAAM;EACvB,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EACpD,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,KAAI;EAC9D,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,KAAI;EACxB,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE;EACzB,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE;EACvC,UAAU,KAAK,IAAI,CAAC,CAAC,OAAM;EAC3B,SAAS;EACT,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAI;EAClB,OAAO;EACP,KAAK;EACL,GAAG,MAAM;EACT,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;EACxB,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,EAAC;EAC3B,KAAK,MAAM,IAAI,MAAM,KAAK,IAAI,EAAE;EAChC,MAAM,IAAI,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE;EAC1D;EACA,QAAQ,OAAO,IAAI;EACnB,OAAO;EACP,MAAM,MAAM,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,EAAC;EAClD,MAAM,IAAI,IAAI,YAAY,IAAI,IAAI,IAAI,CAAC,OAAO,YAAY,WAAW,EAAE;EACvE,QAAQ,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAI;EAChC,OAAO,MAAM;EACb;EACA,QAAQ,OAAO,IAAI;EACnB,OAAO;EACP,KAAK,MAAM;EACX,MAAM,MAAMc,cAAoB,EAAE;EAClC,KAAK;EACL,IAAI,KAAK,GAAG,IAAI,CAAC,QAAO;EACxB,GAAG;EACH,EAAE,OAAO,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,wBAAwB,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;EACzD,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;EAC7G,CAAC;;ECzPM,MAAM,QAAQ,CAAC;EACtB;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;EACvB;EACA;EACA;EACA,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,KAAK;EAChD,EAAE,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,QAAO;EAC9B,EAAE,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,QAAO;EAC9B,EAAE,MAAM,GAAG,GAAG,KAAK,CAAC,GAAE;EACtB,EAAE,MAAM,GAAG,GAAG,KAAK,CAAC,GAAE;EACtB,EAAE,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE;EACtD,IAAI,OAAO,KAAK;EAChB,GAAG;EACH,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,GAAG,EAAE;EAClC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;EAChC,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,GAAG;EACH,EAAE,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,GAAG,EAAE;EACxC,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAE;EAC1C,IAAI,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAE;EAC7C,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC9C,MAAM,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAC;EACjC,MAAM,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAC;EACjC,MAAM,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,EAAE;EAC1E,QAAQ,OAAO,KAAK;EACpB,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,QAAQ,IAAI;EAC1C,EAAE,MAAM,OAAO,GAAGf,aAAsB,GAAE;EAC1C,EAAE,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAC;EACtC,EAAE,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAC;EACxC,EAAE,OAAOE,YAAqB,CAAC,OAAO,CAAC;EACvC,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,GAAG,IAAI;EACrC,EAAE,MAAM,OAAO,GAAGD,aAAsB,CAAC,GAAG,EAAC;EAC7C,EAAE,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC;EACvE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAC;AAC9D;AACA,EAAO,MAAM,aAAa,GAAG,cAAc,CAAC,eAAe,EAAE,EAAE,IAAI,GAAG,EAAE,EAAC;AACzE;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,GAAG,IAAI,cAAc,CAAC,8BAA8B,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;AACnH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,QAAQ,KAAK,QAAQ,KAAK,SAAS,GAAG,CAAC,IAAI,CAAC,OAAO;EACnF,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;EAC/H,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,4BAA4B,GAAG,CAAC,WAAW,EAAE,QAAQ,KAAK;EACvE,EAAE,MAAM,IAAI,GAAGJ,cAAkB,CAAC,WAAW,CAAC,IAAI,EAAE,4BAA4B,EAAEO,QAAU,EAAC;EAC7F,EAAE,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,MAAK;EACrC;EACA,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;EAC3B,IAAI,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;EAC3C,MAAM,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;EAC3C,QAAQ,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC;EAC/D,OAAO;EACP,KAAK,EAAC;EACN,IAAI,qBAAqB,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,EAAC;EAC/D,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAC;EACtB,GAAG;EACH,CAAC;;EC9HM,MAAM,WAAW,CAAC;EACzB,EAAE,WAAW,CAAC,GAAG;EACjB;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,GAAE;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,wBAAwB,GAAG,IAAI,GAAG,GAAE;EAC7C;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,YAAY,GAAG,GAAE;EAC1B;EACA;EACA;EACA,IAAI,IAAI,CAAC,oBAAoB,GAAG,GAAE;EAClC,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,KAAK,IAAI;EACvC,EAAE,MAAM,EAAE,GAAG,IAAI,GAAG,GAAE;EACtB,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;EAC7C,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;EAC9C,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAC;EACnD,GAAG,EAAC;EACJ,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,MAAM,KAAK;EAC3C,EAAE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC;EAC3C,EAAE,IAAI,OAAO,KAAK,SAAS,EAAE;EAC7B,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,EAAE,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;EAChD,EAAE,OAAO,UAAU,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM;EAChD,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,KAAK,IAAI;EACvC,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI;EACnC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,MAAM,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,EAAC;EAC9B,MAAM,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,EAAC;EAC1B,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE;EAChD,QAAQ,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;EAC7D,OAAO;EACP,KAAK;EACL,GAAG,EAAC;EACJ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,CAAC,KAAK,EAAE,MAAM,KAAK;EAC5C,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAC;EACnD,EAAE,IAAI,OAAO,KAAK,SAAS,EAAE;EAC7B,IAAI,OAAO,GAAG,GAAE;EAChB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,EAAC;EAChD,GAAG,MAAM;EACT,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;EAClD,IAAI,IAAI,UAAU,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,KAAK,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;EACrE,MAAM,MAAMW,cAAoB,EAAE;EAClC,KAAK;EACL,GAAG;EACH,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,EAAC;EACtB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK;EAC/C,EAAE,IAAI,IAAI,GAAG,EAAC;EACd,EAAE,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,EAAC;EAChC,EAAE,OAAO,IAAI,IAAI,KAAK,EAAE;EACxB,IAAI,MAAM,QAAQ,GAAG/B,KAAU,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,EAAC;EACnD,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAC;EACjC,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC,EAAE,CAAC,MAAK;EACjC,IAAI,IAAI,QAAQ,IAAI,KAAK,EAAE;EAC3B,MAAM,IAAI,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE;EACzC,QAAQ,OAAO,QAAQ;EACvB,OAAO;EACP,MAAM,IAAI,GAAG,QAAQ,GAAG,EAAC;EACzB,KAAK,MAAM;EACX,MAAM,KAAK,GAAG,QAAQ,GAAG,EAAC;EAC1B,KAAK;EACL,GAAG;EACH;EACA;EACA,EAAE,MAAM+B,cAAoB,EAAE;EAC9B,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE,KAAK;EACnC;EACA;EACA;EACA;EACA,EAAE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAC;EAC9C,EAAE,OAAO,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;EAChD,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,EAAE,EAAC;AACrD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,KAAK;EACpE,EAAE,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,EAAC;EAC3C,EAAE,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAC;EAC/B,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,IAAI,MAAM,YAAY,IAAI,EAAE;EACzD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC;EACzF,IAAI,OAAO,KAAK,GAAG,CAAC;EACpB,GAAG;EACH,EAAE,OAAO,KAAK;EACd,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,CAAC,WAAW,EAAE,EAAE,KAAK;EACtD,EAAE,MAAM,OAAO,+BAA+B,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAC;EAC3F,EAAE,OAAO,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;EACrE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,KAAK;EAC3D;EACA;EACA;EACA;EACA,EAAE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAC;EAC9C,EAAE,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAC;EAC9C,EAAE,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAC;EAC/B,EAAE,IAAI,EAAE,CAAC,KAAK,KAAK,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,WAAW,KAAK,EAAE,EAAE;EACrF,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC;EAChG,GAAG;EACH,EAAE,OAAO,MAAM;EACf,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,KAAK;EAC3D,EAAE,MAAM,OAAO,kCAAkC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAC;EACrF,EAAE,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,UAAS;EAC5D,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,KAAK;EAC5E,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE;EACjB,IAAI,MAAM;EACV,GAAG;EACH,EAAE,MAAM,QAAQ,GAAG,UAAU,GAAG,IAAG;EACnC,EAAE,IAAI,KAAK,GAAG,mBAAmB,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU,EAAC;EACnE,EAAE,IAAI,OAAM;EACZ,EAAE,GAAG;EACL,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,EAAC;EAC7B,IAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE;EACpD,MAAM,mBAAmB,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAC;EACzD,KAAK;EACL,IAAI,CAAC,CAAC,MAAM,EAAC;EACb,GAAG,QAAQ,KAAK,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,QAAQ,CAAC;EACxE,CAAC;;ECzPD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,CAAC;EACzB;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;EACnC;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,GAAE;EACpC;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,EAAC;EAChD;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,GAAE;EAC/B;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,GAAE;EAC5B;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,GAAE;EACvC;EACA;EACA;EACA,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,GAAE;EAClC;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;EACxB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAE;EACzB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,WAAW,IAAI;EAClE,EAAE,IAAI,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,CAACI,GAAO,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;EACtJ,IAAI,OAAO,IAAI;EACf,GAAG;EACH,EAAE,MAAM,OAAO,GAAGnB,aAAsB,GAAE;EAC1C,EAAE,qBAAqB,CAAC,WAAW,CAAC,SAAS,EAAC;EAC9C,EAAE,2BAA2B,CAAC,OAAO,EAAE,WAAW,EAAC;EACnD,EAAE,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,SAAS,EAAC;EAChD,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,WAAW,IAAI;EACrC,EAAE,MAAM,CAAC,GAAG,WAAW,CAAC,IAAG;EAC3B,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC5D,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,2BAA2B,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,KAAK;EAC7E,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,MAAK;EACzB,EAAE,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;EAC9G,IAAIH,cAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAEO,QAAU,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC;EAC5E,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EAC7C,EAAE,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,EAAC;EAC/B,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,EAAC;EAC5B,EAAE,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,EAAE;EAChF,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;EAC/B,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC;EAC5B,MAAM,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,CAAC,SAAS,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE;EACjH,QAAQ,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,uBAAuB,IAAI,GAAE;EAC1E,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,cAAc,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,KAAK;EAChD,EAAE,KAAK,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE;EAClD,IAAI,MAAM,OAAO,yCAAyC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EACpF,IAAI,KAAK,IAAI,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;EACzD,MAAM,MAAM,UAAU,GAAG,WAAW,CAAC,EAAE,EAAC;EACxC,MAAM,MAAM,kBAAkB,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,IAAG;EAClE,MAAM;EACN,QAAQ,IAAI,EAAE,GAAG,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC;EAC7E,QAAQ,EAAE,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,kBAAkB;EACnE,QAAQ,MAAM,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC;EAC9B,QAAQ;EACR,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,EAAE,EAAC;EAClC,QAAQ,IAAI,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;EAClE,UAAU,KAAK;EACf,SAAS;EACT,QAAQ,IAAI,MAAM,YAAY,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;EAC1F,UAAU,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAC;EACjC,SAAS;EACT,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA,MAAM,iBAAiB,GAAG,CAAC,EAAE,EAAE,KAAK,KAAK;EACzC;EACA;EACA,EAAE,KAAK,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE;EAClD,IAAI,MAAM,OAAO,yCAAyC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EACpF,IAAI,KAAK,IAAI,EAAE,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;EACzD,MAAM,MAAM,UAAU,GAAG,WAAW,CAAC,EAAE,EAAC;EACxC;EACA,MAAM,MAAM,qBAAqB,GAAGZ,GAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,EAAC;EACjI,MAAM;EACN,QAAQ,IAAI,EAAE,GAAG,qBAAqB,EAAE,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC;EAC5D,QAAQ,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK;EACrD,QAAQ,MAAM,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC;EAC9B,QAAQ;EACR,QAAQ,kBAAkB,CAAC,OAAO,EAAE,EAAE,EAAC;EACvC,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,KAAK;EAC9C,EAAE,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAC;EACrC,EAAE,iBAAiB,CAAC,EAAE,EAAE,KAAK,EAAC;EAC9B,EAAC;AACD;EACA;EACA;EACA;EACA;EACA,MAAM,mBAAmB,GAAG,CAAC,mBAAmB,EAAE,CAAC,KAAK;EACxD,EAAE,IAAI,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE;EACtC,IAAI,MAAM,WAAW,GAAG,mBAAmB,CAAC,CAAC,EAAC;EAC9C,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,IAAG;EAC/B,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,MAAK;EAC3B,IAAI,MAAM,EAAE,GAAG,WAAW,CAAC,UAAS;EACpC,IAAI,IAAI;EACR,MAAM,qBAAqB,CAAC,EAAE,EAAC;EAC/B,MAAM,WAAW,CAAC,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAC;EACpE,MAAM,GAAG,CAAC,YAAY,GAAG,KAAI;EAC7B,MAAM,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,EAAC;EACzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,MAAM,EAAE,GAAG,GAAE;EACnB;EACA,MAAM,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,QAAQ;EACjD,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM;EACtB,UAAU,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE;EAClE,YAAY,QAAQ,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,EAAC;EACrD,WAAW;EACX,SAAS,CAAC;EACV,QAAO;EACP,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM;EACpB;EACA,QAAQ,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,IAAI;EAC5D,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM;EACxB;EACA;EACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EAC5D,cAAc,MAAM,GAAG,MAAM;EAC7B,iBAAiB,MAAM,CAAC,KAAK;EAC7B,kBAAkB,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO;EAC5E,kBAAiB;EACjB,cAAc,MAAM;EACpB,iBAAiB,OAAO,CAAC,KAAK,IAAI;EAClC,kBAAkB,KAAK,CAAC,aAAa,GAAG,KAAI;EAC5C,iBAAiB,EAAC;EAClB;EACA;EACA,cAAc,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC;EACvE,aAAa;EACb,WAAW,CAAC;EACZ,UAAS;EACT,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,EAAC;EACvE,OAAO,EAAC;EACR,MAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAC;EACrB,KAAK,SAAS;EACd;EACA;EACA,MAAM,IAAI,GAAG,CAAC,EAAE,EAAE;EAClB,QAAQ,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAC;EAC/C,OAAO;EACP,MAAM,iBAAiB,CAAC,EAAE,EAAE,KAAK,EAAC;AAClC;EACA;EACA,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,WAAW,CAAC,UAAU,EAAE;EAC5D,QAAQ,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC;EACpE,QAAQ,IAAI,WAAW,KAAK,KAAK,EAAE;EACnC,UAAU,MAAM,OAAO,yCAAyC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EAC1F;EACA,UAAU,MAAM,cAAc,GAAGN,GAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,EAAE,CAAC,EAAC;EAC/E,UAAU,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAE,EAAE;EACrE,YAAY,kBAAkB,CAAC,OAAO,EAAE,CAAC,EAAC;EAC1C,WAAW;EACX,SAAS;EACT,OAAO;EACP;EACA;EACA;EACA,MAAM,KAAK,MAAM,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;EACnD,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,OAAM;EACjC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,MAAK;EAC/B,QAAQ,MAAM,OAAO,yCAAyC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EACxF,QAAQ,MAAM,iBAAiB,GAAG,WAAW,CAAC,OAAO,EAAE,KAAK,EAAC;EAC7D,QAAQ,IAAI,iBAAiB,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;EACpD,UAAU,kBAAkB,CAAC,OAAO,EAAE,iBAAiB,GAAG,CAAC,EAAC;EAC5D,SAAS;EACT,QAAQ,IAAI,iBAAiB,GAAG,CAAC,EAAE;EACnC,UAAU,kBAAkB,CAAC,OAAO,EAAE,iBAAiB,EAAC;EACxD,SAAS;EACT,OAAO;EACP;EACA,MAAM,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,EAAC;EAC7D,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;EACxC,QAAQ,MAAM,aAAa,GAAG,mCAAmC,CAAC,WAAW,EAAC;EAC9E,QAAQ,IAAI,aAAa,KAAK,IAAI,EAAE;EACpC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAACgB,YAAqB,CAAC,aAAa,CAAC,EAAE,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,EAAC;EAC7F,SAAS;EACT,OAAO;EACP,MAAM,IAAI,mBAAmB,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;EAC/C,QAAQ,GAAG,CAAC,oBAAoB,GAAG,GAAE;EACrC,OAAO,MAAM;EACb,QAAQ,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,EAAC;EACvD,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,KAAK;EACjE,EAAE,MAAM,mBAAmB,GAAG,GAAG,CAAC,qBAAoB;EACtD,EAAE,IAAI,WAAW,GAAG,MAAK;EACzB,EAAE,IAAI,GAAG,CAAC,YAAY,KAAK,IAAI,EAAE;EACjC,IAAI,WAAW,GAAG,KAAI;EACtB,IAAI,GAAG,CAAC,YAAY,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAC;EAC1D,IAAI,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAC;EAC9C,IAAI,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,EAAC;EAC1D,GAAG;EACH,EAAE,IAAI;EACN,IAAI,CAAC,CAAC,GAAG,CAAC,YAAY,EAAC;EACvB,GAAG,SAAS;EACZ,IAAI,IAAI,WAAW,IAAI,mBAAmB,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE;EACpE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,EAAC;EACjD,KAAK;EACL,GAAG;EACH,CAAC;;EC7WD;EACA;EACA;EACA;EACA;AACA,AAuBA;EACA,MAAM,QAAQ,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;EAC7D,MAAM,UAAU,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;AAC/D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,cAAc,GAAG,CAAC,KAAK;EACjD,EAAE,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGkB,KAAU,CAAC,CAAC,EAAC;EAC1C,EAAE,IAAI,IAAI,GAAG,EAAC;EACd,EAAE,OAAO,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,cAAc,GAAG,CAAC,CAAC,EAAE;EACjD,IAAI,cAAc,GAAE;EACpB,IAAI,IAAI,GAAE;EACV,GAAG;EACH,EAAE,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,cAAc,GAAG,CAAC,EAAE;EACrD,IAAI,cAAc,GAAE;EACpB,IAAI,IAAI,GAAE;EACV,GAAG;EACH,EAAE,MAAM,MAAM,GAAG,cAAc,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC,cAAc,EAAC;EAC5F,EAAE,OAAO;EACT,IAAI,CAAC,EAAEC,KAAU,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAGC,KAAU,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGA,KAAU,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI;EAClG,IAAI,MAAM;EACV,GAAG;EACH,CAAC;;ECvDD;EACA;EACA;EACA;EACA;AACA,AAUA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,IAAI,CAAC,IAAG;AACnC;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,CAAC,IAAI;EACrC,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE;EACjB,IAAI,MAAM,CAAC,GAAGC,MAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;EAClC,IAAI,OAAOF,KAAU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG;EACvD,GAAG;EACH,EAAE,CAAC,GAAGrC,KAAU,CAAC,CAAC,GAAG,IAAI,EAAC;EAC1B,EAAE,MAAM,OAAO,GAAG,CAAC,GAAG,GAAE;EACxB,EAAE,MAAM,OAAO,GAAGA,KAAU,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAE;EACzC,EAAE,MAAM,KAAK,GAAGA,KAAU,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAE;EACzC,EAAE,MAAM,IAAI,GAAGA,KAAU,CAAC,CAAC,GAAG,KAAK,EAAC;EACpC,EAAE,IAAI,IAAI,GAAG,CAAC,EAAE;EAChB,IAAI,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,IAAI,GAAG,IAAI,OAAO,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EAC3G,GAAG;EACH,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;EACjB;EACA,IAAI,OAAO,KAAK,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,IAAI,GAAG,IAAI,OAAO,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;EACpH,GAAG;EACH,EAAE,OAAO,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;EACnE,CAAC;;EC7BD,MAAM,SAAS,CAAC;EAChB;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;EAC/B,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAE;EACzB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,YAAY,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,KAAK;EACxD;EACA;EACA;EACA;EACA,EAAE,IAAI,MAAM,GAAG,KAAI;EACnB,EAAE,MAAM,GAAG,GAAG,WAAW,CAAC,IAAG;EAC7B,EAAE,MAAM,KAAK,GAAG,WAAW,CAAC,MAAK;EACjC,EAAE,QAAQ,CAAC,GAAG,EAAE,WAAW,IAAI;EAC/B,IAAI,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;EAChD,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC,MAAK;EAC7B,MAAM,MAAM,QAAQ,GAAG,GAAG,CAAC,SAAQ;EACnC,MAAM,MAAM,SAAS,6BAA6B,KAAK,CAAC,GAAG,EAAE,EAAC;EAC9D,MAAM,MAAM,eAAe,GAAG,SAAS,CAAC,MAAK;EAC7C,MAAM,MAAM,aAAa,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,IAAG;EAC3D,MAAM,MAAM,WAAW,GAAG,IAAI,GAAG,GAAE;EACnC;EACA,MAAM,MAAM,OAAO,kCAAkC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAC;EACjF,MAAM,IAAI,eAAe,GAAG,MAAK;EACjC,MAAM,IAAI,eAAe,KAAK,aAAa,EAAE;EAC7C;EACA,QAAQ,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,eAAe,CAAC,EAAC;EAC3E,QAAQ,IAAI,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;EAC3D,UAAU,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,aAAa,CAAC,EAAC;EAC3E,SAAS;EACT,OAAO;EACP,MAAM,qBAAqB,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,EAAE,MAAM,IAAI;EACjE,QAAQ;EACR,UAAU,MAAM,YAAY,IAAI;EAChC,UAAU,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACtD;EACA,UAAU,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,IAAI,eAAe,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,aAAa,CAAC;EACnH,UAAU;EACV,UAAU,WAAW,CAAC,GAAG,CAAC,MAAM,EAAC;EACjC,SAAS;EACT,OAAO,EAAC;EACR,MAAM,WAAW,CAAC,OAAO,CAAC,MAAM,IAAI;EACpC,QAAQ,eAAe,GAAG,QAAQ,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,KAAK,IAAI,IAAI,gBAAe;EAChG,OAAO,EAAC;EACR;EACA;EACA;EACA,MAAM,MAAM,aAAa,GAAG,GAAE;EAC9B,MAAM,cAAc,CAAC,WAAW,EAAE,OAAO,EAAE,eAAe,EAAE,SAAS,CAAC,GAAG,EAAE,MAAM,IAAI;EACrF,QAAQ,IAAI,MAAM,YAAY,IAAI,EAAE;EACpC,UAAU,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;EACtC,YAAY,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC;EAC/D,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;EAC1B,cAAc,IAAI,GAAG,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,EAAC;EACnG,aAAa;EACb,YAAY,IAAI,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE;EAC7C,cAAc,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC,EAAC;EACrF,aAAa;EACb,YAAY,MAAM,GAAG,KAAI;EACzB,WAAW;EACX,UAAU,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,uBAAuB,MAAM,EAAE,CAAC,EAAE;EACrG,YAAY,aAAa,CAAC,IAAI,CAAC,MAAM,EAAC;EACtC,WAAW;EACX,SAAS;EACT,OAAO,EAAC;EACR;EACA;EACA,MAAM,KAAK,IAAI,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EAC1D,QAAQ,MAAM,IAAI,GAAG,aAAa,CAAC,CAAC,EAAC;EACrC,QAAQ,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;EAC5C,UAAU,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EAClC,UAAU,eAAe,GAAG,KAAI;EAChC,SAAS;EACT,OAAO;EACP,MAAM,MAAM,GAAG,UAAS;EACxB,MAAM,IAAI,MAAM,IAAI,IAAI,EAAE;EAC1B,QAAQ,WAAW,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,WAAW,CAAC,EAAC;EACpG,OAAO;EACP,KAAK;EACL,GAAG,EAAE,WAAW,EAAC;EACjB,EAAE,OAAO,MAAM;EACf,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,SAAS,UAAU,CAAC;EAC5C;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,EAAE,cAAc,EAAE,YAAY,GAAG,MAAM,IAAI,EAAE,cAAc,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE;EAChH,IAAI,IAAI,cAAc,IAAI,IAAI,EAAE;EAChC,MAAM,cAAc,GAAG,IAAG;EAC1B,KAAK;EACL,IAAI,KAAK,GAAE;EACX,IAAI,IAAI,CAAC,KAAK,GAAG,SAAS,YAAY,KAAK,GAAG,SAAS,GAAG,CAAC,SAAS,EAAC;EACrE,IAAI,IAAI,CAAC,YAAY,GAAG,aAAY;EACpC,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,EAAC;EAC5B,IAAI,IAAI,CAAC,cAAc,GAAG,eAAc;EACxC;EACA;EACA;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,GAAE;EACvB;EACA;EACA;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,GAAE;EACvB;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,MAAK;EACxB,IAAI,IAAI,CAAC,OAAO,GAAG,MAAK;EACxB,IAAI,IAAI,CAAC,GAAG,uBAAuB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;EACrD,IAAI,IAAI,CAAC,UAAU,GAAG,EAAC;EACvB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,0CAA0C,WAAW,IAAI;EAC3F;EACA,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;EACrN,QAAQ,MAAM;EACd,OAAO;EACP,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,QAAO;EAClC,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,QAAO;EAClC,MAAM,MAAM,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAS;EAC7D,MAAM,IAAI,OAAO,EAAE;EACnB,QAAQ,IAAI,CAAC,aAAa,GAAE;EAC5B,OAAO,MAAM,IAAI,CAAC,OAAO,EAAE;EAC3B;EACA,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAE;EAC3B,OAAO;EACP,MAAM,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;EAC7E,MAAM,MAAM,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAC;EAC3E,MAAM,MAAM,GAAG,GAAGwC,WAAgB,GAAE;EACpC,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE;EAC9F;EACA,QAAQ,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EAC9C,QAAQ,MAAM,CAAC,EAAE,GAAG,eAAe,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,SAAS,CAAC,EAAC;EACvE,QAAQ,MAAM,CAAC,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC,MAAK;EAC9C,OAAO,MAAM;EACb;EACA,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,GAAG,WAAW,CAAC,EAAC;EAC/F,OAAO;EACP,MAAM,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE;EAChC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAG;EAC7B,OAAO;EACP;EACA,MAAM,qBAAqB,CAAC,WAAW,EAAE,WAAW,CAAC,SAAS,+BAA+B,IAAI,IAAI;EACrG,QAAQ,IAAI,IAAI,YAAY,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;EACrF,UAAU,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAC;EAC9B,SAAS;EACT,OAAO,EAAC;EACR,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,GAAG,MAAM,GAAG,MAAM,EAAE,EAAE,IAAI,CAAC,EAAC;EAChJ,KAAK,EAAC;EACN,GAAG;AACH;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI;EACrC;EACA;EACA;EACA,MAAM,MAAM,SAAS,GAAG,SAAS,IAAI;EACrC,QAAQ,qBAAqB,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,IAAI;EACjE,UAAU,IAAI,IAAI,YAAY,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;EACvF,YAAY,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAC;EACjC,WAAW;EACX,SAAS,EAAC;EACV,QAAO;EACP,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAC;EACvC,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAC;EACvC,KAAK,EAAC;EACN,IAAI,IAAI,CAAC,SAAS,GAAG,GAAE;EACvB,IAAI,IAAI,CAAC,SAAS,GAAG,GAAE;EACvB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,GAAG;EACnB,IAAI,IAAI,CAAC,UAAU,GAAG,EAAC;EACvB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,IAAI,CAAC,OAAO,GAAG,KAAI;EACvB,IAAI,IAAI,IAAG;EACX,IAAI,IAAI;EACR,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,EAAC;EACtD,KAAK,SAAS;EACd,MAAM,IAAI,CAAC,OAAO,GAAG,MAAK;EAC1B,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,IAAI,CAAC,OAAO,GAAG,KAAI;EACvB,IAAI,IAAI,IAAG;EACX,IAAI,IAAI;EACR,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,EAAC;EACtD,KAAK,SAAS;EACd,MAAM,IAAI,CAAC,OAAO,GAAG,MAAK;EAC1B,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;EACH,CAAC;;ECjRD;EACA;EACA;AACA,EAAO,MAAM,MAAM,CAAC;EACpB;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE;EACpC;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;EACxB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,aAAa,GAAG,OAAM;EAC/B;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,WAAW,GAAG,YAAW;EAClC;EACA;EACA;EACA,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAI;EACxB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,IAAI,CAAC,GAAG;EACd;EACA,IAAI,OAAO,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC;EACrD,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE;EACnB,IAAI,OAAO,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC;EAC3D,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE;EAChB,IAAI,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EACvF,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,OAAO,CAAC,GAAG;EACjB,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,SAAQ;EAC/B,IAAI,IAAI,OAAO,KAAK,IAAI,EAAE;EAC1B,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,OAAM;EAChC,MAAM,MAAM,KAAK,GAAGpB,QAAU,GAAE;EAChC,MAAM,MAAM,OAAO,GAAGA,QAAU,GAAE;EAClC;EACA;EACA;EACA,MAAM,MAAM,KAAK,GAAG,GAAE;EACtB;EACA;EACA;EACA,MAAM,MAAM,IAAI,GAAG,IAAI,GAAG,GAAE;EAC5B,MAAM,OAAO,GAAG;EAChB,QAAQ,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI;EACnC,QAAO;EACP,MAAM,MAAM,OAAO,kCAAkC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EAC1F,MAAM,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;EAC7B;EACA;EACA;EACA,QAAQ,IAAI,MAAM,GAAG,KAAI;EACzB,QAAQ,MAAM,MAAM,GAAG,MAAM;EAC7B,UAAU,IAAI,MAAM,EAAE;EACtB,YAAY,KAAK,CAAC,IAAI,CAAC,MAAM,EAAC;EAC9B,WAAW;EACX,UAAS;EACT,QAAQ,KAAK,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;EACzE,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;EAC5B,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACxD,cAAc,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;EAClE,gBAAgB,MAAM,GAAE;EACxB,gBAAgB,MAAM,GAAG,EAAE,MAAM,EAAE,CAAC,GAAE;EACtC,eAAe;EACf,cAAc,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,OAAM;EAC1C,cAAc,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC;EAC/B,aAAa;EACb,WAAW,MAAM;EACjB,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACjC,cAAc,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;EAClE,gBAAgB,MAAM,GAAE;EACxB,gBAAgB,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,GAAE;EACvC,eAAe;EACf,cAAc,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAC;EAC7E,cAAc,KAAK,CAAC,GAAG,CAAC,IAAI,EAAC;EAC7B,aAAa,MAAM;EACnB,cAAc,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;EAClE,gBAAgB,MAAM,GAAE;EACxB,gBAAgB,MAAM,GAAG,EAAE,MAAM,EAAE,CAAC,GAAE;EACtC,eAAe;EACf,cAAc,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,OAAM;EAC1C,aAAa;EACb,WAAW;EACX,SAAS;EACT,QAAQ,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;EAC5D,UAAU,MAAM,GAAE;EAClB,SAAS;EACT,OAAO;EACP,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI;EAC7B,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;EAC1B,UAAU,MAAM,IAAI,wBAAwB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC;EACjE;EACA;EACA;EACA,UAAU,IAAI,OAAM;EACpB,UAAU,IAAI,SAAQ;EACtB,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EAC/B,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAI;EAChC,YAAY,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACrD,cAAc,IAAI,GAAG,IAAI,CAAC,KAAI;EAC9B,aAAa;EACb,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACpC,cAAc,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACvD,gBAAgB,MAAM,GAAG,SAAQ;EACjC,gBAAgB,QAAQ,GAAGqB,IAAU,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAC;EAChE,eAAe,MAAM;EACrB,gBAAgB,MAAM;EACtB,eAAe;EACf,aAAa,MAAM;EACnB,cAAc,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACvD,gBAAgB,MAAM,GAAG,SAAQ;EACjC,gBAAgB,QAAQ,GAAGA,IAAU,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAC;EAChE,eAAe,MAAM;EACrB,gBAAgB,MAAM,GAAG,MAAK;EAC9B,gBAAgB,QAAQ,GAAG,UAAS;EACpC,eAAe;EACf,aAAa;EACb,WAAW,MAAM;EACjB,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACpC,cAAc,MAAM,GAAG,SAAQ;EAC/B,cAAc,QAAQ,GAAGA,IAAU,qBAAqB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAC;EAClF,aAAa,MAAM;EACnB,cAAc,MAAM;EACpB,aAAa;EACb,WAAW;EACX,UAAU,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAC;EAC7C,SAAS;EACT,OAAO,EAAC;EACR,MAAM,IAAI,CAAC,QAAQ,GAAG,QAAO;EAC7B,KAAK;EACL,IAAI,2BAA2B,OAAO,CAAC;EACvC,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,SAAS,GAAG,CAAC,MAAM,EAAE,KAAK,KAAK;EACrC,EAAE,MAAM,IAAI,GAAG,GAAE;EACjB,EAAE,OAAO,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,EAAE;EACnD,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,SAAS,KAAK,IAAI,EAAE;EACxC;EACA,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAC;EACzC,KAAK,MAAM;EACX;EACA,MAAM,IAAI,CAAC,GAAG,EAAC;EACf,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAM;EACvC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE;EAC9C,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;EACxB,UAAU,CAAC,GAAE;EACb,SAAS;EACT,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAK;EACnB,OAAO;EACP,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC;EACrB,KAAK;EACL,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAM;EAC9B,GAAG;EACH,EAAE,OAAO,IAAI;EACb,CAAC;;ECjOD;EACA;EACA;EACA;EACA;AACA,AAoBA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,IAAI,KAAK;EACvC;EACA;EACA;EACA,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;EACvB,IAAI,OAAO,IAAI;EACf,GAAG;EACH;EACA,EAAE,IAAI;EACN,CAAC,EAAC;AACF;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,QAAQ,EAAE,MAAM,KAAK,cAAc,CAAC,MAAM;EACzE,EAAE,IAAI,IAAG;EACT,EAAE,GAAG;EACL,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,GAAE;EACzB,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAC3C,EAAE,OAAO,GAAG;EACZ,CAAC,EAAC;AACF;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK,cAAc,CAAC,MAAM;EACpE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC,IAAI,GAAE;EACzC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;EACxD,CAAC,CAAC;;EC1CF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,KAAK;EAC/D,EAAE,MAAM,WAAW,GAAG,KAAI;EAC1B,EAAE,MAAM,kBAAkB,GAAG,WAAW,CAAC,mBAAkB;EAC3D,EAAE,OAAO,IAAI,EAAE;EACf;EACA,IAAI5B,cAAkB,CAAC,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAC;EACtE,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC7B,MAAM,KAAK;EACX,KAAK;EACL,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAM;EAC5B,GAAG;EACH,EAAE,yBAAyB,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAC;EAChE,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,CAAC;EAC1B,EAAE,WAAW,CAAC,GAAG;EACjB;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAE;EACzB;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,KAAI;EACnB,IAAI,IAAI,CAAC,OAAO,GAAG,EAAC;EACpB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,kBAAkB,GAAE;EACnC;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,kBAAkB,GAAE;EACpC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;EACvB,IAAI,IAAI,CAAC,GAAG,GAAG,EAAC;EAChB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,MAAM6B,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG;AACtB;EACA;EACA;EACA;EACA,EAAE,IAAI,MAAM,CAAC,GAAG;EAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACvB,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE;EACpC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAK;EACjB,KAAK;EACL,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE,sCAAsC;AAChF;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;EACd,IAAI,uBAAuB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAC;EACxC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE;EAClB,IAAI,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAC;EACzC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE;EAChB,IAAI,0BAA0B,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAC;EAC3C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE;EACpB,IAAI,0BAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAC;EAC5C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG,EAAE;EACd,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,IAAI,IAAI;EACvC,EAAE,MAAM,EAAE,GAAG,GAAE;EACf,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACrB,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;EACnC,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAE;EACtC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;EACrB,OAAO;EACP,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAK;EACf,GAAG;EACH,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,CAAC,IAAI,EAAE,QAAQ,KAAK;EAC3D,EAAE,MAAM,EAAE,GAAG,GAAE;EACf,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACrB,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE;EAC/C,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAE;EACtC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;EACrB,OAAO;EACP,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAK;EACf,GAAG;EACH,EAAE,OAAO,EAAE;EACX,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;EAC5C,EAAE,IAAI,KAAK,GAAG,EAAC;EACf,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACrB,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;EACnC,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAE;EACtC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAC;EAC9B,OAAO;EACP,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAK;EACf,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;EACxC;EACA;EACA;EACA,EAAE,MAAM,MAAM,GAAG,GAAE;EACnB,EAAE,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK;EAClC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAC;EAC9B,GAAG,EAAC;EACJ,EAAE,OAAO,MAAM;EACf,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,IAAI,IAAI;EAC9C,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACrB;EACA;EACA;EACA,EAAE,IAAI,cAAc,GAAG,KAAI;EAC3B,EAAE,IAAI,mBAAmB,GAAG,EAAC;EAC7B,EAAE,OAAO;EACT,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;EACzB,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,IAAI,IAAI,EAAE,MAAM;EAChB;EACA,MAAM,IAAI,cAAc,KAAK,IAAI,EAAE;EACnC,QAAQ,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE;EACxC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAK;EACrB,SAAS;EACT;EACA,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE;EACxB,UAAU,OAAO;EACjB,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,KAAK,EAAE,SAAS;EAC5B,WAAW;EACX,SAAS;EACT;EACA,QAAQ,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAE;EAC/C,QAAQ,mBAAmB,GAAG,EAAC;EAC/B,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAK;EACnB,OAAO;EACP,MAAM,MAAM,KAAK,GAAG,cAAc,CAAC,mBAAmB,EAAE,EAAC;EACzD;EACA,MAAM,IAAI,cAAc,CAAC,MAAM,IAAI,mBAAmB,EAAE;EACxD,QAAQ,cAAc,GAAG,KAAI;EAC7B,OAAO;EACP,MAAM,OAAO;EACb,QAAQ,IAAI,EAAE,KAAK;EACnB,QAAQ,KAAK;EACb,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,KAAK;EAC9D,EAAE,IAAI,KAAK,GAAG,EAAC;EACf,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACrB,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE;EAC/C,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAE;EACtC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAC;EAC9B,OAAO;EACP,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAK;EACf,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;EAC5C,EAAE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;EACrD,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE;EACnC,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE;EAC5B,QAAQ,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC;EAC5C,OAAO;EACP,MAAM,KAAK,IAAI,CAAC,CAAC,OAAM;EACvB,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,2BAA2B,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,KAAK;EAC5F,EAAE,IAAI,IAAI,GAAG,cAAa;EAC1B,EAAE,MAAM,KAAK,GAAG,aAAa,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,MAAK;EAC5E;EACA;EACA;EACA,EAAE,IAAI,WAAW,GAAG,GAAE;EACtB,EAAE,MAAM,eAAe,GAAG,MAAM;EAChC,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;EAChC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,UAAU,CAAC,WAAW,CAAC,EAAC;EACxK,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EACjC,MAAM,WAAW,GAAG,GAAE;EACtB,KAAK;EACL,IAAG;EACH,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI;EACvB,IAAI,QAAQ,CAAC,CAAC,WAAW;EACzB,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,OAAO,CAAC;EACnB,MAAM,KAAK,KAAK,CAAC;EACjB,MAAM,KAAK,MAAM;EACjB,QAAQ,WAAW,CAAC,IAAI,CAAC,CAAC,EAAC;EAC3B,QAAQ,KAAK;EACb,MAAM;EACN,QAAQ,eAAe,GAAE;EACzB,QAAQ,QAAQ,CAAC,CAAC,WAAW;EAC7B,UAAU,KAAK,UAAU,CAAC;EAC1B,UAAU,KAAK,WAAW;EAC1B,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,UAAU,4BAA4B,CAAC,EAAE,CAAC,EAAC;EACnN,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EACvC,YAAY,KAAK;EACjB,UAAU;EACV,YAAY,IAAI,CAAC,YAAY,YAAY,EAAE;EAC3C,cAAc,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,EAAC;EACvK,cAAc,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EACzC,aAAa,MAAM;EACnB,cAAc,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;EAC5E,aAAa;EACb,SAAS;EACT,KAAK;EACL,GAAG,EAAC;EACJ,EAAE,eAAe,GAAE;EACnB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,KAAK;EAC/E,EAAE,IAAI,KAAK,KAAK,CAAC,EAAE;EACnB,IAAI,OAAO,2BAA2B,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC;EAC1E,GAAG;EACH,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,OAAM;EACvB,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;EAClC,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE;EACnC,MAAM,IAAI,KAAK,IAAI,CAAC,CAAC,MAAM,EAAE;EAC7B,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE;EAC9B;EACA,UAAU,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,EAAC;EACnF,SAAS;EACT,QAAQ,KAAK;EACb,OAAO;EACP,MAAM,KAAK,IAAI,CAAC,CAAC,OAAM;EACvB,KAAK;EACL,GAAG;EACH,EAAE,OAAO,2BAA2B,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;EACrE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,KAAK;EACtE,EAAE,IAAI,MAAM,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE;EAC9B,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,OAAM;EACvB;EACA,EAAE,OAAO,CAAC,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;EAC/C,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE;EACnC,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE;EAC5B,QAAQ,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,EAAC;EACjF,OAAO;EACP,MAAM,KAAK,IAAI,CAAC,CAAC,OAAM;EACvB,KAAK;EACL,GAAG;EACH;EACA,EAAE,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;EACnC,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;EACpB,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;EAC7B,QAAQ,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,EAAC;EAClF,OAAO;EACP,MAAM,CAAC,CAAC,MAAM,CAAC,WAAW,EAAC;EAC3B,MAAM,MAAM,IAAI,CAAC,CAAC,OAAM;EACxB,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAK;EACf,GAAG;EACH,EAAE,IAAI,MAAM,GAAG,CAAC,EAAE;EAClB,IAAI,MAAMC,QAAY,CAAC,uBAAuB,CAAC;EAC/C,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,GAAG,KAAK;EAC3D,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EAChC,EAAE,IAAI,CAAC,KAAK,SAAS,EAAE;EACvB,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,EAAC;EACzB,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,KAAK;EAC/D,EAAE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAI;EAC3C,EAAE,IAAI,QAAO;EACb,EAAE,IAAI,KAAK,IAAI,IAAI,EAAE;EACrB,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,KAAK,CAAC,EAAC;EACrC,GAAG,MAAM;EACT,IAAI,QAAQ,KAAK,CAAC,WAAW;EAC7B,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,MAAM,CAAC;EAClB,MAAM,KAAK,OAAO,CAAC;EACnB,MAAM,KAAK,KAAK,CAAC;EACjB,MAAM,KAAK,MAAM;EACjB,QAAQ,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,KAAK,CAAC,EAAC;EACzC,QAAQ,KAAK;EACb,MAAM,KAAK,UAAU;EACrB,QAAQ,OAAO,GAAG,IAAI,aAAa,4BAA4B,KAAK,GAAE;EACtE,QAAQ,KAAK;EACb,MAAM;EACN,QAAQ,IAAI,KAAK,YAAY,YAAY,EAAE;EAC3C,UAAU,OAAO,GAAG,IAAI,WAAW,CAAC,KAAK,EAAC;EAC1C,SAAS,MAAM;EACf,UAAU,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;EACpD,SAAS;EACT,KAAK;EACL,GAAG;EACH,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,WAAW,EAAC;EAClI,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,CAAC,MAAM,EAAE,GAAG,KAAK;EAC3C,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EAClC,EAAE,OAAO,GAAG,KAAK,SAAS,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS;EACjG,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,MAAM,KAAK;EACzC;EACA;EACA;EACA,EAAE,MAAM,GAAG,GAAG,GAAE;EAChB,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE;EAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EACxB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EAC7D,KAAK;EACL,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,CAAC,MAAM,EAAE,GAAG,KAAK;EAC3C,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EAClC,EAAE,OAAO,GAAG,KAAK,SAAS,IAAI,CAAC,GAAG,CAAC,OAAO;EAC1C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,kBAAkB,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,KAAK;EAC7D,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAI;EACtC,EAAE,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;EAC7G,IAAI,CAAC,GAAG,CAAC,CAAC,KAAI;EACd,GAAG;EACH,EAAE,OAAO,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS;EAChG,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,GAAG,IAAIC,cAAuB,CAAC,GAAG,CAAC,OAAO,EAAE,4BAA4B,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;EC/kBpI;EACA;EACA;AACA,AAmBA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,SAAS,MAAM,CAAC;EACxC;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE;EACpC,IAAI,KAAK,CAAC,MAAM,EAAE,WAAW,EAAC;EAC9B,IAAI,IAAI,CAAC,YAAY,GAAG,YAAW;EACnC,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,SAAS,YAAY,CAAC;EACzC,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,KAAK,GAAE;EACX;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,cAAc,GAAG,GAAE;EAC5B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;EACvB,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAC;EAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,6BAA6B,IAAI,CAAC,cAAc,GAAE;EACnE,IAAI,IAAI,CAAC,cAAc,GAAG,KAAI;EAC9B,GAAG;AACH;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,MAAM,EAAE;EACvB,GAAG;AACH;EACA,EAAE,IAAI,MAAM,CAAC,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM;EACnF,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE;EAC1C,IAAI,iBAAiB,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,EAAC;EAC5E,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE;EAC1B,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,sBAAsB,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC;EACjE,OAAO,EAAC;EACR,KAAK,MAAM;EACX,gCAAgC,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,OAAO,EAAC;EAClF,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE;EACjB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAC;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;EAC7B,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC;EACxD,OAAO,EAAC;EACR,KAAK,MAAM;EACX,gCAAgC,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAC;EAC3E,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE;EACd,IAAI,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC;EACnC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,OAAO,eAAe,CAAC,IAAI,CAAC;EAChC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,YAAY,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EACpE,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE;EACV,IAAI,OAAO,WAAW,CAAC,IAAI,sBAAsB,CAAC,EAAE;EACpD,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;EACd,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,EAAC;EAC5B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;EACvB,IAAI,OAAO,sBAAsB,CAAC,IAAI,CAAC;EACvC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAI9B,YAAqB,CAAC,OAAO,EAAE,WAAW,EAAC;EAC/C,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,OAAO,IAAI,IAAI,MAAM,EAAE;;EC3LjD;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,SAAS,MAAM,CAAC;EACtC;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;EACxC,IAAI,KAAK,CAAC,IAAI,EAAE,WAAW,EAAC;EAC5B,IAAI,IAAI,CAAC,WAAW,GAAG,KAAI;EAC3B,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,SAAS,YAAY,CAAC;EACvC,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,KAAK,GAAE;EACX;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,GAAE;EACnC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;EACvB,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAC;EAC7B,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,qCAAqC,IAAI,CAAC,cAAc,GAAG;EACtF,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EAC1B,KAAK;EACL,IAAI,IAAI,CAAC,cAAc,GAAG,KAAI;EAC9B,GAAG;AACH;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,IAAI,EAAE;EACrB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE;EAC1C,IAAI,iBAAiB,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE,WAAW,EAAE,UAAU,CAAC,EAAC;EACtF,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ;EACA;EACA;EACA,IAAI,MAAM,GAAG,GAAG,GAAE;EAClB,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;EACzC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACzB,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;EAC5D,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,YAAY,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAC;EAC7D,OAAO;EACP,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO+B,WAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9F,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAOA,WAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACpI,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,OAAOA,WAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5I,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;EACd;EACA;EACA;EACA,IAAI,MAAM,GAAG,GAAG,GAAE;EAClB,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;EACzC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACzB,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAC;EAChE,OAAO;EACP,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;EACvB,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;EACzB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE;EACf,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,aAAa,CAAC,WAAW,EAAE,IAAI,EAAE,GAAG,EAAC;EAC7C,OAAO,EAAC;EACR,KAAK,MAAM;EACX,sCAAsC,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,GAAG,EAAC;EACvE,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE;EACnB,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAC;EACjD,OAAO,EAAC;EACR,KAAK,MAAM;EACX,sCAAsC,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EAC3E,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE;EACZ,IAAI,2BAA2B,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;EACrD,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE;EACZ,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC;EAChC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAI/B,YAAqB,CAAC,OAAO,EAAE,SAAS,EAAC;EAC7C,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,OAAO,IAAI,IAAI,IAAI,EAAE;;ECvM7C;EACA;EACA;EACA;EACA;EACA,MAAM,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAIgC,SAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;AAC5H;AACA,EAAO,MAAM,gBAAgB,CAAC;EAC9B;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;EACH,CAAC;AACD;AACA,EAAO,MAAM,oBAAoB,SAAS,gBAAgB,CAAC;EAC3D;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE;EAC/C,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAC;EACtB,IAAI,IAAI,CAAC,iBAAiB,GAAG,kBAAiB;EAC9C,GAAG;EACH,CAAC;AACD;AACA,EAAO,MAAM,mBAAmB,SAAS,gBAAgB,CAAC;EAC1D;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE;EAC/C,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAC;EACtB,IAAI,IAAI,CAAC,iBAAiB,GAAG,kBAAiB;EAC9C,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,gBAAgB,GAAG,CAAC,WAAW,EAAE,iBAAiB,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,KAAK;EACjF,EAAE,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;EACtC,IAAI,QAAQ,KAAK,CAAC,OAAO,CAAC,WAAW;EACrC,MAAM,KAAK,YAAY,CAAC;EACxB,MAAM,KAAK,aAAa;EACxB,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EAC5B,UAAU,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;EACpC;EACA,YAAY,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,EAAC;EAC7F,WAAW;EACX,UAAU,KAAK,IAAI,KAAK,CAAC,OAAM;EAC/B,SAAS;EACT,QAAQ,KAAK;EACb,MAAM,KAAK,aAAa;EACxB,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EAC5B,UAAU,uBAAuB,CAAC,iBAAiB,gCAAgC,KAAK,CAAC,OAAO,GAAE;EAClG,SAAS;EACT,QAAQ,KAAK;EACb,KAAK;EACL,IAAI,IAAI,GAAG,MAAK;EAChB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG;EACH,EAAE,OAAO,IAAI,oBAAoB,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,CAAC;EACjE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,YAAY,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,KAAK;EACrD,EAAE,MAAM,iBAAiB,GAAG,IAAI,GAAG,GAAE;EACrC,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,OAAM;EAC7B,EAAE,OAAO,gBAAgB,CAAC,WAAW,EAAE,iBAAiB,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;EAC7E,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,uBAAuB,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,KAAK;EACzF;EACA,EAAE;EACF,IAAI,KAAK,KAAK,IAAI;EAClB,MAAM,KAAK,CAAC,OAAO,KAAK,IAAI;EAC5B,QAAQ,KAAK,CAAC,OAAO,CAAC,WAAW,KAAK,aAAa;EACnD,QAAQ,UAAU,CAAC,iBAAiB,CAAC,GAAG,8BAA8B,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,+BAA+B,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC;EAC/I,OAAO;EACP,KAAK;EACL,IAAI;EACJ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EACxB,MAAM,iBAAiB,CAAC,MAAM,8BAA8B,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAC;EAChF,KAAK;EACL,IAAI,IAAI,GAAG,MAAK;EAChB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG;EACH,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,iBAAiB,EAAE;EAC9C,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;EACtK,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EAC/B,GAAG;EACH,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;EACxB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,uBAAuB,GAAG,CAAC,iBAAiB,EAAE,MAAM,KAAK;EAC/D,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,OAAM;EAC/B,EAAE,IAAI,KAAK,KAAK,IAAI,EAAE;EACtB,IAAI,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAC;EACjC,GAAG,MAAM;EACT,IAAI,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EACrC,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,wBAAwB,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,KAAK;EACjF;EACA,EAAE,OAAO,IAAI,EAAE;EACf,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;EACxB,MAAM,KAAK;EACX,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,EAAE,CAEzB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,KAAK,aAAa,IAAI,UAAU,CAAC,UAAU,CAAC,+BAA+B,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,IAAI,+BAA+B,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;EACtM;EACA,MAAM,uBAAuB,CAAC,iBAAiB,gCAAgC,KAAK,CAAC,OAAO,GAAE;EAC9F,KAAK,MAAM;EACX,MAAM,KAAK;EACX,KAAK;EACL,IAAI,IAAI,GAAG,MAAK;EAChB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG;EACH,EAAE,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC;EAC1C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,gBAAgB,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,KAAK;EAC9F,EAAE,MAAM,iBAAiB,GAAG,IAAI,GAAG,GAAE;EACrC;EACA,EAAE,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;EAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,EAAC;EAC/B,IAAI,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAI;EACzD,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;EACtC;EACA,MAAM,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,EAAC;EAC5C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;EACxK,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EACjC,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,CAAC;EAChE,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,UAAU,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,KAAK;EAC9F,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,iBAAiB,EAAE;EACzC,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;EACvC,MAAM,UAAU,CAAC,GAAG,CAAC,GAAG,KAAI;EAC5B,KAAK;EACL,GAAG;EACH,EAAE,MAAM,MAAM,GAAG,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAC;EACrF,EAAE,MAAM,SAAS,GAAG,gBAAgB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAC;EACnH,EAAE,IAAI,GAAG,SAAS,CAAC,KAAI;EACvB,EAAE,KAAK,GAAG,SAAS,CAAC,MAAK;EACzB;EACA,EAAE,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,KAAK,MAAM,GAAG,IAAI,aAAa,wBAAwB,IAAI,EAAE,GAAG,IAAI,YAAY,CAAC,IAAI,EAAC;EACxH,EAAE,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAC;EAChJ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EAC7B,EAAE,OAAO,uBAAuB,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,iBAAiB,CAAC;EACzG,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,UAAU,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,KAAK;EAChG,EAAE,MAAM,MAAM,GAAG,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAC;EACrF,EAAE,MAAM,SAAS,GAAG,gBAAgB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAC;EACnH,EAAE,MAAM,iBAAiB,GAAG,SAAS,CAAC,kBAAiB;EACvD,EAAE,IAAI,GAAG,SAAS,CAAC,KAAI;EACvB,EAAE,KAAK,GAAG,SAAS,CAAC,MAAK;EACzB;EACA;EACA,EAAE,OAAO,MAAM,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI,EAAE;EACvC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;EACxB,MAAM,QAAQ,KAAK,CAAC,OAAO,CAAC,WAAW;EACvC,QAAQ,KAAK,aAAa,EAAE;EAC5B,UAAU,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,iCAAiC,KAAK,CAAC,OAAO,EAAC;EAC7E,UAAU,MAAM,IAAI,GAAG,UAAU,CAAC,GAAG,EAAC;EACtC,UAAU,IAAI,IAAI,KAAK,SAAS,EAAE;EAClC,YAAY,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;EACzC,cAAc,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAC;EAC3C,aAAa,MAAM;EACnB,cAAc,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EAC/C,aAAa;EACb,YAAY,KAAK,CAAC,MAAM,CAAC,WAAW,EAAC;EACrC,WAAW;EACX,UAAU,uBAAuB,CAAC,iBAAiB,gCAAgC,KAAK,CAAC,OAAO,GAAE;EAClG,UAAU,KAAK;EACf,SAAS;EACT,QAAQ,KAAK,YAAY,CAAC;EAC1B,QAAQ,KAAK,aAAa;EAC1B,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE;EACrC,YAAY,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,EAAC;EAC9F,WAAW;EACX,UAAU,MAAM,IAAI,KAAK,CAAC,OAAM;EAChC,UAAU,KAAK;EACf,OAAO;EACP,KAAK;EACL,IAAI,IAAI,GAAG,MAAK;EAChB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG;EACH;EACA;EACA;EACA,EAAE,IAAI,MAAM,GAAG,CAAC,EAAE;EAClB,IAAI,IAAI,QAAQ,GAAG,GAAE;EACrB,IAAI,OAAO,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE;EACjC,MAAM,QAAQ,IAAI,KAAI;EACtB,KAAK;EACL,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,aAAa,CAAC,QAAQ,CAAC,EAAC;EACtK,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC;EAC/B,GAAG;EACH,EAAE,OAAO,uBAAuB,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,CAAC;EACrF,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,UAAU,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,KAAK;EAC5E,EAAE,OAAO,MAAM,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI,EAAE;EACvC,IAAI,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;EACjC,MAAM,QAAQ,KAAK,CAAC,OAAO,CAAC,WAAW;EACvC,QAAQ,KAAK,aAAa;EAC1B,UAAU,uBAAuB,CAAC,iBAAiB,gCAAgC,KAAK,CAAC,OAAO,GAAE;EAClG,UAAU,KAAK;EACf,QAAQ,KAAK,YAAY,CAAC;EAC1B,QAAQ,KAAK,aAAa;EAC1B,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE;EACrC,YAAY,iBAAiB,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,EAAC;EAC9F,WAAW;EACX,UAAU,MAAM,IAAI,KAAK,CAAC,OAAM;EAChC,UAAU,KAAK,CAAC,MAAM,CAAC,WAAW,EAAC;EACnC,UAAU,KAAK;EACf,OAAO;EACP,KAAK;EACL,IAAI,IAAI,GAAG,MAAK;EAChB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG;EACH,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;EACxB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,SAAS,MAAM,CAAC;EACvC;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,KAAK,EAAE,WAAW,EAAE;EACnC,IAAI,KAAK,CAAC,KAAK,EAAE,WAAW,EAAC;EAC7B;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,KAAK,CAAC,GAAG;EACf,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;EAC9B,MAAM,MAAM,CAAC,uBAAuB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAC;EACpD,MAAM,IAAI,CAAC,MAAM,GAAG,GAAE;EACtB,MAAM,QAAQ,CAAC,CAAC,EAAE,WAAW,IAAI;EACjC,QAAQ,MAAM,KAAK,oCAAoC,IAAI,CAAC,MAAM,EAAC;EACnE,QAAQ,MAAM,iBAAiB,GAAG,IAAI,GAAG,GAAE;EAC3C,QAAQ,MAAM,aAAa,GAAG,IAAI,GAAG,GAAE;EACvC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAM;EACrC;EACA;EACA;EACA,QAAQ,IAAI,MAAM,GAAG,KAAI;EACzB;EACA;EACA;EACA,QAAQ,MAAM,UAAU,GAAG,GAAE;EAC7B;EACA;EACA;EACA,QAAQ,IAAI,MAAM,GAAG,GAAE;EACvB,QAAQ,IAAI,MAAM,GAAG,EAAC;EACtB,QAAQ,IAAI,SAAS,GAAG,EAAC;EACzB,QAAQ,MAAM,KAAK,GAAG,MAAM;EAC5B,UAAU,IAAI,MAAM,KAAK,IAAI,EAAE;EAC/B;EACA;EACA;EACA,YAAY,IAAI,GAAE;EAClB,YAAY,QAAQ,MAAM;EAC1B,cAAc,KAAK,QAAQ;EAC3B,gBAAgB,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,GAAE;EAC1C,gBAAgB,SAAS,GAAG,EAAC;EAC7B,gBAAgB,KAAK;EACrB,cAAc,KAAK,QAAQ;EAC3B,gBAAgB,EAAE,GAAG,EAAE,MAAM,GAAE;EAC/B,gBAAgB,IAAI,iBAAiB,CAAC,IAAI,GAAG,CAAC,EAAE;EAChD,kBAAkB,EAAE,CAAC,UAAU,GAAG,GAAE;EACpC,kBAAkB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,iBAAiB,EAAE;EAChE,oBAAoB,IAAI,KAAK,KAAK,IAAI,EAAE;EACxC,sBAAsB,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,MAAK;EAChD,qBAAqB;EACrB,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB,MAAM,GAAG,GAAE;EAC3B,gBAAgB,KAAK;EACrB,cAAc,KAAK,QAAQ;EAC3B,gBAAgB,EAAE,GAAG,EAAE,MAAM,GAAE;EAC/B,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;EACxD,kBAAkB,EAAE,CAAC,UAAU,GAAG,GAAE;EACpC,kBAAkB,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;EAChD,oBAAoB,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,EAAC;EACxD,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB,MAAM,GAAG,EAAC;EAC1B,gBAAgB,KAAK;EACrB,aAAa;EACb,YAAY,KAAK,CAAC,IAAI,CAAC,EAAE,EAAC;EAC1B,YAAY,MAAM,GAAG,KAAI;EACzB,WAAW;EACX,UAAS;EACT,QAAQ,OAAO,IAAI,KAAK,IAAI,EAAE;EAC9B,UAAU,QAAQ,IAAI,CAAC,OAAO,CAAC,WAAW;EAC1C,YAAY,KAAK,YAAY;EAC7B,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACnC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACzC,kBAAkB,KAAK,GAAE;EACzB,kBAAkB,MAAM,GAAG,SAAQ;EACnC,kBAAkB,MAAM,+BAA+B,CAAC,IAAI,CAAC,OAAO,EAAE,MAAK;EAC3E,kBAAkB,KAAK,GAAE;EACzB,iBAAiB;EACjB,eAAe,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EAC7C,gBAAgB,IAAI,MAAM,KAAK,QAAQ,EAAE;EACzC,kBAAkB,KAAK,GAAE;EACzB,kBAAkB,MAAM,GAAG,SAAQ;EACnC,iBAAiB;EACjB,gBAAgB,SAAS,IAAI,EAAC;EAC9B,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACxC,gBAAgB,IAAI,MAAM,KAAK,QAAQ,EAAE;EACzC,kBAAkB,KAAK,GAAE;EACzB,kBAAkB,MAAM,GAAG,SAAQ;EACnC,iBAAiB;EACjB,gBAAgB,MAAM,IAAI,EAAC;EAC3B,eAAe;EACf,cAAc,KAAK;EACnB,YAAY,KAAK,aAAa;EAC9B,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACnC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACzC,kBAAkB,IAAI,MAAM,KAAK,QAAQ,EAAE;EAC3C,oBAAoB,KAAK,GAAE;EAC3B,oBAAoB,MAAM,GAAG,SAAQ;EACrC,mBAAmB;EACnB,kBAAkB,MAAM,iCAAiC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAG;EAC3E,iBAAiB;EACjB,eAAe,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EAC7C,gBAAgB,IAAI,MAAM,KAAK,QAAQ,EAAE;EACzC,kBAAkB,KAAK,GAAE;EACzB,kBAAkB,MAAM,GAAG,SAAQ;EACnC,iBAAiB;EACjB,gBAAgB,SAAS,IAAI,IAAI,CAAC,OAAM;EACxC,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACxC,gBAAgB,IAAI,MAAM,KAAK,QAAQ,EAAE;EACzC,kBAAkB,KAAK,GAAE;EACzB,kBAAkB,MAAM,GAAG,SAAQ;EACnC,iBAAiB;EACjB,gBAAgB,MAAM,IAAI,IAAI,CAAC,OAAM;EACrC,eAAe;EACf,cAAc,KAAK;EACnB,YAAY,KAAK,aAAa,EAAE;EAChC,cAAc,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,iCAAiC,IAAI,CAAC,OAAO,EAAC;EAChF,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACnC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EACzC,kBAAkB,MAAM,MAAM,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAI;EACnE,kBAAkB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;EAClD,oBAAoB,IAAI,MAAM,KAAK,QAAQ,EAAE;EAC7C,sBAAsB,KAAK,GAAE;EAC7B,qBAAqB;EACrB,oBAAoB,IAAI,UAAU,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE;EAC7E,sBAAsB,OAAO,UAAU,CAAC,GAAG,EAAC;EAC5C,qBAAqB,MAAM;EAC3B,sBAAsB,UAAU,CAAC,GAAG,CAAC,GAAG,MAAK;EAC7C,qBAAqB;EACrB,mBAAmB,MAAM;EACzB,oBAAoB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EAC5C,mBAAmB;EACnB,iBAAiB;EACjB,eAAe,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;EAC7C,gBAAgB,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EAC7C,gBAAgB,MAAM,MAAM,GAAG,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,KAAI;EACjE,gBAAgB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;EAChD,kBAAkB,IAAI,MAAM,KAAK,QAAQ,EAAE;EAC3C,oBAAoB,KAAK,GAAE;EAC3B,mBAAmB;EACnB,kBAAkB,UAAU,CAAC,GAAG,CAAC,GAAG,OAAM;EAC1C,iBAAiB;EACjB,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACxC,gBAAgB,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EAC7C,gBAAgB,MAAM,IAAI,GAAG,UAAU,CAAC,GAAG,EAAC;EAC5C,gBAAgB,IAAI,IAAI,KAAK,SAAS,EAAE;EACxC,kBAAkB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;EAChD,oBAAoB,IAAI,MAAM,KAAK,QAAQ,EAAE;EAC7C,sBAAsB,KAAK,GAAE;EAC7B,qBAAqB;EACrB,oBAAoB,IAAI,KAAK,KAAK,IAAI,EAAE;EACxC,sBAAsB,UAAU,CAAC,GAAG,CAAC,GAAG,MAAK;EAC7C,qBAAqB,MAAM;EAC3B,sBAAsB,OAAO,UAAU,CAAC,GAAG,EAAC;EAC5C,qBAAqB;EACrB,mBAAmB,MAAM;EACzB,oBAAoB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EAC5C,mBAAmB;EACnB,iBAAiB;EACjB,eAAe;EACf,cAAc,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACjC,gBAAgB,IAAI,MAAM,KAAK,QAAQ,EAAE;EACzC,kBAAkB,KAAK,GAAE;EACzB,iBAAiB;EACjB,gBAAgB,uBAAuB,CAAC,iBAAiB,gCAAgC,IAAI,CAAC,OAAO,GAAE;EACvG,eAAe;EACf,cAAc,KAAK;EACnB,aAAa;EACb,WAAW;EACX,UAAU,IAAI,GAAG,IAAI,CAAC,MAAK;EAC3B,SAAS;EACT,QAAQ,KAAK,GAAE;EACf,QAAQ,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;EACjC,UAAU,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EAChD,UAAU,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;EAC9E;EACA,YAAY,KAAK,CAAC,GAAG,GAAE;EACvB,WAAW,MAAM;EACjB,YAAY,KAAK;EACjB,WAAW;EACX,SAAS;EACT,OAAO,EAAC;EACR,KAAK;EACL,IAAI,OAAO,IAAI,CAAC,MAAM;EACtB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,SAAS,YAAY,CAAC;EACxC;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE;EACvB,IAAI,KAAK,GAAE;EACX;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,QAAQ,GAAG,MAAM,KAAK,SAAS,GAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,GAAE;EAC9E,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,MAAM,CAAC,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,OAAO;EACvB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;EACvB,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAC;EAC7B,IAAI,IAAI;EACR,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,EAAC;EACtE,KAAK,CAAC,OAAO,CAAC,EAAE;EAChB,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC;EACtB,KAAK;EACL,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAI;EACxB,GAAG;AACH;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,KAAK,EAAE;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE;EAC1C,IAAI,iBAAiB,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,EAAC;EAC3E,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,GAAG;EACd,IAAI,IAAI,GAAG,GAAG,GAAE;EAChB;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACvB,IAAI,OAAO,CAAC,KAAK,IAAI,EAAE;EACvB,MAAM,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,KAAK,aAAa,EAAE;EAChF,QAAQ,GAAG,iCAAiC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAG;EAC3D,OAAO;EACP,MAAM,CAAC,GAAG,CAAC,CAAC,MAAK;EACjB,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,KAAK,EAAE;EACrB,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC;EACA;EACA;EACA,QAAQ,IAAI,GAAG,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAC;EACzD,QAAQ,MAAM,iBAAiB,GAAG,IAAI,GAAG,GAAE;EAC3C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/C,UAAU,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAAC;EAC7B,UAAU,IAAI,EAAE,CAAC,MAAM,KAAK,SAAS,EAAE;EACvC;EACA;EACA;EACA;EACA;EACA,YAAY,MAAM,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAM;EAC5K,YAAY,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;EAC3D,cAAc,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,iBAAiB,EAAE,GAAG,EAAE,EAAE,CAAC,UAAU,IAAI,EAAE,EAAC;EACnH,aAAa;EACb,WAAW,MAAM,IAAI,EAAE,CAAC,MAAM,KAAK,SAAS,EAAE;EAC9C,YAAY,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,iBAAiB,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,UAAU,IAAI,EAAE,EAAC;EACvH,WAAW,MAAM,IAAI,EAAE,CAAC,MAAM,KAAK,SAAS,EAAE;EAC9C,YAAY,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,iBAAiB,EAAE,EAAE,CAAC,MAAM,EAAC;EAC5F,WAAW;EACX,SAAS;EACT,OAAO,EAAC;EACR,KAAK,MAAM;EACX,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC;EACvF,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE;EACnD;EACA;EACA;EACA,IAAI,MAAM,GAAG,GAAG,GAAE;EAClB,IAAI,MAAM,iBAAiB,GAAG,IAAI,GAAG,GAAE;EACvC,IAAI,MAAM,GAAG,uBAAuB,IAAI,CAAC,GAAG,EAAC;EAC7C,IAAI,IAAI,GAAG,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACvB,IAAI,SAAS,OAAO,IAAI;EACxB,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;EAC1B;EACA;EACA;EACA;EACA,QAAQ,MAAM,UAAU,GAAG,GAAE;EAC7B,QAAQ,IAAI,aAAa,GAAG,MAAK;EACjC,QAAQ,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,iBAAiB,EAAE;EACtD,UAAU,aAAa,GAAG,KAAI;EAC9B,UAAU,UAAU,CAAC,GAAG,CAAC,GAAG,MAAK;EACjC,SAAS;EACT;EACA;EACA;EACA,QAAQ,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAE;EAClC,QAAQ,IAAI,aAAa,EAAE;EAC3B,UAAU,EAAE,CAAC,UAAU,GAAG,WAAU;EACpC,SAAS;EACT,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC;EACpB,QAAQ,GAAG,GAAG,GAAE;EAChB,OAAO;EACP,KAAK;EACL;EACA;EACA,IAAI,QAAQ,CAAC,GAAG,EAAE,WAAW,IAAI;EACjC,MAAM,IAAI,QAAQ,EAAE;EACpB,QAAQ,4BAA4B,CAAC,WAAW,EAAE,QAAQ,EAAC;EAC3D,OAAO;EACP,MAAM,IAAI,YAAY,EAAE;EACxB,QAAQ,4BAA4B,CAAC,WAAW,EAAE,YAAY,EAAC;EAC/D,OAAO;EACP,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE;EACzB,QAAQ,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,YAAY,KAAK,SAAS,IAAI,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE;EAClG,UAAU,QAAQ,CAAC,CAAC,OAAO,CAAC,WAAW;EACvC,YAAY,KAAK,aAAa,EAAE;EAChC,cAAc,MAAM,GAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAC;EAC1D,cAAc,IAAI,QAAQ,KAAK,SAAS,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE;EACrE,gBAAgB,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS,EAAE;EAC9F,kBAAkB,OAAO,GAAE;EAC3B,kBAAkB,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,GAAG,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,EAAC;EAC1H,iBAAiB;EACjB,eAAe,MAAM,IAAI,YAAY,KAAK,SAAS,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE;EACpF,gBAAgB,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,KAAK,OAAO,EAAE;EAC5F,kBAAkB,OAAO,GAAE;EAC3B,kBAAkB,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,EAAC;EACtH,iBAAiB;EACjB,eAAe,MAAM,IAAI,GAAG,KAAK,SAAS,EAAE;EAC5C,gBAAgB,OAAO,GAAE;EACzB,gBAAgB,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAC;EACnD,eAAe;EACf,cAAc,GAAG,iCAAiC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAG;EACjE,cAAc,KAAK;EACnB,aAAa;EACb,YAAY,KAAK,YAAY,EAAE;EAC/B,cAAc,OAAO,GAAE;EACvB;EACA;EACA;EACA,cAAc,MAAM,EAAE,GAAG;EACzB,gBAAgB,MAAM,8BAA8B,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK;EACrE,gBAAe;EACf,cAAc,IAAI,iBAAiB,CAAC,IAAI,GAAG,CAAC,EAAE;EAC9C,gBAAgB,MAAM,KAAK,sCAAsC,EAAE,EAAC;EACpE,gBAAgB,EAAE,CAAC,UAAU,GAAG,MAAK;EACrC,gBAAgB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,iBAAiB,EAAE;EAC9D,kBAAkB,KAAK,CAAC,GAAG,CAAC,GAAG,MAAK;EACpC,iBAAiB;EACjB,eAAe;EACf,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC;EAC1B,cAAc,KAAK;EACnB,aAAa;EACb,YAAY,KAAK,aAAa;EAC9B,cAAc,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE;EAC1C,gBAAgB,OAAO,GAAE;EACzB,gBAAgB,uBAAuB,CAAC,iBAAiB,gCAAgC,CAAC,CAAC,OAAO,GAAE;EACpG,eAAe;EACf,cAAc,KAAK;EACnB,WAAW;EACX,SAAS;EACT,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAK;EACnB,OAAO;EACP,MAAM,OAAO,GAAE;EACf,KAAK,EAAE,4BAA4B,EAAC;EACpC,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE;EACnC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;EAC1B,MAAM,MAAM;EACZ,KAAK;EACL,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,IAAG;EACtB,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;EACpB,MAAM,QAAQ,CAAC,CAAC,EAAE,WAAW,IAAI;EACjC,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC;EACzF,QAAQ,IAAI,CAAC,UAAU,EAAE;EACzB,UAAU,UAAU,GAAG,GAAE;EACzB;EACA,UAAU,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,EAAC,EAAE,EAAC;EACpE,SAAS;EACT,QAAQ,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAC;EACvF,OAAO,EAAC;EACR,KAAK,MAAM;EACX,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,EAAC;EACrG,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,GAAG,EAAE,EAAE;EAC9C,IAAI,IAAI,KAAK,CAAC,WAAW,KAAK,MAAM,EAAE;EACtC,MAAM,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;EAChD,KAAK;EACL,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,IAAG;EACtB,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;EACpB,MAAM,QAAQ,CAAC,CAAC,EAAE,WAAW,IAAI;EACjC,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC;EACzF,QAAQ,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,UAAU,EAAC;EACxF,OAAO,EAAC;EACR,KAAK,MAAM;EACX,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,EAAC;EAC3G,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE;EACzB,IAAI,IAAI,MAAM,KAAK,CAAC,EAAE;EACtB,MAAM,MAAM;EACZ,KAAK;EACL,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,IAAG;EACtB,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;EACpB,MAAM,QAAQ,CAAC,CAAC,EAAE,WAAW,IAAI;EACjC,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC;EACzF,QAAQ,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAC;EACvE,OAAO,EAAC;EACR,KAAK,MAAM;EACX,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,EAAC;EAC3F,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE;EACrC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,IAAG;EACtB,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;EACpB,MAAM,QAAQ,CAAC,CAAC,EAAE,WAAW,IAAI;EACjC,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC;EACzF,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;EAC5B,UAAU,MAAM;EAChB,SAAS;EACT,QAAQ,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAC;EACzF,OAAO,EAAC;EACR,KAAK,MAAM;EACX,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,EAAC;EACvG,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAIhC,YAAqB,CAAC,OAAO,EAAE,UAAU,EAAC;EAC9C,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,OAAO,IAAI,IAAI,KAAK,EAAE;;ECn7B/C;EACA;EACA;AACA,AAkBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,CAAC;EAC5B;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,IAAI,EAAE;EACrC,IAAI,IAAI,CAAC,OAAO,GAAG,EAAC;EACpB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB;EACA;EACA;EACA,IAAI,IAAI,CAAC,YAAY,wBAAwB,IAAI,CAAC,MAAM,EAAC;EACzD,IAAI,IAAI,CAAC,UAAU,GAAG,KAAI;EAC1B,GAAG;AACH;EACA,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG;EACvB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,aAAY;EAC7B,IAAI,IAAI,IAAI,8BAA8B,CAAC,CAAC,CAAC,OAAO,EAAE,KAAI;EAC1D,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;EAC9E,MAAM,GAAG;EACT,QAAQ,IAAI,8BAA8B,CAAC,CAAC,CAAC,OAAO,EAAE,KAAI;EAC1D,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,KAAK,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,YAAY,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;EAC3H;EACA,UAAU,CAAC,GAAG,IAAI,CAAC,OAAM;EACzB,SAAS,MAAM;EACf;EACA,UAAU,OAAO,CAAC,KAAK,IAAI,EAAE;EAC7B,YAAY,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,EAAE;EAClC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAK;EACzB,cAAc,KAAK;EACnB,aAAa,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,EAAE;EAChD,cAAc,CAAC,GAAG,KAAI;EACtB,aAAa,MAAM;EACnB,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAK;EAChC,aAAa;EACb,WAAW;EACX,SAAS;EACT,OAAO,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,4BAA4B,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;EACvG,KAAK;EACL,IAAI,IAAI,CAAC,UAAU,GAAG,MAAK;EAC3B,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;EACpB;EACA,MAAM,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;EAC7C,KAAK;EACL,IAAI,IAAI,CAAC,YAAY,GAAG,EAAC;EACzB,IAAI,OAAO,EAAE,KAAK,qBAAqB,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;EACtE,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,SAAS,YAAY,CAAC;EAC/C,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,KAAK,GAAE;EACX;EACA;EACA;EACA,IAAI,IAAI,CAAC,cAAc,GAAG,GAAE;EAC5B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;EACvB,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,EAAC;EAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,6BAA6B,IAAI,CAAC,cAAc,GAAE;EACnE,IAAI,IAAI,CAAC,cAAc,GAAG,KAAI;EAC9B,GAAG;AACH;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,YAAY,EAAE;EAC7B,GAAG;AACH;EACA,EAAE,IAAI,MAAM,CAAC,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM;EACnF,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,gBAAgB,CAAC,CAAC,MAAM,EAAE;EAC5B,IAAI,OAAO,IAAI,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC;EAC3C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,KAAK,EAAE;EACxB,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,GAAE;EAC/B;EACA,IAAI,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,KAAK,EAAC;EACtH,IAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAE;EAChC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;EACnB,MAAM,OAAO,IAAI;EACjB,KAAK,MAAM;EACX,MAAM,OAAO,IAAI,CAAC,KAAK;EACvB,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,gBAAgB,CAAC,CAAC,KAAK,EAAE;EAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,GAAE;EAC/B;EACA,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,CAAC;EACxH,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE;EAC1C,IAAI,iBAAiB,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,CAAC,EAAC;EACtF,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,GAAG;EACd,IAAI,OAAO,WAAW,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;EAC5D,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,SAAS,GAAG,QAAQ,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE;EACpD,IAAI,MAAM,QAAQ,GAAG,SAAS,CAAC,sBAAsB,GAAE;EACvD,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;EAC/B,MAAM,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAC;EAChD,KAAK;EACL,IAAI,eAAe,CAAC,IAAI,EAAE,OAAO,IAAI;EACrC,MAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,IAAI,EAAC;EAC3E,KAAK,EAAC;EACN,IAAI,OAAO,QAAQ;EACnB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE;EAC1B,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,sBAAsB,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC;EACjE,OAAO,EAAC;EACR,KAAK,MAAM;EACX;EACA,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,OAAO,EAAC;EACtD,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;EAC7B,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAC;EACxD,OAAO,EAAC;EACR,KAAK,MAAM;EACX;EACA,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAC;EAC/C,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,OAAO,eAAe,CAAC,IAAI,CAAC;EAChC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAIA,YAAqB,CAAC,OAAO,EAAE,iBAAiB,EAAC;EACrD,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,OAAO,IAAI,IAAI,YAAY,EAAE;;ECrU7D;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,SAAS,YAAY,CAAC;EAC9C,EAAE,WAAW,CAAC,CAAC,QAAQ,GAAG,WAAW,EAAE;EACvC,IAAI,KAAK,GAAE;EACX,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;EAC5B;EACA;EACA;EACA,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,GAAE;EACjC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;EACvB,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC;EAC7B,KAAK,kCAAkC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;EACnF,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAC;EACnC,KAAK,EAAC;EACN,IAAI,IAAI,CAAC,YAAY,GAAG,KAAI;EAC5B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;EACzC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,GAAG;EACd,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAE;EACtC,IAAI,MAAM,aAAa,GAAG,GAAE;EAC5B,IAAI,MAAM,IAAI,GAAG,GAAE;EACnB,IAAI,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;EAC7B,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC;EACpB,KAAK;EACL,IAAI,IAAI,CAAC,IAAI,GAAE;EACf,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAM;EAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;EACtC,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EACzB,MAAM,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,EAAC;EACvD,KAAK;EACL,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAE;EACtD,IAAI,MAAM,WAAW,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAE;EACrF,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;EACzE,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,eAAe,CAAC,CAAC,aAAa,EAAE;EAClC,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,aAAa,CAAC,WAAW,EAAE,IAAI,EAAE,aAAa,EAAC;EACvD,OAAO,EAAC;EACR,KAAK,MAAM;EACX,qCAAqC,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,aAAa,EAAC;EAC9E,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,YAAY,CAAC,CAAC,aAAa,EAAE,cAAc,EAAE;EAC/C,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;EAC3B,MAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,IAAI;EACxC,QAAQ,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE,cAAc,EAAC;EACpE,OAAO,EAAC;EACR,KAAK,MAAM;EACX,sCAAsC,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,aAAa,EAAE,cAAc,EAAC;EAC5F,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,YAAY,CAAC,CAAC,aAAa,EAAE;EAC/B,IAAI,2BAA2B,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;EAC/D,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,aAAa,CAAC,CAAC,QAAQ,EAAE;EAC3B,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC;EAC9B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,SAAS,GAAG,QAAQ,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE;EACpD,IAAI,MAAM,GAAG,GAAG,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAC;EACtD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAE;EACtC,IAAI,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;EAC7B,MAAM,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,EAAC;EACvC,KAAK;EACL,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,IAAI;EAClC,MAAM,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,EAAC;EAC5D,KAAK,EAAC;EACN,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;EAC/B,MAAM,OAAO,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,EAAC;EAC3C,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAIA,YAAqB,CAAC,OAAO,EAAE,gBAAgB,EAAC;EACpD,IAAImB,cAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAC;EACnD,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,OAAO,IAAI,IAAI,WAAW,CAACC,aAAsB,CAAC,OAAO,CAAC,CAAC;;EC/L1F;EACA;EACA;AACA,EAAO,MAAM,SAAS,SAAS,MAAM,CAAC;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE;EAC1C,IAAI,KAAK,CAAC,MAAM,EAAE,WAAW,EAAC;EAC9B;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,gBAAgB,GAAG,MAAK;EACjC;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,GAAG,GAAE;EACtC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;EAC1B,MAAM,IAAI,GAAG,KAAK,IAAI,EAAE;EACxB,QAAQ,IAAI,CAAC,gBAAgB,GAAG,KAAI;EACpC,OAAO,MAAM;EACb,QAAQ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAC;EACvC,OAAO;EACP,KAAK,EAAC;EACN,GAAG;EACH,CAAC;;EC9BD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,SAAS,IAAI,CAAC;EACnC;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,QAAQ,EAAE;EACzB,IAAI,KAAK,GAAE;EACX;EACA;EACA;EACA,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;EAC5B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;EACtC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,SAAS,GAAG,QAAQ,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE;EACpD,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAC;EACrC,IAAI,IAAI,IAAG;EACX,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;EAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAC;EAChC,KAAK,MAAM;EACX,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAC;EACjD,KAAK;EACL,IAAI,GAAG,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAC;EACpD,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;EAC/B,MAAM,OAAO,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,EAAC;EAC3C,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAC;EACzB,IAAIpB,YAAqB,CAAC,OAAO,EAAE,aAAa,EAAC;EACjD,IAAImB,cAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAC;EACnD,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,OAAO;EACnC,EAAE,IAAI,QAAQ,CAACC,aAAsB,CAAC,OAAO,CAAC,CAAC;;EC/E/C;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,SAAS,KAAK,CAAC;EACpC,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,QAAQ,EAAE;EACzB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,SAAS,GAAG,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE;EAC/C,IAAI,MAAM,GAAG,GAAG,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC;EACzD,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;EAC/B,MAAM,OAAO,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,EAAC;EAC3C,KAAK;EACL,IAAI,OAAO,GAAG;EACd,GAAG;AACH;EACA,EAAE,QAAQ,CAAC,GAAG;EACd;EACA,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,KAAK,IAAI;EACvC,MAAM,MAAM,WAAW,GAAG,GAAE;EAC5B,MAAM,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,UAAU,EAAE;EAC/C,QAAQ,MAAM,KAAK,GAAG,GAAE;EACxB,QAAQ,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;EACtD,UAAU,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC;EACrE,SAAS;EACT;EACA,QAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EAAC;EACpD,QAAQ,WAAW,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAC;EAC7C,OAAO;EACP;EACA,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,EAAC;EAClE;EACA,MAAM,IAAI,GAAG,GAAG,GAAE;EAClB,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACnD,QAAQ,MAAM,IAAI,GAAG,WAAW,CAAC,CAAC,EAAC;EACnC,QAAQ,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAC;EAClC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACpD,UAAU,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;EACpC,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;EAC/C,SAAS;EACT,QAAQ,GAAG,IAAI,IAAG;EAClB,OAAO;EACP,MAAM,GAAG,IAAI,KAAK,CAAC,OAAM;EACzB,MAAM,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;EACxD,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC;EAC9C,OAAO;EACP,MAAM,OAAO,GAAG;EAChB,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE;EACnB,IAAIpB,YAAqB,CAAC,OAAO,EAAE,aAAa,EAAC;EACjD,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,OAAO,IAAI,IAAI,QAAQ,EAAE;;ECtF9C,MAAM,cAAc,CAAC;EAC5B;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE;EAC3B;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;EACxB,IAAI,IAAI,CAAC,OAAO,GAAG,MAAK;EACxB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE;EACvC,IAAI,MAAM4B,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE;EAC1B,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;EACH,CAAC;AACD;AACA,EAAO,MAAM,iBAAiB,CAAC;EAC/B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE;EACnB;EACA;EACA;EACA,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAE;EACtB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,EAAE,GAAG,GAAE;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,WAAW,EAAE;EAC3B,IAAI,OAAO,IAAI,CAAC,QAAQ;EACxB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;EACxC,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;EACH,CAAC;;ECzEM,MAAM,iBAAiB,GAAG,EAAC;AAClC;EACA;EACA;EACA;AACA,EAAO,MAAM,EAAE,SAAS,cAAc,CAAC;EACvC;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE;EAC3B,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,EAAC;EACrB,IAAI,IAAI,CAAC,OAAO,GAAG,KAAI;EACvB,GAAG;AACH;EACA,EAAE,MAAM,CAAC,GAAG,EAAE;AACd;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,OAAM;EAC/B,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE;EAC1B,IAAI,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAC;EAC1C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAIV,UAAmB,CAAC,OAAO,EAAE,iBAAiB,EAAC;EACnD,IAAIlB,YAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,EAAC;EACxD,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,SAAS,iBAAiB,CAAC;EAC7C;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE;EAClC,IAAI,KAAK,CAAC,EAAE,EAAC;EACb;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAGC,WAAoB,CAAC,OAAO,EAAC;EAC/C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;EACxC,IAAI,IAAI,MAAM,GAAG,CAAC,EAAE;EACpB;EACA,MAAM,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,EAAC;EAChE,MAAM,IAAI,CAAC,MAAM,IAAI,OAAM;EAC3B,KAAK;EACL,IAAI,OAAO,IAAI,EAAE;EACjB,MAAM,IAAI,CAAC,EAAE;EACb,MAAM,IAAI,CAAC,MAAM;EACjB,KAAK;EACL,GAAG;EACH,CAAC;;EChFM,MAAM,aAAa,CAAC;EAC3B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,OAAO,EAAE;EACxB,IAAI,IAAI,CAAC,OAAO,GAAG,QAAO;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;EACzB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;EAC1C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAM2B,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;EAClC;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAIK,kBAA2B,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC;EACtD,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,OAAO,IAAI,IAAI,aAAa,CAACC,cAAqB,CAACC,iBAA0B,CAAC,OAAO,CAAC,CAAC,CAAC;;ECrFlH,MAAM,cAAc,CAAC;EAC5B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;EACpB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,IAAI,CAAC,GAAG;EACnB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,EAAE;EACb,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC;EACvC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,EAAC;EACvD,IAAI,IAAI,CAAC,GAAG,GAAG,OAAM;EACrB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAG;EACzB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE;EAChC,IAAI,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAC;EAC5D,IAAI,IAAI,CAAC,OAAO,GAAG,KAAI;EACvB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAInC,YAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,EAAC;EACrD,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,kBAAkB,GAAG,OAAO,IAAI,IAAI,cAAc,CAACC,WAAoB,CAAC,OAAO,CAAC,CAAC;;EC9F9F;EACA;EACA;AACA,EAAO,MAAM,YAAY,CAAC;EAC1B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,KAAK,EAAE;EACtB,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;EACvB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;EACvC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAM2B,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;EAClC;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAIT,cAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;EAChE,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,OAAO,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAACC,aAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;;EC1FxG;EACA;EACA;AACA,EAAO,MAAM,aAAa,CAAC;EAC3B;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE;EAC3B,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,EAAE;EACb,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC;EAClD,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAMQ,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;EAClC;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAIT,cAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAC;EAC9C,IAAIA,cAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;EAChE,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,OAAO,IAAI,IAAI,aAAa,CAACC,aAAsB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAACA,aAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;;EC7F3I;EACA;EACA;AACA,EAAO,MAAM,WAAW,CAAC;EACzB;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,GAAG;EACnB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;EACpC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC;EACzD,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAC;EACxC,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAC;EACzC,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;EAClC;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAM;EAC/B,IAAIpB,YAAqB,CAAC,OAAO,EAAE,GAAG,GAAG,MAAM,EAAC;EAChD,IAAI,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EACvC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;EAC3B,MAAMmB,cAAuB,CAAC,OAAO,EAAE,CAAC,KAAK,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;EACzF,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,OAAO,IAAI;EAC1C,EAAE,MAAM,GAAG,GAAGlB,WAAoB,CAAC,OAAO,EAAC;EAC3C,EAAE,MAAM,EAAE,GAAG,GAAE;EACf,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAChC,IAAI,MAAM,CAAC,GAAGmB,aAAsB,CAAC,OAAO,EAAC;EAC7C,IAAI,IAAI,CAAC,KAAK,WAAW,EAAE;EAC3B,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,EAAC;EACxB,KAAK,MAAM;EACX,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;EAC5B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI,WAAW,CAAC,EAAE,CAAC;EAC5B,CAAC;;ECjHM,MAAM,UAAU,CAAC;EACxB;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,GAAG;EACnB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;EACnC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC;EACxD,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAC;EACxC,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAC;EACzC,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;EAClC;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAM;EAC/B,IAAIpB,YAAqB,CAAC,OAAO,EAAE,GAAG,GAAG,MAAM,EAAC;EAChD,IAAI,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EACvC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;EAC3B,MAAMoC,QAAiB,CAAC,OAAO,EAAE,CAAC,EAAC;EACnC,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,OAAO,IAAI;EACzC,EAAE,MAAM,GAAG,GAAGnC,WAAoB,CAAC,OAAO,EAAC;EAC3C,EAAE,MAAM,EAAE,GAAG,GAAE;EACf,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAChC,IAAI,EAAE,CAAC,IAAI,CAACoC,OAAgB,CAAC,OAAO,CAAC,EAAC;EACtC,GAAG;EACH,EAAE,OAAO,IAAI,UAAU,CAAC,EAAE,CAAC;EAC3B,CAAC;;ECvGD;EACA;EACA;AACA,EAAO,MAAM,aAAa,CAAC;EAC3B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM;EAC1B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;EAC7B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC;EACtC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC;EAC3D,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAC;EACxC,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAG;EACzB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;EAClC;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;EACzB;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE;EACf;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAIlB,cAAuB,CAAC,OAAO,EAAE,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC;EACtF,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,OAAO,IAAI,IAAI,aAAa,CAACC,aAAsB,CAAC,OAAO,CAAC,CAAC;;ECvF9F;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG;EACxB,EAAE,UAAU;EACZ,EAAE,QAAQ;EACV,EAAE,SAAS;EACX,EAAE,eAAe;EACjB,EAAE,gBAAgB;EAClB,EAAE,YAAY;EACd,EAAE,YAAY;EACd,EAAC;AACD;AACA,EAAO,MAAM,WAAW,GAAG,EAAC;AAC5B,EAAO,MAAM,SAAS,GAAG,EAAC;AAC1B,EAAO,MAAM,UAAU,GAAG,EAAC;AAC3B,EAAO,MAAM,gBAAgB,GAAG,EAAC;AACjC,EAAO,MAAM,iBAAiB,GAAG,EAAC;AAClC,EAAO,MAAM,aAAa,GAAG,EAAC;AAC9B,EAAO,MAAM,aAAa,GAAG,EAAC;AAC9B;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,CAAC;EACzB;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE;EACrB;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;EAC7C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAMQ,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE;EAChC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAC;EAC/C,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE;EACvB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAM;EAC/B,IAAI,OAAO,IAAI,KAAK,IAAI,EAAE;EAC1B,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACzB,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EAChC,OAAO,MAAM;EACb;EACA;EACA;EACA;EACA,QAAQ,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC;EAC9C,OAAO;EACP,MAAM,IAAI,GAAG,IAAI,CAAC,MAAK;EACvB,KAAK;EACL,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI;EACnC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACzB,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EAChC,OAAO,MAAM;EACb;EACA,QAAQ,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAC;EAC9C,OAAO;EACP,KAAK,EAAC;EACN,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAC;EACzC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE;EACb,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAM;EAC/B,IAAI,OAAO,IAAI,KAAK,IAAI,EAAE;EAC1B,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,EAAC;EAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAK;EACvB,KAAK;EACL,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAI;EAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,kCAAkC,CAAC,IAAI,KAAK;EACtE,MAAM,OAAO,IAAI,KAAK,IAAI,EAAE;EAC5B,QAAQ,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,EAAC;EAC5B,QAAQ,IAAI,GAAG,IAAI,CAAC,KAAI;EACxB,OAAO;EACP,KAAK,EAAC;EACN,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAE;EAC9B,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC;EAC7B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,OAAO,CAAC;EACZ,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,OAAO,IAAI,IAAI,WAAW,CAAC,QAAQ,CAAC3B,WAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;;ECzI3G;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,EAAE,KAAK;EAC3C;EACA;EACA;EACA,EAAE,IAAI,MAAM,GAAG,GAAE;EACjB,EAAE,IAAI,IAAI,GAAG,EAAC;EACd,EAAE,IAAI,KAAI;EACV,EAAE,GAAG;EACL,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;EAClB,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,EAAC;EAC3D,KAAK;EACL,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,EAAE,MAAM,EAAC;EACjC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,MAAK;EACvC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAM;EACxB,GAAG,QAAQ,MAAM,KAAK,IAAI,IAAI,IAAI,YAAY,IAAI,CAAC;EACnD,EAAE,OAAO;EACT,IAAI,IAAI,EAAE,IAAI;EACd,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,KAAK;EACxC,EAAE,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;EAC9C,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAK;EAC5B,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,KAAK;EAC1D,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAE;EACxB;EACA,EAAE,MAAM,SAAS,GAAG,IAAI,IAAI;EAC5B,IAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;EACxC,IAAI,QAAQ;EACZ,IAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;EAC5C,IAAI,QAAQ,CAAC,KAAK;EAClB,IAAI,QAAQ,CAAC,WAAW;EACxB,IAAI,QAAQ,CAAC,MAAM;EACnB,IAAI,QAAQ,CAAC,SAAS;EACtB,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;EACjC,IAAG;EACH,EAAE,IAAI,QAAQ,CAAC,OAAO,EAAE;EACxB,IAAI,SAAS,CAAC,OAAO,GAAG,KAAI;EAC5B,GAAG;EACH,EAAE,IAAI,QAAQ,CAAC,IAAI,EAAE;EACrB,IAAI,SAAS,CAAC,IAAI,GAAG,KAAI;EACzB,GAAG;EACH,EAAE,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;EAChC,IAAI,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,EAAC;EACrF,GAAG;EACH;EACA,EAAE,QAAQ,CAAC,KAAK,GAAG,UAAS;EAC5B;EACA,EAAE,IAAI,SAAS,CAAC,KAAK,KAAK,IAAI,EAAE;EAChC,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,UAAS;EACpC,GAAG;EACH;EACA,EAAE,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAC;EAC7C;EACA,EAAE,IAAI,SAAS,CAAC,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC,KAAK,KAAK,IAAI,EAAE;EAChE,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAC;EAC7D,GAAG;EACH,EAAE,QAAQ,CAAC,MAAM,GAAG,KAAI;EACxB,EAAE,OAAO,SAAS;EAClB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,KAAK;EAC1D,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;EAC5B,IAAI,OAAO,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC;EACtD,GAAG;EACH,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAK;EACpC;EACA;EACA;EACA,EAAE,IAAI,KAAI;EACV;EACA;EACA;EACA,EAAE,IAAI,MAAK;EACX,EAAE,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;EAC/B;EACA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAI;EACpB,IAAI,KAAK,GAAG,KAAI;EAChB,GAAG,MAAM;EACT;EACA,IAAI,IAAI,GAAG,KAAI;EACf,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAChC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAK;EACvB,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE;EACvD;EACA;EACA,QAAQ,OAAO,IAAI;EACnB,OAAO;EACP,KAAK;EACL,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC7B,MAAM,IAAI,wBAAwB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC;EACvE,KAAK;EACL,IAAI,KAAK,GAAG,KAAI;EAChB,GAAG;EACH;EACA,EAAE,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,CAAC,OAAO,KAAK,IAAI,IAAI,UAAU,CAAC,MAAM,KAAK,IAAI,EAAE;EACxF;EACA,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,KAAK,IAAI,EAAE;EAC7F,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,GAAG;EACH,EAAE,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,CAAC,MAAM,KAAK,IAAI,EAAE;EACzD,IAAI,OAAO,UAAU,CAAC,MAAM,KAAK,IAAI,EAAE;EACvC,MAAM,UAAU,GAAG,iBAAiB,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,EAAC;EACpE,KAAK;EACL;EACA,IAAI,OAAO,IAAI,KAAK,IAAI,EAAE;EAC1B;EACA;EACA;EACA,MAAM,IAAI,SAAS,GAAG,KAAI;EAC1B;EACA,MAAM,OAAO,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,KAAK,UAAU,EAAE;EAC1E,QAAQ,SAAS,GAAG,SAAS,CAAC,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,MAAM,EAAC;EACvG,OAAO;EACP,MAAM,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,KAAK,UAAU,EAAE;EACvE,QAAQ,IAAI,GAAG,UAAS;EACxB,QAAQ,KAAK;EACb,OAAO;EACP,MAAM,IAAI,GAAG,IAAI,CAAC,KAAI;EACtB,KAAK;EACL,IAAI,OAAO,KAAK,KAAK,IAAI,EAAE;EAC3B;EACA;EACA;EACA,MAAM,IAAI,UAAU,GAAG,MAAK;EAC5B;EACA,MAAM,OAAO,UAAU,KAAK,IAAI,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,KAAK,UAAU,EAAE;EAC5E,QAAQ,UAAU,GAAG,UAAU,CAAC,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG,iBAAiB,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,EAAC;EAC1G,OAAO;EACP,MAAM,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,KAAK,UAAU,EAAE;EACzE,QAAQ,KAAK,GAAG,WAAU;EAC1B,QAAQ,KAAK;EACb,OAAO;EACP,MAAM,KAAK,GAAG,KAAK,CAAC,MAAK;EACzB,KAAK;EACL,GAAG;EACH,EAAE,MAAM,UAAU,GAAG,IAAI,IAAI;EAC7B,IAAI,MAAM,CAAC,WAAW,CAAC;EACvB,IAAI,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM;EAC5C,IAAI,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE;EAC3C,IAAI,UAAU,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,8BAA8B,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI;EAC5F,IAAI,IAAI,CAAC,SAAS;EAClB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;EACvB,IAAG;EACH,EAAE,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,GAAE;EAC7B,EAAE,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAC;EAC5B,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,EAAC;EACnC,EAAE,OAAO,UAAU;EACnB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,SAAS,cAAc,CAAC;EACzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;EACjF,IAAI,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,EAAE,EAAC;EAClC;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;EACxB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,WAAW,GAAG,YAAW;EAClC;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,UAAS;EAC9B;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,MAAK;EACxB;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,QAAO;EAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,GAAE;EACrC,IAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,GAAE;EAC1C;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,MAAK;EACrB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE;EAC1B,IAAI,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,MAAK;EACvC,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC,GAAE;EACtB,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,OAAM;EAC9B,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,UAAS;EACpC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,OAAM;EAC9B;EACA;EACA;EACA,IAAI,IAAI,EAAC;EACT;EACA,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;EAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAK;EACzB,KAAK,MAAM,IAAI,SAAS,KAAK,IAAI,EAAE;EACnC,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAI;EAC5C,MAAM,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;EAC5C,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAI;EAClB,OAAO;EACP,KAAK,MAAM;EACX,MAAM,CAAC,GAAG,MAAM,CAAC,OAAM;EACvB,KAAK;EACL;EACA;EACA;EACA;EACA,IAAI,MAAM,gBAAgB,GAAG,IAAI,GAAG,GAAE;EACtC;EACA;EACA;EACA,IAAI,MAAM,iBAAiB,GAAG,IAAI,GAAG,GAAE;EACvC;EACA;EACA;EACA,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;EAC3C,MAAM,iBAAiB,CAAC,GAAG,CAAC,CAAC,EAAC;EAC9B,MAAM,gBAAgB,CAAC,GAAG,CAAC,CAAC,EAAC;EAC7B,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;EAC7C;EACA,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,EAAE;EACrC,UAAU,IAAI,CAAC,IAAI,GAAG,EAAC;EACvB,UAAU,gBAAgB,CAAC,KAAK,GAAE;EAClC,SAAS;EACT,OAAO,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;EACvF;EACA,QAAQ,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;EAClF,UAAU,IAAI,CAAC,IAAI,GAAG,EAAC;EACvB,UAAU,gBAAgB,CAAC,KAAK,GAAE;EAClC,SAAS;EACT,OAAO,MAAM;EACb,QAAQ,KAAK;EACb,OAAO;EACP,MAAM,CAAC,GAAG,CAAC,CAAC,MAAK;EACjB,KAAK;EACL;EACA,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;EAC5B,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAK;EACnC,MAAM,IAAI,CAAC,KAAK,GAAG,MAAK;EACxB,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI;EAC5B,KAAK,MAAM;EACX,MAAM,IAAI,EAAC;EACX,MAAM,IAAI,SAAS,KAAK,IAAI,EAAE;EAC9B,QAAQ,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAI;EAC9C,QAAQ,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;EAC9C,UAAU,CAAC,GAAG,CAAC,CAAC,KAAI;EACpB,SAAS;EACT,OAAO,MAAM;EACb,QAAQ,CAAC,GAAG,MAAM,CAAC,OAAM;EACzB,QAAQ,MAAM,CAAC,MAAM,GAAG,KAAI;EAC5B,OAAO;EACP,MAAM,IAAI,CAAC,KAAK,GAAG,EAAC;EACpB,KAAK;EACL,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC7B,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAI;EAC5B,KAAK,MAAM,IAAI,SAAS,KAAK,IAAI,EAAE;EACnC;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,EAAC;EACtC,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;EAC9B;EACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EACrC,OAAO;EACP,KAAK;EACL;EACA,IAAI,IAAI,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EAC/D,MAAM,MAAM,CAAC,OAAO,IAAI,OAAM;EAC9B,KAAK;EACL,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,EAAC;EAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,EAAC;EAC7C;EACA,IAAI,2BAA2B,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,EAAC;EAC/D,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,CAAC,EAAE;EACxG;EACA,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;EAC9B,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,IAAI,CAAC,GAAG;EACd,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAK;EACtB,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE;EACpC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAK;EACjB,KAAK;EACL,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,IAAI,CAAC,GAAG;EACd,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAI;EACrB,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE;EACpC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAI;EAChB,KAAK;EACL,IAAI,OAAO,CAAC;EACZ,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,MAAM,CAAC,GAAG;EAChB,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EACpE,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI;EACJ,MAAM,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;EAC3C,MAAM,IAAI,CAAC,KAAK,KAAK,KAAK;EAC1B,MAAM,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC;EACrD,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK,CAAC,EAAE,CAAC,MAAM;EACxC,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,EAAE,CAAC,KAAK;EACpD,MAAM,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO;EACpC,MAAM,IAAI,CAAC,MAAM,KAAK,IAAI;EAC1B,MAAM,KAAK,CAAC,MAAM,KAAK,IAAI;EAC3B,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW;EAC5D,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;EAC3C,MAAM;EACN,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;EACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAI;EACxB,OAAO;EACP,MAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAK;EAC9B,MAAM,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC/B,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAI;EAC9B,OAAO;EACP,MAAM,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,OAAM;EACjC,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE;EACvB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACvB,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,OAAM;EAChC;EACA,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;EACrD,QAAQ,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,OAAM;EACrC,OAAO;EACP,MAAM,IAAI,CAAC,OAAO,GAAG,KAAI;EACzB,MAAM,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAC;EACjE,MAAMqC,cAAqB,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,EAAEhC,QAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAC;EACxF,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAC;EACtC,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE;EACxB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EACvB,MAAM,MAAMW,cAAoB,EAAE;EAClC,KAAK;EACL,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAC;EAC1B,IAAI,IAAI,SAAS,EAAE;EACnB,MAAM,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAC;EAC9D,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,EAAC;EACpD,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAI,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAM;EAClG,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,YAAW;EACxC,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,UAAS;EACpC,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAGJ,KAAY;EACtD,OAAO,MAAM,KAAK,IAAI,GAAG,CAAC,GAAGvB,IAAW,CAAC;EACzC,OAAO,WAAW,KAAK,IAAI,GAAG,CAAC,GAAGE,IAAW,CAAC;EAC9C,OAAO,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG+C,IAAW,EAAC;EAC5C,IAAIrB,UAAmB,CAAC,OAAO,EAAE,IAAI,EAAC;EACtC,IAAI,IAAI,MAAM,KAAK,IAAI,EAAE;EACzB,MAAM,OAAO,CAAC,OAAO,EAAE,MAAM,EAAC;EAC9B,KAAK;EACL,IAAI,IAAI,WAAW,KAAK,IAAI,EAAE;EAC9B,MAAM,OAAO,CAAC,OAAO,EAAE,WAAW,EAAC;EACnC,KAAK;EACL,IAAI,IAAI,MAAM,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,EAAE;EACjD,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,OAAM;EAChC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;EACjC;EACA;EACA,QAAQ,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,EAAC;EAC5C,QAAQlB,YAAqB,CAAC,OAAO,EAAE,CAAC,EAAC;EACzC,QAAQmB,cAAuB,CAAC,OAAO,EAAE,IAAI,EAAC;EAC9C,OAAO,MAAM;EACb,QAAQnB,YAAqB,CAAC,OAAO,EAAE,CAAC,EAAC;EACzC,QAAQ,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAC;EACzC,OAAO;EACP,MAAM,IAAI,SAAS,KAAK,IAAI,EAAE;EAC9B,QAAQmB,cAAuB,CAAC,OAAO,EAAE,SAAS,EAAC;EACnD,OAAO;EACP,KAAK;EACL,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAC;EACvC,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,IAAI,KAAK,WAAW,CAAC,IAAI,GAAGN,KAAY,CAAC,CAAC,OAAO,EAAC;AACpF;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG;EAC3B,EAAE,MAAM,EAAE,MAAMI,cAAoB,EAAE,EAAE;EACxC,EAAE,kBAAkB;EACpB,EAAE,eAAe;EACjB,EAAE,iBAAiB;EACnB,EAAE,iBAAiB;EACnB,EAAE,gBAAgB;EAClB,EAAE,iBAAiB;EACnB,EAAE,eAAe;EACjB,EAAE,cAAc;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,CAAC;EAC7B;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,MAAMW,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE;EAClB,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE;EAChC,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE;EACvB,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE;EACb,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE;EAC1B,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,MAAM,CAAC,GAAG;EACZ,IAAI,MAAMA,mBAAyB,EAAE;EACrC,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,SAAS,iBAAiB,CAAC;EAC/C;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE;EAClC,IAAI,KAAK,CAAC,EAAE,EAAC;EACb;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAGtC,IAAW,MAAMA,IAAW,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAI;EAC7E;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,GAAGE,IAAW,MAAMA,IAAW,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAI;EAC9E,IAAI,MAAM,iBAAiB,GAAG,CAAC,IAAI,IAAIA,IAAW,GAAGF,IAAW,CAAC,MAAM,EAAC;EACxE,IAAI,MAAM,aAAa,GAAG,iBAAiB,GAAGW,WAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,MAAK;EACzF;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,UAAU,GAAG,iBAAiB,IAAI,aAAa,GAAGmB,aAAsB,CAAC,OAAO,CAAC,GAAG,KAAI;EACjG;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,iBAAiB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAI;EAC9E;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,iBAAiB,IAAI,CAAC,IAAI,GAAGmB,IAAW,MAAMA,IAAW,GAAGnB,aAAsB,CAAC,OAAO,CAAC,GAAG,KAAI;EACvH,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,SAAQ;EACjC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;EAC5B,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC;EAC7B,KAAK;EACL,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC7B,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC;EAC9B,KAAK;EACL,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;EAC9B,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC;EAC/B,KAAK;EACL;EACA;EACA;EACA,IAAI,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,EAAC;EACjD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAE;EAC1C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;EACxC,IAAI,IAAI,MAAM,GAAG,CAAC,EAAE;EACpB;EACA;EACA;EACA,MAAM,MAAM,EAAE,GAAG,IAAI,CAAC,GAAE;EACxB,MAAM,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,GAAG,MAAM,EAAC;EACtD,MAAM,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,EAAC;EAC7D,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAC;EAChD,MAAM,IAAI,CAAC,MAAM,IAAI,OAAM;EAC3B,KAAK;AACL;EACA,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,eAAe,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAC;EAC3F,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,EAAC;EACzF,IAAI,IAAI,MAAM,GAAG,KAAI;EACrB,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,UAAS;EAClC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;EAC9B,MAAM,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC;EACpD;EACA;EACA;EACA;EACA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,WAAW,KAAK,EAAE,CAAC,EAAE;EAC7H,QAAQ,MAAM,8BAA8B,CAAC,UAAU,CAAC,OAAO,EAAE,KAAI;EACrE,OAAO;EACP,KAAK,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;EACzC,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAC;EACnD,KAAK,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;EAC9B,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;EACnC,QAAQ,MAAM,GAAG,IAAI,CAAC,OAAM;EAC5B,QAAQ,SAAS,GAAG,IAAI,CAAC,UAAS;EAClC,OAAO;EACP,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;EAC/B,MAAM,IAAI,KAAK,CAAC,WAAW,KAAK,EAAE,EAAE;EACpC,QAAQ,MAAM,GAAG,KAAK,CAAC,OAAM;EAC7B,QAAQ,SAAS,GAAG,KAAK,CAAC,UAAS;EACnC,OAAO;EACP,KAAK,MAAM;EACX,MAAM,MAAMH,cAAoB,EAAE;EAClC,KAAK;AACL;EACA,IAAI,OAAO,MAAM,KAAK,IAAI;EAC1B,QAAQ,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC;EACpC,QAAQ,IAAI,IAAI;EAChB,QAAQ,IAAI,CAAC,EAAE;EACf,QAAQ,IAAI;EACZ,QAAQ,IAAI,CAAC,IAAI;EACjB,QAAQ,KAAK;EACb,QAAQ,IAAI,CAAC,KAAK;EAClB,QAAQ,MAAM;EACd,QAAQ,SAAS;EACjB,QAAQ,IAAI,CAAC,OAAO;EACpB,OAAO;EACP,GAAG;EACH,CAAC;;ECzwBD;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMZ,QAAM,GAAG,MAAM;;ECX5B;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,CAAC;EAClB;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB,IAAI,IAAI,CAAC,KAAK,GAAG,MAAK;EACtB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMA,QAAM,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC;AAC5D,AAQA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMmC,SAAO,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;;ECzCvE;AACA,AASA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,4BAA4B,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAC;AAC5F;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,IAAI,IAAI,GAAG,CAAC,aAAa,CAAC,IAAI,EAAC;AAC5D;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,MAAM,GAAG,CAAC,sBAAsB,GAAE;AACxE;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,IAAI,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC;AAC9D;EACA;AACA,EAAO,MAAM,SAAS,6BAA6B,OAAO,SAAS,KAAK,WAAW,GAAG,IAAI,SAAS,EAAE,GAAG,IAAI,EAAC;AAC7G,AAQA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,EAAE,EAAE,KAAK,KAAK;EAC5C,EAAEC,SAAY,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,KAAK,KAAK;EACtC,IAAI,IAAI,KAAK,KAAK,KAAK,EAAE;EACzB,MAAM,EAAE,CAAC,eAAe,CAAC,GAAG,EAAC;EAC7B,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;EAC/B,MAAM,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,EAAC;EAC9B,KAAK,MAAM;EACX;EACA,MAAM,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAC;EACjC,KAAK;EACL,GAAG,EAAC;EACJ,EAAE,OAAO,EAAE;EACX,EAAC;AACD,AAWA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,QAAQ,IAAI;EACpC,EAAE,MAAM,QAAQ,GAAG,sBAAsB,GAAE;EAC3C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC5C,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;EACrC,GAAG;EACH,EAAE,OAAO,QAAQ;EACjB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,KAAK;EACzC,EAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC;EACrC,EAAE,OAAO,MAAM;EACf,EAAC;AACD,AAMA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAC;AAC7E,AA8BA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,EAAE,QAAQ,GAAG,EAAE;EACvD,EAAE,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAC;AAC7D,AAYA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,eAAc;AAClC,AAaA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,CAAC,IAAIC,GAAO,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;;EClM5F;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS;;ECZvC;AACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA,IAAI,KAAK,GAAG,GAAE;AACd;EACA,MAAM,SAAS,GAAG,MAAM;EACxB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,IAAI,KAAK,CAAC,CAAC,CAAC,GAAE;EACd,GAAG;EACH,EAAE,KAAK,GAAG,GAAE;EACZ,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,IAAI;EAC5B,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC;EACf,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;EAC1B,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC,EAAC;EAC5B,GAAG;EACH,CAAC;;EC5BD;EACA;EACA;EACA;EACA;AACA,AAWA;AACA,EAAO,MAAM,IAAI,GAAGC,QAAa,GAAE;AACnC,EAAO,MAAM,MAAM,GAAGA,QAAa,GAAE;AACrC,EAAO,MAAM,IAAI,GAAGA,QAAa,GAAE;AACnC,EAAO,MAAM,IAAI,GAAGA,QAAa,GAAE;AACnC,EAAO,MAAM,KAAK,GAAGA,QAAa,GAAE;AACpC,EAAO,MAAM,GAAG,GAAGA,QAAa,GAAE;AAClC,EAAO,MAAM,MAAM,GAAGA,QAAa,GAAE;AACrC,EAAO,MAAM,MAAM,GAAGA,QAAa,GAAE;AACrC,EAAO,MAAM,OAAO,GAAGA,QAAa,GAAE;AACtC;EACA;EACA;EACA;EACA,MAAM,gBAAgB,GAAG;EACzB,EAAE,CAAC,IAAI,GAAGC,QAAW,CAAC,aAAa,EAAE,MAAM,CAAC;EAC5C,EAAE,CAAC,MAAM,GAAGA,QAAW,CAAC,aAAa,EAAE,QAAQ,CAAC;EAChD,EAAE,CAAC,IAAI,GAAGA,QAAW,CAAC,OAAO,EAAE,MAAM,CAAC;EACtC,EAAE,CAAC,KAAK,GAAGA,QAAW,CAAC,OAAO,EAAE,OAAO,CAAC;EACxC,EAAE,CAAC,IAAI,GAAGA,QAAW,CAAC,OAAO,EAAE,MAAM,CAAC;EACtC,EAAE,CAAC,GAAG,GAAGA,QAAW,CAAC,OAAO,EAAE,KAAK,CAAC;EACpC,EAAE,CAAC,MAAM,GAAGA,QAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;EAC1C,EAAE,CAAC,MAAM,GAAGA,QAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;EAC1C,EAAE,CAAC,OAAO,GAAGA,QAAW,CAAC,OAAO,EAAE,OAAO,CAAC;EAC1C,EAAC;AACD;EACA,MAAM,aAAa,GAAG;EACtB,EAAE,CAAC,IAAI,GAAG,WAAW;EACrB,EAAE,CAAC,MAAM,GAAG,WAAW;EACvB,EAAE,CAAC,IAAI,GAAG,UAAU;EACpB,EAAE,CAAC,KAAK,GAAG,UAAU;EACrB,EAAE,CAAC,IAAI,GAAG,YAAY;EACtB,EAAE,CAAC,GAAG,GAAG,UAAU;EACnB,EAAE,CAAC,MAAM,GAAG,UAAU;EACtB,EAAE,CAAC,MAAM,GAAG,gBAAgB;EAC5B,EAAE,CAAC,OAAO,GAAG,SAAS;EACtB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,yBAAyB,GAAG,IAAI,IAAI;EAC1C,EAAE,MAAM,UAAU,GAAG,GAAE;EACvB,EAAE,MAAM,MAAM,GAAG,GAAE;EACnB,EAAE,MAAM,YAAY,GAAG9D,MAAU,GAAE;EACnC;EACA;EACA;EACA,EAAE,IAAI,OAAO,GAAG,GAAE;EAClB;EACA,EAAE,IAAI,CAAC,GAAG,EAAC;AACX;EACA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EACvB;EACA,IAAI,MAAM,KAAK,GAAG,gBAAgB,CAAC,GAAG,EAAC;EACvC,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;EAC7B,MAAM,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAC;EAC/C,KAAK,MAAM;EACX,MAAM,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;EACpE,QAAQ,MAAM,KAAK,GAAG+D,gBAAoB,CAAC,YAAY,EAAC;EACxD,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;EACvC,UAAU,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAC;EACrC,UAAU,MAAM,CAAC,IAAI,CAAC,KAAK,EAAC;EAC5B,SAAS,MAAM;EACf,UAAU,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC;EAC9B,SAAS;EACT,OAAO,MAAM;EACb,QAAQ,KAAK;EACb,OAAO;EACP,KAAK;EACL,GAAG;AACH;EACA,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;EACb;EACA,IAAI,OAAO,GAAG,OAAM;EACpB,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC;EACxC,GAAG;EACH;EACA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EACvB,IAAI,IAAI,EAAE,GAAG,YAAY,MAAM,CAAC,EAAE;EAClC,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG,EAAC;EACvB,KAAK;EACL,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA,MAAM,sBAAsB,GAAG,IAAI,IAAI;EACvC,EAAE,MAAM,UAAU,GAAG,GAAE;EACvB,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB;EACA;EACA,EAAE,IAAI,CAAC,GAAG,EAAC;AACX;EACA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EACvB;EACA,IAAI,MAAM,KAAK,GAAG,aAAa,CAAC,GAAG,EAAC;EACpC,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;EAC7B,MAAM,UAAU,CAAC,IAAI,CAAC,KAAK,EAAC;EAC5B,KAAK,MAAM;EACX,MAAM,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;EACpE,QAAQ,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC;EAC5B,OAAO,MAAM;EACb,QAAQ,KAAK;EACb,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;EACb;EACA,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,EAAC;EAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC;EACrC,GAAG;EACH;EACA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EACvB;EACA,IAAI,IAAI,EAAE,GAAG,YAAY,MAAM,CAAC,EAAE;EAClC,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG,EAAC;EACvB,KAAK;EACL,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA,MAAM,kBAAkB,GAAGC,MAAU,GAAG,sBAAsB,GAAG,0BAAyB;AAC1F;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,KAAK;EAClC,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAC;EAC1C;EACA,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC;EACzC,EAAC;AACD,AAUA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,GAAG,IAAI;EACjC,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,EAAC;EACpB,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,MAAM,KAAK;EACzC,EAAE,IAAIC,SAAa,EAAE;EACrB,IAAI,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,kFAAkF,EAAE,GAAG,CAAC,CAAC,CAAC,EAAC;EAC5J;EACA,GAAG;EACH,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,EAAC;EACnD,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,MAAM,EAAE,MAAM,KAAK,QAAQ,CAAC,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAC;AACrG;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,KAAK;EAClC,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAC;EAC5C;EACA,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC;EACzC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,GAAG,IAAI,KAAK;EAC3C,EAAE,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAC;EACrD;EACA,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC;EAClD,EAAC;AACD;AACA,EAAO,MAAM,QAAQ,GAAG,MAAM;EAC9B,EAAE,OAAO,CAAC,QAAQ,GAAE;EACpB;EACA,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAC;EACxC,EAAC;AACD,AAcA;AACA,EAAO,MAAM,SAAS,GAAG,IAAI,GAAG,GAAE;AAClC;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,iBAAiB,GAAG,IAAI,IAAI;EAClC,EAAE,MAAM,KAAK,GAAG,GAAE;EAClB,EAAE,MAAM,YAAY,GAAG,IAAI,GAAG,GAAE;EAChC;EACA,EAAE,IAAI,CAAC,GAAG,EAAC;EACX,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAC;EACvB;EACA,IAAI,MAAM,KAAK,GAAG,gBAAgB,CAAC,GAAG,EAAC;EACvC,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;EAC7B,MAAM,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAC;EAC/C,KAAK,MAAM;EACX,MAAM,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;EACpE;EACA,QAAQ,MAAM,IAAI,GAAGC,OAAW,CAAC,MAAM,EAAE,CAACJ,QAAW,CAAC,OAAO,EAAEC,gBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAACI,IAAQ,CAAC,GAAG,CAAC,CAAC,EAAC;EACrH,QAAQ,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;EACnC,UAAU,IAAI,CAAC,SAAS,GAAG,SAAQ;EACnC,SAAS;EACT,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC;EACxB,OAAO,MAAM;EACb,QAAQ,KAAK;EACb,OAAO;EACP,KAAK;EACL,GAAG;EACH;EACA,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC/B,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,EAAC;EACzB,IAAI,IAAI,EAAE,OAAO,YAAY,MAAM,CAAC,EAAE;EACtC,MAAM,IAAI,OAAO,CAAC,WAAW,KAAK,MAAM,IAAI,OAAO,CAAC,WAAW,KAAK,MAAM,EAAE;EAC5E,QAAQ,OAAO,GAAG,GAAG,GAAGC,SAAc,CAAC,OAAO,CAAC,GAAG,IAAG;EACrD,OAAO;EACP,MAAM,KAAK,CAAC,IAAI,CAACF,OAAW,CAAC,MAAM,EAAE,EAAE,EAAE,CAACC,IAAQ,wBAAwB,OAAO,EAAE,CAAC,CAAC,EAAC;EACtF,KAAK;EACL,GAAG;EACH,EAAE,OAAO,KAAK;EACd,EAAC;AACD;EACA,MAAM,SAAS,GAAG,qEAAoE;AACtF;EACA;AACA,EAAO,MAAM,QAAQ,CAAC;EACtB;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;EACpB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;EAClB;EACA;EACA;EACA,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAG;EAC9B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAC;EAClB,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,EAAC;EACvB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,SAAS,GAAG,KAAK,EAAE;EAClC,IAAIE,OAAiB,CAAC,MAAM;EAC5B,MAAM,MAAM,YAAY,GAAGH,OAAW,CAAC,MAAM,EAAE,CAACJ,QAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAEA,QAAW,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC,EAAE,CAACK,IAAQ,CAAC,GAAG,CAAC,CAAC,EAAC;EACvJ,MAAM,MAAM,aAAa,GAAGD,OAAW,CAAC,MAAM,EAAE,CAACJ,QAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EAAEA,QAAW,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC,EAAE,CAACK,IAAQ,CAAC,GAAG,CAAC,CAAC,EAAC;EACzJ,MAAM,MAAM,OAAO,GAAGD,OAAW,CAAC,KAAK,EAAE,CAACJ,QAAW,CAAC,OAAO,EAAE,CAAC,EAAE,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,EAAE,aAAa,EAAEK,IAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAC;EAChM,MAAM,MAAM,aAAa,GAAGD,OAAW,CAAC,KAAK,EAAE,CAACJ,QAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAC;EAClF,MAAM,MAAM,QAAQ,GAAGI,OAAW,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,EAAC;EACvE,MAAMI,MAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,EAAC;EAC7C,MAAM,IAAI,CAAC,UAAU,GAAG,cAAa;EACrC,MAAM,IAAI,CAAC,KAAK,GAAE;EAClB;EACA,MAAMC,gBAAoB,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,IAAI;EACtD,QAAQ,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAC;EAC/C,QAAQ,YAAY,CAAC,eAAe,CAAC,QAAQ,EAAC;EAC9C,QAAQ,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAC;EAC/C,OAAO,EAAC;EACR,KAAK,EAAC;EACN,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,cAAc,CAAC,CAAC,IAAI,EAAE;EACxB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAC;EAC1B,GAAG;AACH;EACA,EAAE,QAAQ,CAAC,GAAG;EACd,IAAIF,OAAiB,CAAC,MAAM;EAC5B,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;EAC1B,QAAQ,IAAI,CAAC,KAAK,GAAE;EACpB;EACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAa;EACrE,OAAO;EACP,KAAK,EAAC;EACN,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE;EACf,IAAIA,OAAiB,CAAC,MAAM;EAC5B,MAAMC,MAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAACJ,OAAW,CAAC,KAAK,EAAE,CAACJ,QAAW,CAAC,OAAO,EAAE,CAAC,EAAE,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;EAC1J,KAAK,EAAC;EACN,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE;EACnB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAC;EAC3C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE;EACzB,IAAIO,OAAiB,CAAC,MAAM;EAC5B,MAAMC,MAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAACJ,OAAW,CAAC,KAAK,EAAE,CAACJ,QAAW,CAAC,KAAK,EAAE,GAAG,CAAC,EAAEA,QAAW,CAAC,QAAQ,EAAE,CAAC,EAAErB,KAAU,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;EAC1I,KAAK,EAAC;EACN,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE;EAClB,IAAI4B,OAAiB,CAAC,MAAM;EAC5B,MAAMC,MAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,EAAC;EACzC,KAAK,EAAC;EACN,GAAG;AACH;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAID,OAAiB,CAAC,MAAM;EAC5B,MAAM,SAAS,CAAC,MAAM,CAAC,IAAI,EAAC;EAC5B,KAAK,EAAC;EACN,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,GAAG,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC;;EC/XtD;EACA;EACA;AACA,AAEA;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,CAAC;EACxB;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,OAAM;EACvB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE;EAChB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE;EAChB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC;EACf,IAAI,IAAI,CAAC,MAAM,GAAG,EAAC;EACnB,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,KAAKG,MAAa,GAAG,CAAC,CAAC;EAC1C,GAAG;EACH,CAAC;;EClCD;EACA;EACA;AACA,AAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,CAAC;EAC9B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE;EACrB,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;EACpB;EACA,IAAI,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,EAAC;EAC3C,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,EAAC;EACnC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAChC,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,GAAGA,OAAa;EACvD,KAAK;EACL,IAAI,IAAI,CAAC,MAAM,GAAG,KAAI;EACtB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,GAAG;EACV,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,MAAK;EAC5B,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EACrB,MAAM,IAAI,CAAC,MAAM,GAAG,MAAK;EACzB,MAAM,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAIA,MAAa;EAC1D,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,MAAM,GAAG,KAAI;EACxB,MAAM,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAAC;EACzB,MAAM,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAAC;EACzB,MAAM,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAE;EAC9B,MAAM,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAE;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,EAAC;EACpE,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACxD;EACA,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,GAAE;EACpC,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,GAAE;EACpC,MAAM,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAKA,MAAa,GAAG,CAAC,CAAC,CAAC;EAClE,KAAK;EACL,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;AACA;EACA;AACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE;;EC9GF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,AAMA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AACA,EAAO,MAAM,WAAW,GAAG,iBAAgB;AAC3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMjD,QAAM,GAAG,IAAI,IAAI,IAAI,WAAW,CAAC,IAAI,EAAC;AACnD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,EAAC;AAC9C,AAwCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,GAAG,EAAEkD,KAAG,EAAE,GAAG,KAAK;EACxC,EAAE,MAAM,IAAI,GAAGA,KAAG,GAAG3D,OAAa;EAClC,EAAE,MAAM,IAAI,GAAG,GAAG,GAAGA,OAAa;EAClC,EAAE,OAAOV,KAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAIQ,GAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,EAAEE,MAAa,CAAC,GAAGA,MAAa,CAAC,GAAG,IAAI,CAAC;EACnG,EAAC;AACD,AAuCA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,GAAG,IAAI;EAChC,EAAE,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAC;EACtC,EAAE,OAAO,aAAa,CAAC,SAAS,CAAC;EACjC,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,EAAE,KAAK;EACjD,EAAE,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,EAAC;EACnC,EAAE,IAAI,GAAG,GAAG,GAAE;EACd,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAChC,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,EAAC;EACzB,GAAG;EACH,EAAE,OAAO,GAAG;EACZ,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;EC9K3E;EACA;EACA;EACA;EACA;AACA,AAEA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAACV,KAAU,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAACsE,IAAS,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;AAC7L;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAACC,GAAQ,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM;;EClBlE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,AAiBA;AACA,EAAO,MAAM,SAAS,GAAGC,OAAW,CAAC,WAAW,EAAC;AACjD;EACA;AACA,EAAO,MAAM,OAAO,GAAGC,QAAY,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAACC,QAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,KAAI;AACnG;AACA,EAAO,MAAM,QAAQ,CAAC;EACtB;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE;EACrC;EACA;EACA;EACA,IAAI,IAAI,CAAC,UAAU,GAAG,WAAU;EAChC;EACA;EACA;EACA,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;EAC5B,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB,GAAG;AACH;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,IAAI,CAAC,GAAG;EACd;EACA,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC7B;EACA,MAAM,IAAI,CAAC,KAAK,GAAG,OAAO,KAAK,IAAI,GAAGjD,MAAa,EAAE,GAAG,QAAO;EAC/D,KAAK;EACL,IAAI,OAAO,IAAI,CAAC,KAAK;EACrB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,IAAI,CAAC,GAAG;EACd;EACA,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;EAC7B,MAAM,IAAI,CAAC,KAAK,GAAGkD,QAAW,CAAC,IAAI,CAAC,IAAI,EAAC;EACzC,KAAK;EACL,IAAI,OAAO,IAAI,CAAC,KAAK;EACrB,GAAG;EACH,CAAC;AACD;AACA,EAAO,MAAM,cAAc,GAAG,MAAM,CAACD,QAAY,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAC;EAC7E;EACA,MAAM,UAAU,GAAGD,QAAY,CAAC,UAAU,CAAC,GAAGC,QAAY,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,KAAI;AACjF;EACA;EACA,MAAM,gBAAgB,GAAG,UAAU,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,EAAC;AACxF;EACA,MAAM,eAAe,GAAG,wBAAuB;AAC/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,GAAG,GAAG,OAAO,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,KAAK;EACpE,EAAE,MAAM,WAAW,GAAG7E,aAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAC;EAC9D,EAAE,MAAM,QAAQ,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAC;EACtG;EACA,EAAE,IAAI,QAAQ,EAAE;EAChB,IAAI,OAAO,IAAI;EACf,GAAG;EACH,EAAE,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAC;EAC3C,EAAE,MAAM,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,WAAW,EAAC;EAClD,EAAE,MAAM,SAAS,GAAG,CAAC+E,IAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAEC,MAAU,EAAE,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,EAAEC,IAAQ,EAAE,WAAW,EAAC;EACpH;EACA,EAAE,IAAI,UAAU,KAAK,IAAI,EAAE;EAC3B,IAAIC,cAAkB,CAAC,GAAG,SAAS,EAAC;EACpC,GAAG,MAAM;EACT,IAAIC,KAAS,CAAC,GAAG,SAAS,EAAC;EAC3B,GAAG;EACH,EAAE,MAAM,KAAK,GAAG,GAAE;EAClB,EAAE,MAAM,KAAK,GAAG1D,aAAW,CAAC,GAAG,GAAE;EACjC,EAAE,IAAI,QAAQ,GAAG,MAAK;EACtB,EAAE,IAAI,GAAG,GAAG,KAAI;EAChB,EAAEA,aAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAC;EACnC,EAAE,GAAG;EACL,IAAI,IAAI;EACR,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAC;EACrB,MAAM,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,WAAW,KAAK,OAAO,EAAE;EAClD,QAAQ,MAAM,EAAC;EACf,OAAO;EACP,KAAK,CAAC,OAAO,IAAI,EAAE;EACnB,MAAM,GAAG,GAAG,KAAI;EAChB,KAAK;EACL,IAAI,MAAM,QAAQ,GAAGA,aAAW,CAAC,GAAG,GAAE;EACtC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAC;EACnC,IAAI,QAAQ,GAAG,SAAQ;EACvB,IAAI,IAAI,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,cAAc,EAAE;EACvE,MAAM,EAAE,CAAC,SAAS,GAAE;EACpB,KAAK,MAAM;EACX,MAAM,KAAK;EACX,KAAK;EACL,GAAG,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,cAAc,CAAC;EAC/D,EAAEA,aAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC;EACjC;EACA,EAAE,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;EACrD,IAAI2D,UAAc,CAAC,GAAG,EAAC;EACvB,GAAG;EACH,EAAE3D,aAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC;EAC3D,EAAE4D,QAAY,GAAE;EAChB,EAAE,MAAM,QAAQ,GAAG,QAAQ,GAAG,MAAK;EACnC,EAAE,IAAI,OAAO,GAAG,KAAI;EACpB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;EAC7B;EACA,EAAE,MAAM,YAAY,GAAGrB,SAAa;EACpC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACzG,MAAM,CAAC,uCAAuC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;EAC1G,EAAE,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI;EAC1C,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAEsB,gBAAqB,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAEA,gBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAEA,gBAAqB,CAAC1C,IAAU,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE0C,gBAAqB,CAACC,MAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAED,gBAAqB,CAACE,OAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACrS,MAAM,CAAC,IAAI,EAAEF,gBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAC;EAC9C,EAAE,IAAI,GAAG,KAAK,IAAI,EAAE;EACpB;EACA,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;EACvC,MAAMG,KAAS,CAACV,IAAQ,EAAEW,IAAQ,EAAE,WAAW,EAAEC,MAAU,EAAE,WAAW,EAAC;EACzE,KAAK,MAAM;EACX,MAAM,OAAO,GAAG,MAAK;EACrB,MAAMF,KAAS,CAACG,GAAO,EAAEF,IAAQ,EAAE,WAAW,EAAEC,MAAU,EAAEE,OAAW,EAAE,WAAW,EAAEd,IAAQ,EAAE,QAAQ,EAAE,YAAY,EAAC;EACvH,KAAK;EACL,GAAG,MAAM;EACT,IAAIU,KAAS,CAACK,KAAS,EAAEJ,IAAQ,EAAE,WAAW,EAAEC,MAAU,EAAEE,OAAW,EAAE,WAAW,EAAEd,IAAQ,EAAE,QAAQ,EAAE,YAAY,EAAC;EACvH,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,IAAI,GAAG,EAAE,KAAKU,KAAS,CAACR,IAAQ,EAAE,WAAW,EAAE,GAAG,EAAEF,IAAQ,EAAE,IAAI,EAAC;AACzG,AA+EA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,cAAc,KAAK;EAC7D,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,EAAE;EAC/B,IAAI,IAAI,CAAC,CAAC,EAAC;EACX,GAAG;EACH,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACtC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;EACzB,MAAM,IAAI,CAAC,CAAC,EAAC;EACb,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI;EACb,EAAC;AACD,AAuBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,aAAa,GAAG,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK;EACnD,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;EACf,IAAI,IAAI,CAAC,CAAC,OAAO,EAAEZ,SAAc,CAAC,CAAC,CAAC,CAAC,KAAK,EAAEA,SAAc,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,EAAC;EACtF,GAAG;EACH,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,KAAK,IAAI;EACpD,EAAE,OAAO,KAAK,IAAI;EAClB,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EACzB,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;EACtC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,KAAK;EACzD;EACA,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;EAC9B,IAAI,OAAO,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC1C,GAAG;EACH,EAAE,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;EACvC,IAAI,YAAY,CAAC,OAAO,EAAE,2BAA2B,EAAE,IAAI,EAAC;EAC5D,GAAG;EACH,EAAE,IAAI,OAAO,GAAG,KAAI;EACpB,EAAE,QAAQ,CAAC,CAAC,WAAW;EACvB,IAAI,KAAK,WAAW;EACpB,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC;EAC3B,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC;EAC3B;EACA,IAAI,KAAK,UAAU,EAAE;EACrB,MAAM,IAAI,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,EAAE;EACzC,QAAQ,YAAY,CAAC,OAAO,EAAE,2BAA2B,EAAE,IAAI,EAAC;EAChE,OAAO;EACP,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACpD,QAAQ,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;EAC1C,OAAO;EACP,MAAM,KAAK;EACX,KAAK;EACL,IAAI,KAAK,GAAG,EAAE;EACd,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;EAC7B,QAAQ,YAAY,CAAC,OAAO,EAAE,0CAA0C,EAAE,IAAI,EAAC;EAC/E,OAAO;EACP;EACA,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI;EACzB,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;EAC3B,UAAU,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAC;EACrE,SAAS;EACT,OAAO,EAAC;EACR,MAAM,KAAK;EACX,KAAK;EACL,IAAI,KAAK,GAAG,EAAE;EACd,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;EAC7B,QAAQ,YAAY,CAAC,OAAO,EAAE,0CAA0C,EAAE,IAAI,EAAC;EAC/E,OAAO;EACP;EACA,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;EAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;EACzB,UAAU,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,oCAAoC,CAAC,EAAE,IAAI,EAAC;EACrG,SAAS;EACT,QAAQ,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAC;EAChF,OAAO,EAAC;EACR,MAAM,KAAK;EACX,KAAK;EACL,IAAI,KAAK,MAAM;EACf,MAAM,IAAI4B,QAAa,CAAC,CAAC,CAAC,KAAKA,QAAa,CAAC,CAAC,CAAC,EAAE;EACjD,QAAQ,YAAY,CAAC,OAAO,EAAE,+CAA+C,EAAE,IAAI,EAAC;EACpF,OAAO;EACP,MAAMC,OAAc,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,KAAK;EACxC,QAAQ,IAAI,CAACC,WAAkB,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACzC,UAAU,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,kCAAkC,CAAC,EAAE,IAAI,EAAC;EAC3F,SAAS;EACT,QAAQ,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAC;EAC5E,OAAO,EAAC;EACR,MAAM,KAAK;EACX,IAAI,KAAK,KAAK;EACd,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;EACjC,QAAQ,YAAY,CAAC,OAAO,EAAE,8CAA8C,EAAE,IAAI,EAAC;EACnF,OAAO;EACP;EACA,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,CAAC,EAAC;EAC7F,MAAM,KAAK;EACX;EACA,IAAI;EACJ,MAAM,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE;EACpE,QAAQ,YAAY,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE9B,SAAc,CAAC,CAAC,CAAC,CAAC,KAAK,EAAEA,SAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,IAAI,EAAC;EACvG,OAAO;EACP,GAAG;EACH,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAC;EAC1B,EAAE,OAAO,IAAI;EACb,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,IAAI,EAAE,aAAa,GAAG,aAAa,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAC;AAC7H;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,MAAM,GAAG,CAAC,SAAS,EAAE,OAAO,GAAG,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,gBAAgB,EAAE,OAAO,KAAK,IAAI,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;AACnI;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,KAAK,GAAG,CAAC,IAAI;EAC1B,EAAE,IAAI,GAAG,GAAG,KAAI;EAChB,EAAE,IAAI;EACN,IAAI,CAAC,GAAE;EACP,GAAG,CAAC,OAAO,IAAI,EAAE;EACjB,IAAI,GAAG,GAAG,KAAI;EACd,IAAIsB,KAAS,CAACK,KAAS,EAAE,2BAA2B,EAAC;EACrD,GAAG;EACH;EACA,EAAE,IAAI,GAAG,KAAK,IAAI,EAAE;EACpB,IAAI,IAAI,CAAC,uBAAuB,EAAC;EACjC,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,QAAQ,GAAG,MAAM,KAAK,IAAI;EACvC,EAAE,MAAM,aAAa,GAAGI,KAAU,CAAC,KAAK,EAAE,GAAG,IAAIA,KAAU,CAAC,GAAG,EAAE,CAAC,+BAA+B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAACxB,GAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAACA,GAAQ,EAAE,CAAC,EAAC;EACpJ,EAAE,IAAI,eAAe,GAAG,EAAC;EACzB,EAAE,IAAI,UAAU,GAAG,EAAC;EACpB,EAAE,MAAM,KAAK,GAAGjD,aAAW,CAAC,GAAG,GAAE;EACjC,EAAE,KAAK,MAAM,OAAO,IAAI,KAAK,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,EAAC;EAC9B,IAAI,KAAK,MAAM,KAAK,IAAI,GAAG,EAAE;EAC7B,MAAM,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,EAAC;EAC1B;EACA,MAAM,IAAI,CAAC,EAAE;EACb,QAAQ,MAAM,cAAc,GAAG,EAAC;EAChC,QAAQ,IAAI,OAAO,GAAG,KAAI;EAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;EAC5D,UAAU,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,aAAa,EAAC;EAC3E,SAAS;EACT,QAAQ,UAAU,GAAE;EACpB;EACA,QAAQ,IAAI,OAAO,EAAE;EACrB,UAAU,eAAe,GAAE;EAC3B,SAAS;EACT,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAE,MAAM,GAAG,GAAGA,aAAW,CAAC,GAAG,GAAE;EAC/B,EAAEgE,KAAS,CAAC,EAAE,EAAC;EACf,EAAE,MAAM,OAAO,GAAG,eAAe,KAAK,cAAa;EACnD;EACA,EAAE,IAAI,OAAO,EAAE;EACf;EACA,IAAIA,KAAS,CAACK,KAAS,EAAEJ,IAAQ,EAAE,uBAAuB,EAAEX,IAAQ,EAAEY,MAAU,EAAE,CAAC,IAAI,EAAEL,gBAAqB,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,EAAC;EAC9H;EACA,IAAIa,cAAkB,CAAC,YAAY,EAAE,EAAE,EAAC;EACxC,GAAG,MAAM;EACT,IAAI,MAAM,WAAW,GAAG,aAAa,GAAG,gBAAe;EACvD,IAAIV,KAAS,CAACG,GAAO,EAAEF,IAAQ,EAAE,CAAC,EAAE,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7F,GAAG;EACH,EAAE,OAAO,OAAO;EAChB,EAAC;AACD;EACA,MAAM,SAAS,SAAS,KAAK,CAAC,EAAE;AAChC;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,MAAM,IAAI;EAC9B,EAAED,KAAS,CAACG,GAAO,EAAEF,IAAQ,EAAE,IAAI,EAAEC,MAAU,EAAE,MAAM,EAAC;EACxD,EAAE,MAAM,IAAI,SAAS,CAAC,aAAa,CAAC;EACpC,EAAC;AACD;EACA,MAAM,SAAS,SAAS,KAAK,CAAC,EAAE;AAChC;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK;EACrC,EAAE,IAAI,IAAI,EAAE;EACZ,IAAI,MAAM,IAAI,SAAS,CAAC,YAAY,CAAC;EACrC,GAAG;EACH,EAAC;AACD;EACA;EACA,MAAM,YAAY,GAAG,0zSAA0zS;;ECriB/0S;EACA;EACA;AACA,AAIA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AACA,EAAO,MAAM,mBAAmB,GAAG,EAAC;AACpC,EAAO,MAAM,mBAAmB,GAAG,EAAC;AACpC,EAAO,MAAM,gBAAgB,GAAG,EAAC;AACjC;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;EAChD,EAAE1E,YAAqB,CAAC,OAAO,EAAE,mBAAmB,EAAC;EACrD,EAAE,MAAM,EAAE,GAAGmF,iBAAmB,CAAC,GAAG,EAAC;EACrC,EAAElD,kBAA2B,CAAC,OAAO,EAAE,EAAE,EAAC;EAC1C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,kBAAkB,KAAK;EACpE,EAAEjC,YAAqB,CAAC,OAAO,EAAE,mBAAmB,EAAC;EACrD,EAAEiC,kBAA2B,CAAC,OAAO,EAAEmD,mBAAqB,CAAC,GAAG,EAAE,kBAAkB,CAAC,EAAC;EACtF,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG;EACnD,EAAE,cAAc,CAAC,OAAO,EAAE,GAAG,EAAEjD,iBAA0B,CAAC,OAAO,CAAC,EAAC;AACnE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,KAAK;EAClE,EAAEkD,WAAa,CAAC,GAAG,EAAElD,iBAA0B,CAAC,OAAO,CAAC,EAAE,iBAAiB,EAAC;EAC5E,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;EAChD,EAAEnC,YAAqB,CAAC,OAAO,EAAE,gBAAgB,EAAC;EAClD,EAAEiC,kBAA2B,CAAC,OAAO,EAAE,MAAM,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMqD,YAAU,GAAG,cAAa;AACvC;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,iBAAiB,KAAK;EAC7E,EAAE,MAAM,WAAW,GAAGrF,WAAoB,CAAC,OAAO,EAAC;EACnD,EAAE,QAAQ,WAAW;EACrB,IAAI,KAAK,mBAAmB;EAC5B,MAAM,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAC;EAC1C,MAAM,KAAK;EACX,IAAI,KAAK,mBAAmB;EAC5B,MAAM,aAAa,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;EACpD,MAAM,KAAK;EACX,IAAI,KAAK,gBAAgB;EACzB,MAAMqF,YAAU,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;EACjD,MAAM,KAAK;EACX,IAAI;EACJ,MAAM,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC;EAC7C,GAAG;EACH,EAAE,OAAO,WAAW;EACpB,CAAC;;EC3GD;EACA;EACA;EACA;EACA,MAAM,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;EACnC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;EAC/B,IAAI,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,IAAI;EAChD,MAAM,IAAI,eAAe,KAAK,CAAC,EAAE;EACjC,QAAQ,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAC;EACtC,OAAO;EACP,KAAK,EAAC;EACN,GAAG;EACH,EAAC;AACD;AACA,EAAO,MAAM,aAAa,SAAS,GAAG,CAAC;EACvC;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE;EACxC,IAAI,KAAK,GAAE;EACX,IAAI,IAAI,CAAC,MAAM,GAAG,SAAQ;EAC1B;EACA;EACA;EACA,IAAI,IAAI,CAAC,EAAE,GAAG,cAAa;EAC3B;EACA;EACA;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAE;EAC9B,IAAI,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAC;EACpC;EACA,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,wDAAwD,CAAC,MAAM,EAAE,MAAM,KAAK;EAChG,MAAM,IAAI,MAAM,KAAK,aAAa,EAAE;EACpC,QAAQ,MAAM,OAAO,GAAGpF,aAAsB,GAAE;EAChD,QAAQqF,WAAwB,CAAC,OAAO,EAAE,MAAM,EAAC;EACjD,QAAQ,gBAAgB,CAAC,IAAI,EAAEnF,YAAqB,CAAC,OAAO,CAAC,EAAC;EAC9D,OAAO;EACP,KAAK,EAAC;EACN,IAAI,IAAI,CAAC,OAAO,GAAE;EAClB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,UAAU,CAAC,GAAG;EAChB,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,GAAE;EAC9B,IAAI,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAC;EACpC,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;EACxC,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAC;EACnC,MAAM,MAAM,OAAO,GAAGF,aAAsB,GAAE;EAC9C,MAAMsF,cAA2B,CAAC,OAAO,EAAE,IAAI,EAAC;EAChD;EACA,MAAM,gBAAgB,CAAC,IAAI,EAAEpF,YAAqB,CAAC,OAAO,CAAC,EAAC;EAC5D,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,IAAI;EACrD,QAAQ,IAAI,eAAe,KAAK,IAAI,EAAE;EACtC;EACA,UAAU,MAAM,OAAO,GAAGF,aAAsB,GAAE;EAClD,UAAUsF,cAA2B,CAAC,OAAO,EAAE,eAAe,EAAC;EAC/D,UAAU,IAAI,CAAC,QAAQ,CAACpF,YAAqB,CAAC,OAAO,CAAC,EAAE,eAAe,EAAC;EACxE,SAAS;EACT,OAAO,EAAC;EACR,KAAK;EACL,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,QAAQ,CAAC,CAAC,OAAO,EAAE,YAAY,EAAE;EACnC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAC;EACnD,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;EAChC,MAAM,QAAQ,GAAG,GAAE;EACnB,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAC;EAChD,KAAK;EACL,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAC;EAC1B,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,CAAC;EAC3B;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;EACpB;EACA;EACA;EACA,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAE;EAC7B;EACA;EACA;EACA,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,GAAE;EAChC;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAG;EACnB,GAAG;AACH;EACA;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;EACrB,IAAI,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC;EAC5C,GAAG;AACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,kBAAkB,CAAC,GAAG;EACxB,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,KAAI;EACzB,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,EAAC;EACtF,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;EAC1B,MAAM,MAAM,QAAQ,GAAGqF,KAAU,CAAC,GAAG,EAAE,KAAK,EAAC;EAC7C,MAAM,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAGA,KAAU,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC;EAChF,MAAM,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAE;EAChC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;EACjC,QAAQ,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAC;EACzC,OAAO;EACP,MAAM,IAAI,CAAC,KAAK,SAAS,EAAE;EAC3B,QAAQ,OAAO,IAAI,CAAC,kBAAkB,EAAE;EACxC,OAAO;EACP,MAAM,MAAM,OAAO,GAAGvF,aAAsB,GAAE;EAC9C;EACA;EACA,MAAMwF,eAA4B,CAACvF,aAAsB,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAC;EAC7F,MAAM,IAAIwF,MAAe,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;EACxC;EACA,QAAQ,MAAM,CAAC,QAAQ,CAACvF,YAAqB,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAC;EACjE,OAAO;EACP,MAAM,OAAO,IAAI;EACjB,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,gBAAgB,CAAC,GAAG;EACtB,IAAI,IAAI,YAAY,GAAG,MAAK;EAC5B,IAAI,OAAO,IAAI,CAAC,kBAAkB,EAAE,EAAE;EACtC,MAAM,YAAY,GAAG,KAAI;EACzB,KAAK;EACL,IAAI,OAAO,YAAY;EACvB,GAAG;AACH;EACA,EAAE,YAAY,CAAC,GAAG;EAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,EAAC;EACjD,GAAG;AACH;EACA,EAAE,aAAa,CAAC,GAAG;EACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE,EAAC;EACpD,GAAG;AACH;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,IAAI,CAAC,YAAY,GAAE;EACvB,IAAI,IAAI,CAAC,gBAAgB,GAAE;EAC3B,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,gBAAgB,CAAC,GAAG;EACtB,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE;EACrC,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,IAAIqF,KAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,GAAE;EACpE,IAAI,OAAO,IAAI;EACf,GAAG;AACH;EACA;EACA;EACA;EACA,EAAE,eAAe,CAAC,GAAG;EACrB;EACA;EACA;EACA,IAAI,MAAM,aAAa,GAAG,GAAE;EAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI;EAClC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;EACvC,QAAQ,aAAa,CAAC,IAAI,CAAC,IAAI,EAAC;EAChC,OAAO;EACP,KAAK,EAAC;EACN,IAAI,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;EACpC,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,IAAIA,KAAU,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,OAAO,GAAE;EAClD,IAAI,OAAO,IAAI;EACf,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,cAAc,KAAK;EAChE;EACA;EACA;EACA,EAAE,MAAM,MAAM,GAAG;EACjB,IAAI,KAAK,EAAE,EAAE;EACb,IAAG;EACH,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,KAAI;EACrB,EAAE,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,GAAG,EAAC;EAC9C,EAAE,MAAM,CAAC,aAAa,GAAG,cAAa;EACtC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;EAClC,IAAI,MAAM,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,EAAC;EACtC,IAAI,CAAC,CAAC,QAAQ,GAAG,EAAC;EAClB,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC;EACxB,IAAI,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAEG,MAAO,EAAC;EACjD,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAEC,IAAK,EAAC;EAC3C,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAEC,WAAY,EAAC;EAClD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAEC,KAAM,EAAC;EAC9C,GAAG;EACH,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,KAAK,MAAM,IAAI,CAAC,EAAC;EACvE,EAAE,2BAA2B,MAAM,CAAC;EACpC,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAMC,SAAO,GAAG,KAAK,IAAI;EAChC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAC;EACjC,EAAE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAE,EAAE,EAAE;EAC3C,EAAE,MAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAC;EACtE,EAAE,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,EAAC;EAChE,EAAE,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,EAAEF,WAAY,CAAC,CAAC,QAAQ,EAAE,EAAC;EAC7E,EAAE,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAC;EACpE,EAAE,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;EACzB,IAAIG,MAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,MAAM,KAAK,CAAC,EAAC;EACvD,IAAIA,MAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAC;EAC/C,IAAIA,MAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,KAAK,CAAC,EAAC;EACzD,GAAG;EACH;EACA,EAAEC,OAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAC;EACzF;EACA,EAAE,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAC;EAC5D,EAAED,MAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;EACpE,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAIA,MAAQ,CAACjB,WAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAC;EAC9E;EACA;EACA;EACA,EAAE,MAAM,MAAM,GAAG,GAAE;EACnB,EAAE,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;EAC/C,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,YAAYmB,YAAc,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAC;EAC5D,GAAG;EACH,EAAED,OAAS,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,MAAM,EAAC;EACrC;EACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAC7C,IAAIA,OAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC;EAC3E,IAAIA,OAAS,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;EACzD,IAAIA,OAAS,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;EACrD,IAAIA,OAAS,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;EACrD,IAAIA,OAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAC;EAC/J,IAAIA,OAAS,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;EACvD,IAAIA,OAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAC;EACjF,IAAI,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,8BAA8B,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAC;EACjH,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAC;EAC3D,GAAG;EACH,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAC;EAC7B,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAIE,UAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAC;AACxG;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;EACjD,EAAEH,MAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC;EACjD,EAAE,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE;EAChD,IAAI,MAAM,QAAQ,2CAA2C,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EACrF,IAAIA,MAAQ,CAAC,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAC;EAC3E,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC9C,MAAM,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAC;EAC5B,MAAM,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAC;EAC5B;EACA,MAAM;EACN,QAAQ,EAAE,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW;EACzC,QAAQ,CAACG,UAAY,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;EACnC,QAAQ,EAAE,CAAC,OAAO,KAAK,EAAE,CAAC,OAAO;EACjC,QAAQ,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM;EAC/B,QAAQ;EACR,QAAQC,IAAM,CAAC,oBAAoB,EAAC;EACpC,OAAO;EACP,MAAM,IAAI,EAAE,YAAY,IAAI,EAAE;EAC9B,QAAQ;EACR,UAAU,EAAE,EAAE,YAAY,IAAI,CAAC;EAC/B,UAAU,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,IAAID,UAAY,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EAC7I,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC;EAC7C,UAAU,CAACA,UAAY,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC;EAC7C,UAAU,CAACA,UAAY,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC;EACvD,UAAU,EAAE,CAAC,SAAS,KAAK,EAAE,CAAC,SAAS;EACvC,UAAU;EACV,UAAU,OAAOC,IAAM,CAAC,kBAAkB,CAAC;EAC3C,SAAS;EACT;EACA,QAAQJ,MAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,EAAC;EAC1D,QAAQA,MAAQ,CAAC,EAAE,CAAC,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,EAAC;EAC3D,QAAQA,MAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,EAAC;EAC1D,QAAQA,MAAQ,CAAC,EAAE,CAAC,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,EAAC;EAC3D,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;EACvC,EAAEA,MAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC;EACjD,EAAE,KAAK,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE;EACpD,IAAI,MAAM,YAAY,qCAAqC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;EACnF,IAAIA,MAAQ,CAAC,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAC;EACvF,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAClD,MAAM,MAAM,GAAG,GAAG,YAAY,CAAC,CAAC,EAAC;EACjC,MAAM,MAAM,GAAG,GAAG,YAAY,CAAC,CAAC,EAAC;EACjC,MAAM,IAAI,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE;EAC1D,QAAQI,IAAM,CAAC,uBAAuB,EAAC;EACvC,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,cAAc,KAAK;EAC1E,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,KAAI;EACrB,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,cAAc,EAAC;EACvD,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,OAAM;EACzC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;EACvC,IAAI,IAAIC,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;EACtC;EACA,MAAM,IAAIC,IAAS,CAAC,GAAG,CAAC,EAAE;EAC1B,QAAQ,aAAa,CAAC,gBAAgB,GAAE;EACxC,OAAO,MAAM;EACb,QAAQ,aAAa,CAAC,eAAe,GAAE;EACvC,OAAO;EACP,KAAK,MAAM,IAAID,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;EAC7C;EACA,MAAM,aAAa,CAAC,gBAAgB,GAAE;EACtC,KAAK,MAAM,IAAIA,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE;EAC9C;EACA,MAAM,aAAa,CAAC,kBAAkB,GAAE;EACxC,KAAK;EACL,IAAI,MAAM,IAAI,GAAGA,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;EACrD,IAAI,MAAM,IAAI,GAAGb,KAAU,CAAC,GAAG,EAAE,IAAI,EAAC;EACtC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC;EACpD,GAAG;EACH,EAAEO,SAAO,CAAC,KAAK,EAAC;EAChB,EAAE,OAAO,MAAM;EACf,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECxZD;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,EAAE,IAAI;EACtC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAEQ,QAAU,CAAC,4DAA4D,EAAC;EAC1E,EAAEC,KAAO,CAAC,MAAM;EAChB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACvB,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC;EACzB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAED,QAAU,CAAC,kEAAkE,EAAC;EAChF,EAAER,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,uCAAuC,GAAG,EAAE,IAAI;EAC7D,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACzE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAC;EACpC,EAAEE,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,iBAAiB,EAAC;EACjE,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,4BAA4B,EAAC;EAC5E,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,sCAAsC,GAAG,EAAE,IAAI;EAC5D,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACvB,EAAEA,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,4CAA4C,GAAG,EAAE,IAAI;EAClE,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjF,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;EACnC,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC;EAClB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACvB,EAAEA,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,wBAAwB,GAAG,EAAE,IAAI;EAC9C,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjF,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;EAC9B,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,2CAA2C,GAAG,EAAE,IAAI;EACjE,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACvE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;EAC9B,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAEE,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,EAAC;EACjD,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,EAAC;EACjD,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,EAAE,IAAI;EAC7C,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACzE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAC;EAC9B,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAEA,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACzE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;EACnC,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAEA,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,yBAAyB,GAAG,EAAE,IAAI;EAC/C,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD;EACA;EACA;EACA,EAAE,IAAI,KAAK,GAAG,KAAI;EAClB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC7B,EAAEC,MAAQ,CAAC,KAAK,KAAK,IAAI,EAAC;EAC1B,EAAE,KAAK,GAAG,KAAI;EACd,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC;EAClB,EAAEA,MAAQ,CAAC,KAAK,KAAK,IAAI,EAAC;EAC1B,EAAE,KAAK,GAAG,KAAI;EACd,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAEA,MAAQ,CAAC,KAAK,KAAK,IAAI,EAAC;EAC1B,EAAE,KAAK,GAAG,KAAI;EACd,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,wBAAwB,GAAG,EAAE,IAAI;EAC9C,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD;EACA;EACA;EACA,EAAE,MAAM,IAAI,GAAG,GAAE;EACjB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;EAC7B;EACA;EACA,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EAC3B,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC;EAClB,KAAK,MAAM;EACX;EACA,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC;EAClB,KAAK;EACL,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACvB,EAAEU,aAAe,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;EAC/B,EAAEA,aAAe,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;EAC3C,EAAEV,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD;EACA;EACA;EACA,EAAE,IAAI,KAAK,GAAG,KAAI;EAClB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAIJ,MAAO,EAAE,CAAC,EAAC;EACnC,EAAEK,MAAQ,CAAC,KAAK,KAAK,IAAI,EAAC;EAC1B,EAAE,KAAK,GAAG,KAAI;EACd,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC;EAClB,EAAEA,MAAQ,CAAC,KAAK,KAAK,IAAI,EAAC;EAC1B,EAAE,KAAK,GAAG,KAAI;EACd,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,EAAE,IAAI;EACrC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD;EACA;EACA;EACA,EAAE,IAAI,OAAO,GAAG,KAAI;EACpB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAO;EACvB,GAAG,EAAC;EACJ,EAAE,MAAM,MAAM,GAAG,IAAIJ,MAAO,GAAE;EAC9B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,EAAC;EACvC,EAAEK,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,EAAC;EACtF,EAAEC,OAAS,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAC;EAC7D,EAAE,OAAO,GAAG,KAAI;EAChB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAED,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,EAAC;EACtF,EAAEC,OAAS,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAC;EAC3C,EAAE,OAAO,GAAG,KAAI;EAChB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC;EACzB,EAAED,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,EAAC;EACtF,EAAEC,OAAS,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAC;EAC9D,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kCAAkC,GAAG,EAAE,IAAI;EACxD,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD;EACA;EACA;EACA,EAAE,MAAM,MAAM,GAAG,GAAE;EACnB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC;EAClB,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAIH,IAAK,EAAE,CAAC,EAAC;EACvC,EAAEI,MAAQ,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,+DAA+D,EAAC;EAChG,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC;EAClB,EAAEA,MAAQ,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,8CAA8C,EAAC;EAC/E,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;AACA,EAAO,MAAM,yCAAyC,GAAG,EAAE,IAAI;EAC/D,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD,EAAE,IAAI,KAAK,GAAG,MAAK;EACnB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,MAAM,MAAM,GAAG,IAAIH,IAAK,GAAE;EAC9B,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM;EACzB,MAAM,KAAK,GAAG,KAAI;EAClB,KAAK,EAAC;EACN,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAC;EAC9B,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAC;EACzB,GAAG,EAAC;EACJ,EAAEI,MAAQ,CAAC,CAAC,KAAK,EAAE,wBAAwB,EAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,oBAAoB,GAAG,EAAE,IAAI;EAC1C,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;EACnC,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;EACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,oCAAoC,GAAG,EAAE,IAAI;EAC1D,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClD;EACA;EACA;EACA,EAAE,IAAI,MAAK;EACX,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAEC,MAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE,oCAAoC,EAAC;EACzE,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,qCAAqC,GAAG,EAAE,IAAI;EAC3D,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACzE;EACA;EACA;EACA,EAAE,IAAI,MAAK;EACX,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;EACtB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAC;EAC7B,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEC,MAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE,oCAAoC,EAAC;EACzE,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,MAAM,CAAC,GAAG,IAAIW,GAAK,GAAE;EACvB,EAAE,MAAM,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAC;EAC/B,EAAE,MAAM,QAAQ,GAAG,GAAE;EACrB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;EACrC,IAAI,MAAM,GAAG,GAAG,IAAId,IAAK,GAAE;EAC3B,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;EACvB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC;EACnB,GAAG;EACH,EAAE,IAAI,GAAG,GAAG,EAAC;EACb,EAAE,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE;EAC1B,IAAII,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE,kBAAkB,EAAC;EAC7D,GAAG;EACH,EAAE,CAAC,CAAC,OAAO,GAAE;EACb,EAAC;AACD;EACA,IAAI,aAAa,GAAG,EAAC;EACrB,MAAM,eAAe,GAAG,MAAM,aAAa,GAAE;AAC7C;EACA;EACA;EACA;EACA,MAAM,iBAAiB,GAAG;EAC1B,EAAE,SAAS,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;EAC9B,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAC;EACzC,IAAI,IAAI,YAAY,GAAG,eAAe,GAAE;EACxC,IAAI,IAAI,OAAO,GAAG,GAAE;EACpB,IAAI,IAAI,GAAG,GAAGK,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAC;EACnC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EAClC,MAAM,OAAO,CAAC,IAAI,CAAC,YAAY,EAAC;EAChC,KAAK;EACL,IAAI,IAAI,GAAG,GAAGA,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAC;EAC/C,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,EAAC;EAC/B,GAAG;EACH,EAAE,SAAS,eAAe,EAAE,IAAI,EAAE,GAAG,EAAE;EACvC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAC;EACzC,IAAI,IAAI,GAAG,GAAGA,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAC;EAC/C,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAIV,MAAO,EAAE,CAAC,EAAC;EACvC,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAC;EAChC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAClC,GAAG;EACH,EAAE,SAAS,aAAa,EAAE,IAAI,EAAE,GAAG,EAAE;EACrC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAC;EACzC,IAAI,IAAI,GAAG,GAAGU,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAC;EAC/C,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAIT,IAAK,EAAE,CAAC,EAAC;EACrC,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAC;EAC7B,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,EAAC;EAC3B,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,EAAC;EAC3B,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,EAAC;EAC3B,GAAG;EACH,EAAE,SAAS,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE;EAC/B,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAC;EACzC,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,OAAM;EAC9B,IAAI,IAAI,MAAM,GAAG,CAAC,EAAE;EACpB,MAAM,IAAI,OAAO,GAAGS,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,CAAC,EAAC;EAClD,MAAM,IAAI,SAAS,GAAGA,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE5G,GAAQ,CAAC,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,EAAC;EACvE,MAAM,IAAI6G,IAAS,CAAC,GAAG,CAAC,EAAE;EAC1B,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,EAAC;EACtC,QAAQ,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;EAC7B,UAAU,OAAO,GAAGD,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;EACvD,UAAU,SAAS,GAAGA,KAAU,CAAC,GAAG,EAAE,CAAC,EAAE5G,GAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,EAAC;EAC5E,UAAU,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAC;EACzC,SAAS;EACT,OAAO,MAAM;EACb,QAAQ,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAC;EACzC,OAAO;EACP,KAAK;EACL,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gCAAgC,GAAG,EAAE,IAAI;EACtD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,CAAC,EAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kCAAkC,GAAG,EAAE,IAAI;EACxD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,GAAG,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kCAAkC,GAAG,EAAE,IAAI;EACxD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,GAAG,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kCAAkC,GAAG,EAAE,IAAI;EACxD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,GAAG,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kCAAkC,GAAG,EAAE,IAAI;EACxD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,GAAG,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,EAAE,IAAI;EACzD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAC;EAC/C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,EAAE,IAAI;EACzD,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAC;EAC/C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,EAAE,IAAI;EACzD,EAAEkH,IAAM,CAAC,CAACC,UAAY,EAAC;EACvB,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAC;EAC/C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,EAAE,IAAI;EACzD,EAAED,IAAM,CAAC,CAACC,UAAY,EAAC;EACvB,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAC;EAC/C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,oCAAoC,GAAG,EAAE,IAAI;EAC1D,EAAED,IAAM,CAAC,CAACC,UAAY,EAAC;EACvB,EAAE,gBAAgB,CAAC,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAC;EAChD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECneD;EACA;EACA;AACA,EAAO,MAAM,iBAAiB,GAAG,EAAE,IAAI;EACvC,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC3E,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE;AACvB;EACA,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAC;EACvB,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAC;EAC/B,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;EAChD,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAIhB,IAAK,EAAE,EAAC;EAChC,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAC;EAC5B,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,EAAC;EAC7B,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAC;EAC/B,EAAE,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,IAAID,MAAO,EAAE,EAAC;EACnC,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,EAAC;EAClC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;EACtB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC;AACvB;EACA,EAAEK,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,uCAAuC,EAAC;EAC7E,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE,uCAAuC,EAAC;EACrF,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,KAAK,EAAE,wCAAwC,EAAC;EACpF,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,wCAAwC,EAAC;EACnF,EAAEC,OAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,uCAAuC,EAAC;EACpG,EAAED,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,qCAAqC,EAAC;AACjG;EACA,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE;EACpB,EAAE,aAAa,CAAC,gBAAgB,GAAE;AAClC;EACA,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,uCAAuC,EAAC;EAC7E,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE,uCAAuC,EAAC;EACrF,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,KAAK,EAAE,wCAAwC,EAAC;EACpF,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,wCAAwC,EAAC;EACnF,EAAEC,OAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,uCAAuC,EAAC;EACpG,EAAED,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,qCAAqC,EAAC;AACjG;EACA;EACA,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,0DAA0D,EAAC;EAChG,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE,0DAA0D,EAAC;EACxG,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,KAAK,EAAE,wCAAwC,EAAC;EACpF,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,wCAAwC,EAAC;EACnF,EAAEC,OAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,0DAA0D,EAAC;EACvH,EAAED,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,wDAAwD,EAAC;EACpH,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,0BAA0B,GAAG,EAAE,IAAI;EAChD,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC/D,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAC;EAC7B,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,EAAC;EAClC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAC;EACxB,EAAEE,OAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAC;AACxC;EACA,EAAE,aAAa,CAAC,gBAAgB,GAAE;AAClC;EACA,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;EAC5B,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;EAChC,IAAIA,OAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAC;EACvC,IAAID,MAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,SAAS,EAAE,WAAW,EAAC;EAC3D,IAAIC,OAAS,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAC;EAC1C,GAAG;EACH,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gBAAgB,GAAG,EAAE,IAAI;EACtC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAIH,IAAK,EAAE,EAAC;EAC1C,EAAEI,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAC;EACnC,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAC;EACnB,EAAEC,OAAS,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAC;EAC9B,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kBAAkB,GAAG,EAAE,IAAI;EACxC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAIJ,MAAO,EAAE,EAAC;EAChD,EAAEK,MAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC;EACvC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC5B;EACA,EAAEC,OAAS,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAC;EAChD,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC/D,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAC;EAC7B,EAAEE,OAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAC;EACxC,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;EAC9B,IAAIA,OAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAC;EACvC,GAAG;EACH,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,sCAAsC,GAAG,EAAE,IAAI;EAC5D,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACrE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;EAC9B,IAAIE,OAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,EAAC;EACnC,GAAG;EACH,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,EAAE,IAAI;EACzD,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACrE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC;EACtB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;EAC9B,IAAIC,MAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,SAAS,EAAC;EAC1C,GAAG;EACH,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,4CAA4C,GAAG,EAAE,IAAI;EAClE,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC3E,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;EAC9B,IAAIE,OAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,EAAC;EACnC,GAAG;EACH,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,qDAAqD,GAAG,EAAE,IAAI;EAC3E,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjF,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,EAAC;EAC/B,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAC;EACzB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC;EACtB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC;EAC9B,IAAIC,MAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,SAAS,EAAC;EAC1C,GAAG;EACH,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,yBAAyB,GAAG,EAAE,IAAI;EAC/C,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC3E,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAIH,IAAK,EAAE,EAAC;EAC5C,EAAE,IAAI,KAAK,GAAG,EAAC;EACf,EAAE,IAAI,OAAM;EACZ,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI;EAC7B,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI;EAC5B,MAAM,KAAK,GAAE;EACb;EACA,MAAMI,MAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,EAAC;EAChD,MAAMA,MAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;EACvC,MAAMA,MAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,EAAC;EACvC;EACA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAE;EACnD,KAAK,EAAC;EACN,GAAG,EAAC;EACJ,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC;EAC/B,EAAE,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,IAAIJ,IAAK,EAAE,EAAC;EACnC,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC;EAC/B,EAAE,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,IAAIA,IAAK,EAAE,EAAC;EACnC,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,EAAC;EACpC,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,EAAC;EACpC,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,EAAC;EACpC,EAAEI,MAAQ,CAAC,KAAK,GAAG,CAAC,EAAC;EACrB,EAAEA,MAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAC;EACtD,EAAEA,MAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAC;EACtD;EACA,EAAEA,MAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAC;EAC9C,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,6BAA6B,GAAG,EAAE,IAAI;EACnD,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD;EACA;EACA;EACA,EAAE,MAAM,MAAM,GAAG,GAAE;EACnB,EAAE,IAAI,KAAK,GAAG,EAAC;EACf,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI;EAC7B,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI;EAC5B,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAC;EAC7B,KAAK,EAAC;EACN,IAAI,KAAK,GAAE;EACX,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAIH,IAAK,EAAE,EAAC;EAC9B,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,IAAID,MAAO,EAAE,EAAC;EAC7C,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAC;EACrD,EAAEK,MAAQ,CAAC,KAAK,KAAK,CAAC,EAAC;EACvB,EAAEC,OAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAC;EACpD,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,MAAM,KAAK;EACrC,EAAE,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;EAC1B,IAAIE,OAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAC;EACnC,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,qCAAqC,GAAG,EAAE,IAAI;EAC3D,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD;EACA;EACA;EACA,EAAE,IAAI,KAAK,GAAG,GAAE;EAChB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EACpB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;EACtB,EAAE,YAAY,CAAC,KAAK,EAAE;EACtB,IAAI,MAAM,EAAE,IAAI;EAChB,IAAI,WAAW,EAAE,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;EACnC,GAAG,EAAC;EACJ;EACA,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAIN,MAAO,EAAE,EAAC;EAClC,EAAE,YAAY,CAAC,KAAK,EAAE;EACtB,IAAI,MAAM,EAAE,IAAI;EAChB,IAAI,WAAW,EAAE,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;EACnC,GAAG,EAAC;EACJ;EACA,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;EACtB;EACA,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC;EACtB,EAAE,YAAY,CAAC,KAAK,EAAE;EACtB,IAAI,WAAW,EAAE,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;EACnC,IAAI,MAAM,EAAE,IAAI;EAChB,GAAG,EAAC;EACJ,EAAEI,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAMc,iBAAe,GAAG,EAAE,IAAI;EACrC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD;EACA;EACA;EACA,EAAE,IAAI,OAAO,GAAG,KAAI;EACpB;EACA;EACA;EACA,EAAE,IAAI,SAAS,GAAG,KAAI;EACtB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EACpB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAO;EACvB,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EAClB,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EACnC,EAAEb,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,KAAK,IAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,EAAC;EAC9F,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EAClB,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EACnC,EAAEA,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,QAAQ,IAAI,SAAS,CAAC,QAAQ,KAAK,CAAC,EAAC;EACzF,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,GAAG,EAAC;EACJ,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EACnC,EAAEA,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,QAAQ,IAAI,SAAS,CAAC,QAAQ,KAAK,CAAC,EAAC;EACzF,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,GAAG,EAAC;EACJ,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EACnC,EAAEA,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,KAAK,IAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,EAAC;EAC9F,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAC;EACpB,GAAG,EAAC;EACJ,EAAEA,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EAAC;EACvD,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EACpB,GAAG,EAAC;EACJ,EAAE,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC;EACnC,EAAEA,MAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,KAAK,IAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,EAAC;EAC9F,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gDAAgD,GAAG,EAAE,IAAI;EACtE,EAAE,MAAM,GAAG,GAAG,IAAIW,GAAK,GAAE;EACzB,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAC;AAC/B;EACA,EAAE,IAAI,YAAY,GAAG,MAAK;EAC1B,EAAE,IAAI,sBAAsB,GAAG,MAAK;EACpC,EAAE,IAAI,0BAA0B,GAAG,MAAK;EACxC,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM;EACzB,IAAI,YAAY,GAAG,KAAI;EACvB,GAAG,EAAC;AACJ;EACA,EAAE,MAAM,gBAAgB,GAAG,MAAM;EACjC,IAAI,sBAAsB,GAAG,KAAI;EACjC,IAAI,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC;EAC9B,IAAG;AACH;EACA,EAAE,MAAM,oBAAoB,GAAG,MAAM;EACrC,IAAI,0BAA0B,GAAG,KAAI;EACrC,IAAI,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC;EAC9B,IAAG;AACH;EACA,EAAE,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAC;EAC/B,EAAE,GAAG,CAAC,WAAW,CAAC,oBAAoB,EAAC;AACvC;EACA,EAAEF,KAAO,CAAC,MAAM;EAChB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAC;EACrB,GAAG,EAAC;AACJ;EACA,EAAER,MAAQ,CAAC,YAAY,EAAC;EACxB,EAAEA,MAAQ,CAAC,sBAAsB,EAAC;EAClC,EAAEA,MAAQ,CAAC,0BAA0B,EAAC;AACtC;EACA;EACA,EAAE,YAAY,GAAG,MAAK;EACtB,EAAE,sBAAsB,GAAG,MAAK;EAChC,EAAE,0BAA0B,GAAG,MAAK;EACpC,EAAEQ,KAAO,CAAC,MAAM;EAChB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAC;EACrB,GAAG,EAAC;AACJ;EACA,EAAER,MAAQ,CAAC,YAAY,EAAC;EACxB,EAAEA,MAAQ,CAAC,sBAAsB,EAAC;EAClC,EAAEA,MAAQ,CAAC,0BAA0B,EAAC;AACtC;EACA,EAAEA,MAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,EAAC;EAChC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iDAAiD,GAAG,EAAE,IAAI;EACvE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD;EACA;EACA;EACA,EAAE,IAAI,KAAK,GAAG,GAAE;EAChB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EACpB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;EACtB,EAAEC,OAAS,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC;EACtD,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,8DAA8D,GAAG,EAAE,IAAI;EACpF,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACrE;EACA;EACA;EACA,EAAE,IAAI,KAAK,GAAG,GAAE;EAChB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EACpB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAC;EACtB,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEE,OAAS,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC;EACtD,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;EACA,MAAM,eAAe,GAAG;EACxB,EAAE,SAAS,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;EAC3B,IAAI,MAAM,GAAG,GAAGP,KAAU,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;EAC/C,IAAI,IAAI,KAAK,GAAGsB,WAAgB,CAAC,GAAG,EAAC;EACrC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAC;EACtC,GAAG;EACH,EAAE,SAAS,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAGtB,KAAU,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;EAC/C,IAAI,IAAI,IAAI,GAAGA,KAAU,CAAC,GAAG,EAAE,CAAC,IAAIG,MAAO,EAAE,EAAE,IAAIC,IAAK,EAAE,CAAC,EAAC;EAC5D,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAC;EACrC,IAAI,IAAI,IAAI,YAAYD,MAAO,EAAE;EACjC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAClC,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,EAAC;EACtC,KAAK;EACL,GAAG;EACH,EAAE,SAAS,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE;EAC/B,IAAI,MAAM,GAAG,GAAGH,KAAU,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;EAC/C,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAC;EAClC,GAAG;EACH,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,+BAA+B,GAAG,EAAE,IAAI;EACrD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAC;EAC3C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gCAAgC,GAAG,EAAE,IAAI;EACtD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,GAAG,EAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gCAAgC,GAAG,EAAE,IAAI;EACtD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,GAAG,EAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gCAAgC,GAAG,EAAE,IAAI;EACtD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,GAAG,EAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,gCAAgC,GAAG,EAAE,IAAI;EACtD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,GAAG,EAAC;EAC5C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,IAAI,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,IAAI,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,iCAAiC,GAAG,EAAE,IAAI;EACvD,EAAEmB,IAAM,CAAC,CAACC,UAAY,EAAC;EACvB,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,IAAI,EAAC;EAC7C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,kCAAkC,GAAG,EAAE,IAAI;EACxD,EAAED,IAAM,CAAC,CAACC,UAAY,EAAC;EACvB,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,KAAK,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,mCAAmC,GAAG,EAAE,IAAI;EACzD,EAAED,IAAM,CAAC,CAACC,UAAY,EAAC;EACvB,EAAE,gBAAgB,CAAC,EAAE,EAAE,eAAe,EAAE,MAAM,EAAC;EAC/C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECnjBD,MAAM,QAAEG,MAAI,WAAEhB,SAAO,EAAE,GAAG,EAAC;AAC3B;EACA;EACA;EACA;AACA,EAAO,MAAM,wBAAwB,GAAG,EAAE,IAAI;EAC9C,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAGgB,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjD,EAAE,IAAI,MAAK;AACX;EACA,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI;EACzB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG,EAAC;AACJ;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAEf,MAAQ,CAAC,IAAI,EAAE,4DAA4D,EAAC;AAC9E;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAC;EACxB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE,oBAAoB,EAAC;EAC5D,EAAEC,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAC;AACvC;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAED,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,iCAAiC,EAAC;EACxE,EAAEC,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAC;AACnC;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAED,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,GAAG,EAAE,iCAAiC,EAAC;EACvE,EAAEC,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAC;AAClD;EACA,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAC;EACxB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACtB,GAAG,EAAC;EACJ,EAAEA,OAAS,CAAC,KAAK,EAAE,EAAE,EAAC;AACtB;EACA,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,EAAE,IAAI;EACrC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAGgB,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjD,EAAE,IAAI,MAAK;EACX,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI;EACzB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAK;EACvB,GAAG,EAAC;EACJ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACxC,EAAEf,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE,oCAAoC,EAAC;EAC5E,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC7E,EAAEA,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EACnE,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAED,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,8CAA8C,EAAC;EACrF,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC5E,EAAEA,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAC;EACnC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAED,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,GAAG,EAAE,iCAAiC,EAAC;EACvE,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC3E,EAAEA,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAC;EAClD,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACtC,EAAED,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAC;EACrC,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC5E,EAAEA,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EACjE;EACA,EAAED,MAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE,4CAA4C,EAAC;EAC5G,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAC;EACtB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC7F,EAAEA,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAC;EACrC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACpC,EAAED,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC7F,EAAEA,OAAS,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAC9E,EAAEF,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,sBAAsB,GAAG,EAAE,IAAI;EAC5C,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGgB,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;EACpB,IAAI,MAAM,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE;EAC9B,GAAG,CAAC,EAAC;EACL,EAAEd,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC;EAC9B,IAAI,MAAM,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE;EAC9B,GAAG,CAAC,EAAC;EACL,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,EAAE,IAAI;EAClC,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGc,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,MAAM,IAAI,yBAAyB,KAAK,CAAC,GAAG,EAAC;EAC/C,EAAE,IAAI,CAAC,EAAE,GAAG,MAAK;EACjB,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;EACpB,IAAI,MAAM,EAAE,MAAM;EAClB,GAAG,CAAC,EAAC;EACL,EAAE,MAAM,SAAS,GAAGC,QAAU,CAAC,IAAI,EAAC;EACpC,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;EACpB,IAAI,MAAM,EAAE,CAAC;EACb,GAAG,EAAE;EACL,IAAI,MAAM,EAAE,GAAG;EACf,GAAG,EAAE;EACL,IAAI,MAAM,EAAE,CAAC;EACb,GAAG,CAAC,EAAC;EACL,EAAE,MAAM,SAAS,GAAGA,QAAU,CAAC,IAAI,EAAC;EACpC,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;EACpB,IAAI,MAAM,EAAE,CAAC;EACb,GAAG,EAAE;EACL,IAAI,MAAM,EAAE,CAAC;EACb,GAAG,EAAE;EACL,IAAI,MAAM,EAAE,GAAG;EACf,GAAG,EAAE;EACL,IAAI,MAAM,EAAE,CAAC;EACb,GAAG,CAAC,EAAC;EACL,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAC;EACzC,EAAEf,OAAS,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAC;EACzC,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAC;EACzC,EAAEA,OAAS,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAC;EACzC,EAAE,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAC;EACxD;EACA,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI;EAC1B,IAAI,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE;EAC9C,MAAM,OAAO,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,KAAI;EACtC,KAAK;EACL,GAAG,EAAC;EACJ,EAAEA,OAAS,CAAC,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAC;EACxL,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,uBAAuB,GAAG,EAAE,IAAI;EAC7C,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGc,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,MAAM,IAAI,yBAAyB,KAAK,CAAC,GAAG,EAAC;EAC/C,EAAE,IAAI,CAAC,EAAE,GAAG,MAAK;EACjB,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;EACpB,IAAI,MAAM,EAAE,MAAM;EAClB,GAAG,CAAC,EAAC;EACL,EAAE,MAAM,SAAS,GAAGC,QAAU,CAAC,IAAI,EAAC;EACpC,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;EACpB,IAAI,MAAM,EAAE,CAAC;EACb,GAAG,EAAE;EACL,IAAI,MAAM,EAAE,GAAG;EACf,GAAG,CAAC,EAAC;EACL,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAC;EACzC,EAAEf,OAAS,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAC;EACzC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,EAAE,IAAI;EAChC,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGc,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACxC,EAAEf,MAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,KAAK,EAAE,qCAAqC,EAAC;EAC3E,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,0BAA0B,GAAG,EAAE,IAAI;EAChD,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGe,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACvC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAC;EACjE,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,GAAE;EAChC,EAAEd,OAAS,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAC;EAClL,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,4BAA4B,GAAG,EAAE,IAAI;EAClD,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGc,MAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACvC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EAAC;EACjD,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,GAAE;EAChC,EAAEd,OAAS,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,oEAAoE,EAAC;EAC5N,CAAC;;;;;;;;;;;;;;EChLD;EACA;EACA;AACA,EAAO,MAAM,eAAe,GAAG,EAAE,IAAI;EACrC,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACrE,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAC;EACnC,EAAED,MAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,sBAAsB,EAAC;EACxE,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,MAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,+BAA+B,EAAC;EACjF,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,UAAU,GAAG,EAAE,IAAI;EAChC,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACrE;EACA;EACA;EACA,EAAE,IAAI,MAAK;EACX;EACA;EACA;EACA,EAAE,IAAI,YAAW;EACjB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EACpB,IAAI,KAAK,GAAG,EAAC;EACb,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EACpB,IAAI,WAAW,GAAG,EAAC;EACnB,GAAG,EAAC;EACJ,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAC;EACnC,EAAEC,MAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,4CAA4C,EAAC;EAC5F,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,MAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,qDAAqD,EAAC;EAC3G;EACA,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;EAC7B,EAAEA,MAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,kDAAkD,EAAC;EAClG,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,MAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,2DAA2D,EAAC;EACjH,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAIiB,QAAS,CAAC,WAAW,CAAC,CAAC,EAAC;EAC9C,EAAEjB,MAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,gDAAgD,EAAC;EACpF,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,MAAQ,CAAC,WAAW,CAAC,gBAAgB,EAAE,yDAAyD,EAAC;EACnG;EACA,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC;EAChB,EAAEA,MAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,+CAA+C,EAAC;EACnF,EAAE,aAAa,CAAC,gBAAgB,GAAE;EAClC,EAAEA,MAAQ,CAAC,WAAW,CAAC,gBAAgB,EAAE,wDAAwD,EAAC;EAClG,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,EAAE,IAAI;EACpC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChD,EAAE,MAAM,UAAU,GAAG,IAAIF,WAAY,CAAC,GAAG,EAAC;EAC1C,EAAE,MAAM,UAAU,GAAG,IAAIA,WAAY,CAAC,GAAG,EAAC;EAC1C,EAAE,MAAM,KAAK,GAAG,IAAIoB,QAAS,CAAC,MAAM,EAAC;EACrC,EAAE,MAAM,KAAK,GAAG,IAAIA,QAAS,CAAC,MAAM,EAAC;EACrC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;EACtC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,IAAIpB,WAAY,CAAC,KAAK,CAAC,CAAC,EAAC;EACnE,EAAE,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAC;EAClD,EAAEG,MAAQ,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE,8BAA8B,EAAC;EACtE,EAAEA,MAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE,mCAAmC,EAAC;EAChF,EAAEA,MAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE,mCAAmC,EAAC;EAChF,EAAEA,MAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE,gCAAgC,EAAC;EACpF,EAAED,SAAO,CAAC,KAAK,EAAC;EAChB,CAAC;;;;;;;;;EC5DD;EACA;EACA;AACA,EAAO,MAAM,oBAAoB,GAAG,EAAE,IAAI;EAC1C,EAAEC,MAAQ,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAC;EACpC,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,kBAAkB,EAAC;EACjD,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,eAAe,EAAC;EAC9C,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,iBAAiB,EAAC;EAChD,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,iBAAiB,EAAC;EAChD,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,gBAAgB,EAAC;EAC/C,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,iBAAiB,EAAC;EAChD,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,eAAe,EAAC;EAC9C,EAAEA,MAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,cAAc,EAAC;EAC7C,CAAC;;;;;;;EClBD;EACA;EACA;AACA,EAAO,MAAM,YAAY,GAAG,EAAE,IAAI;EAClC,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAChE,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,EAAC;AAC5C;EACA;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,EAAC;EACzB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC;AACnC;EACA;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAC;EACtB,EAAE,WAAW,CAAC,aAAa,GAAE;EAC7B,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAE,WAAW,CAAC,aAAa,GAAE;EAC7B,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,GAAG,EAAC;EACpC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC;AACnC;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAC;EACxB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAC;EACxB,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,QAAQ,EAAC;EACzC,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACpB,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,OAAO,EAAC;EACxC;EACA,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC;EACpC,EAAEC,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAC;EAC/G,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAAC;EACnD,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAC;EAC/G,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,EAAE,IAAI;EACjC,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC9D,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EAClB,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,EAAC;EAC3C,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EAClB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAED,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;EAC/B,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;EAC/B;EACA,EAAE,MAAM,OAAO,GAAG,IAAIJ,IAAK,GAAE;EAC7B,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,EAAC;EACxB,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAC;EACtB,EAAEK,OAAS,CAAC,IAAI,CAAC,MAAM,EAAE,sBAAsB,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAE;EACjE,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAED,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;EAC/B,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEC,OAAS,CAAC,IAAI,CAAC,MAAM,EAAE,sBAAsB,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAE;EACjE,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB;EACA,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAC;EACnB,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAED,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAC;EAChC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAC;AAChC;EACA;EACA,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAC;EAC1B,EAAE,WAAW,CAAC,aAAa,GAAE;EAC7B,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAC;EACvB,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAC;EACvB,EAAE,WAAW,CAAC,aAAa,GAAE;EAC7B,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,EAAC;EACvC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,EAAE,IAAI;EACnC,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAClE,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,EAAC;EAC7C,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC7B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC7B,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAEC,OAAS,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EACjD,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EACxC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EACjD,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EACxC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC9C,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACrB;EACA,EAAE,MAAM,IAAI,GAAG,IAAIL,IAAK,GAAE;EAC1B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAC;EAC1B,EAAEK,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC;EAClC,EAAE,WAAW,CAAC,aAAa,GAAE;EAC7B,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EAClB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EACxC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC;EAClC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC7C,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC;EAClC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EACxC,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC;EAC3B,EAAE,aAAa,CAAC,OAAO,GAAE;EACzB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EAC9C,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EACxC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;EAC7C,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EACxC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,OAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EAC9C,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,WAAW,GAAG,EAAE,IAAI;EACjC,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACzC,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,EAAC;EAC3C,EAAE,MAAM,KAAK,GAAG,IAAIJ,WAAY,CAAC,GAAG,EAAC;EACrC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC;EACzB,EAAE,MAAM,SAAS,GAAG,IAAIoB,QAAS,CAAC,SAAS,EAAC;EAC5C,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAC;EAC9B,EAAEjB,MAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,uCAAuC,EAAC;EACvE;EACA,EAAE,WAAW,CAAC,aAAa,GAAE;EAC7B,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAC;EACtC,EAAEA,MAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,oDAAoD,EAAC;EACpF,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,uCAAuC,EAAC;EACvE,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,oDAAoD,EAAC;EACpF,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC;EACnB,EAAEA,MAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,yBAAyB,EAAC;EACzD,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,oDAAoD,EAAC;EACpF,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,EAAE,IAAI;EACpC,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC1C,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,EAAC;EAC5C,EAAE,IAAI,OAAO,GAAG,EAAC;EACjB,EAAE,IAAI,gBAAgB,GAAG,CAAC,EAAC;EAC3B,EAAE,WAAW,CAAC,EAAE,CAAC,kBAAkB,4BAA4B,KAAK,IAAI;EACxE,IAAIA,MAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,EAAC;EAChC,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,EAAC;EAC/C,GAAG,EAAC;EACJ,EAAE,WAAW,CAAC,EAAE,CAAC,mBAAmB,4BAA4B,KAAK,IAAI;EACzE,IAAIA,MAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,EAAC;EAChC,IAAI,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC;EACvD,GAAG,EAAC;EACJ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAC;EACxB,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,gBAAgB,KAAK,CAAC,EAAC;EAClC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,gBAAgB,KAAK,CAAC,EAAC;EAClC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,cAAc,GAAG,EAAE,IAAI;EACpC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EACjD;EACA,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,EAAE,cAAc,EAAE,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAC;EACnF,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM;EAC1B,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAC;EAC1B,GAAG,EAAE,EAAE,EAAC;EACR,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC;EACnC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,aAAa,GAAG,EAAE,IAAI;EACnC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAC;EAC3C;EACA,EAAE,MAAM,KAAK,GAAG,IAAIF,KAAM,GAAE;EAC5B,EAAE,MAAM,KAAK,GAAG,IAAIA,KAAM,GAAE;EAC5B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;EAClC,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,EAAC;EAC5C,EAAE,MAAM,eAAe,GAAG,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC;EACzD,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAC;EACxB,EAAEE,MAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;EAC9C,EAAEA,MAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;EAClD,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAC;EACtC,EAAE,eAAe,CAAC,IAAI,GAAE;EACxB,EAAEA,MAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC;EACnC,EAAC;AACD;EACA;EACA;EACA;AACA,EAAO,MAAM,oBAAoB,GAAG,EAAE,IAAI;EAC1C;EACA;EACA;EACA,EAAE,MAAM,MAAM,uBAAuB,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAC;EACnE,EAAE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,IAAI,EAAE,IAAI,YAAYkB,IAAM,CAAC,KAAK,IAAI,CAAC,OAAO,YAAYC,WAAa,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,EAAC;EAClL,EAAE,MAAM,IAAI,GAAG,IAAIvB,IAAK,GAAE;EAC1B,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAC;EACnB,EAAE,MAAM,IAAI,GAAG,IAAIA,IAAK,GAAE;EAC1B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAC;EAChC,EAAE,WAAW,CAAC,IAAI,GAAE;EACpB,EAAEI,MAAQ,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAC;EAC/B,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAC;EACf,EAAEA,MAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAC;EACzD,CAAC;;;;;;;;;;;;;;EC3OD,IAAI,SAAS,EAAE;EACf,EAAEoB,cAAkB,CAAC,QAAQ,CAAC,IAAI,EAAC;EACnC,CAAC;EACD,QAAQ,CAAC;EACT,OAAEvG,KAAG,EAAE,KAAK,QAAEwG,MAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ;EAC3C,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI;EACnB;EACA,EAAE,IAAI,MAAM,EAAE;EACd,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,EAAC;EACjC,GAAG;EACH,CAAC,CAAC;;;;"}